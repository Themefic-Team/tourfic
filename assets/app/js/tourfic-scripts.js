/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./sass/app/js/free/apartment.js":
/*!***************************************!*\
  !*** ./sass/app/js/free/apartment.js ***!
  \***************************************/
/***/ (() => {

eval("(function ($, win) {\r\n    $(document).ready(function () {\r\n\r\n        // Create an instance of Notyf\r\n        const notyf = new Notyf({\r\n            ripple: true,\r\n            duration: 3000,\r\n            dismissable: true,\r\n            position: {\r\n                x: 'right',\r\n                y: 'bottom',\r\n            },\r\n        });\r\n\r\n        // Apartment Location Autocomplete\r\n        function tourfic_autocomplete(inp, arr) {\r\n            var currentFocus;\r\n        \r\n            // Show autocomplete suggestions on focus\r\n            inp.addEventListener(\"focus\", function () {\r\n                closeAllLists();\r\n                let a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"-autocomplete-list\");\r\n                a.classList.add(\"autocomplete-items\");\r\n                this.parentNode.appendChild(a);\r\n        \r\n                for (const [key, value] of Object.entries(arr)) {\r\n                    let b = document.createElement(\"DIV\");\r\n                    b.innerHTML = value;\r\n                    b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\r\n                    b.addEventListener(\"click\", function () {\r\n                        console.log('clickeed');\r\n                        let source = this.getElementsByTagName(\"input\")[0];\r\n                        inp.value = source.value;\r\n                        inp.closest('input').nextElementSibling.value = source.dataset.slug;\r\n                        setTimeout(() => {\r\n                            closeAllLists();\r\n                        },100);\r\n                    });\r\n                    a.appendChild(b);\r\n                }\r\n            });\r\n        \r\n            // Filter suggestions on keyup\r\n            inp.addEventListener(\"keyup\", function (e) {\r\n                var val = this.value.toLowerCase();\r\n                closeAllLists();\r\n                currentFocus = -1;\r\n                \r\n                if (!val) return false;\r\n        \r\n                let a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"-autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                this.parentNode.appendChild(a);\r\n        \r\n                var found = false;\r\n                for (const [key, value] of Object.entries(arr)) {\r\n                    if (value.toLowerCase().startsWith(val)) {\r\n                        found = true;\r\n                        let b = document.createElement(\"DIV\");\r\n                        b.innerHTML = `<strong>${value.substr(0, val.length)}</strong>${value.substr(val.length)}`;\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug;\r\n                \r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                }\r\n        \r\n                // If no match found, show \"No results found\"\r\n                if (!found) {\r\n                    let b = document.createElement(\"DIV\");\r\n                    b.innerHTML = `<span>${tf_params.no_found}</span>`;\r\n                    b.innerHTML += `<input type='hidden' value=\"\">`;\r\n                    b.addEventListener(\"click\", function () {\r\n                        inp.value = \"\";\r\n                        closeAllLists();\r\n                    });\r\n                    a.appendChild(b);\r\n                }\r\n            });\r\n        \r\n            // Handle keyboard navigation\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"-autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n        \r\n                if (e.keyCode == 40) {\r\n                    // Arrow DOWN\r\n                    currentFocus++;\r\n                    addActive(x);\r\n                } else if (e.keyCode == 38) {\r\n                    // Arrow UP\r\n                    currentFocus--;\r\n                    addActive(x);\r\n                } else if (e.keyCode == 13) {\r\n                    // ENTER key\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1 && x) {\r\n                        x[currentFocus].click();\r\n                    }\r\n                }\r\n            });\r\n        \r\n            function addActive(x) {\r\n                if (!x) return false;\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = x.length - 1;\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n        \r\n            function removeActive(x) {\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n        \r\n            function closeAllLists(elmnt) {\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt !== x[i] && elmnt !== inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n        \r\n            // Close when clicking outside\r\n            $(document).on('click', function (event) {\r\n                if (!$(event.target).closest(\"#tf-apartment-location\").length) {\r\n                    $(\"#tf-apartment-location-autocomplete-list\").hide();\r\n                }\r\n            });\r\n        }\r\n        \r\n\r\n        /**\r\n         * Ajax apartment booking\r\n         * @author Foysal\r\n         */\r\n        $(document).on('submit', 'form#tf-apartment-booking', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n\r\n            var formData = new FormData(this);\r\n            formData.append('action', 'tf_apartment_booking');\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n\r\n                    $('.tf-notice-wrapper').html(\"\").hide();\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status === 'error') {\r\n                        $.fancybox.close();\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        return false;\r\n                    } else {\r\n\r\n                        if (response.redirect_to) {\r\n                            window.location.replace(response.redirect_to);\r\n                        } else {\r\n                            jQuery(document.body).trigger('added_to_cart');\r\n                        }\r\n\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        });\r\n\r\n\r\n        /*\r\n        * Apartment Search submit\r\n        * @since 2.9.7\r\n        * @author Jahid\r\n        */\r\n        $(document).on('submit', '#tf_apartment_booking', function (e) {\r\n            e.preventDefault();\r\n            let form = $(this),\r\n                submitBtn = form.find('.tf-submit'),\r\n                formData = new FormData(form[0]);\r\n\r\n            formData.append('action', 'tf_apartments_search');\r\n            formData.append('_nonce', tf_params.nonce);\r\n\r\n            if (formData.get('from') == null || formData.get('to') == null) {\r\n                formData.append('from', tf_params.tf_apartment_min_price);\r\n                formData.append('to', tf_params.tf_apartment_max_price);\r\n            }\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: formData,\r\n                contentType: false,\r\n                processData: false,\r\n                beforeSend: function () {\r\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\r\n                    submitBtn.addClass('tf-btn-loading');\r\n                },\r\n                success: function (response) {\r\n                    let obj = JSON.parse(response);\r\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\r\n                    submitBtn.removeClass('tf-btn-loading');\r\n                    if (obj.status === 'error') {\r\n                        notyf.error(obj.message);\r\n                    }\r\n                    if (obj.status === 'success') {\r\n                        //location redirect to form action url with query string\r\n                        location.href = form.attr('action') + '?' + obj.query_string;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n        * Apartment room quick view\r\n        * */\r\n        $(document).on('click', '.tf-apt-room-qv', function (e) {\r\n            e.preventDefault();\r\n            $(\"#tour_room_details_loader\").show();\r\n            let post_id = $(this).data(\"post-id\");\r\n            let id = $(this).data(\"id\");\r\n            let data = {\r\n                action: 'tf_apt_room_details_qv',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                id: id\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                success: function (response) {\r\n                    $(\"#tf_apt_room_details_qv\").html(response);\r\n\r\n                    $(\"#tour_room_details_loader\").hide();\r\n                    $.fancybox.open({\r\n                        src: '#tf_apt_room_details_qv',\r\n                        type: 'inline',\r\n                    });\r\n                }\r\n\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Design 1 Apartment Room Popup\r\n         *\r\n         */\r\n        $(document).on('click', '.tf-apt-room-qv-desgin-1', function (e) {\r\n\r\n            e.preventDefault();\r\n            $(\"#tour_room_details_loader\").show();\r\n            let post_id = $(this).data(\"post-id\");\r\n            let id = $(this).data(\"id\");\r\n            let data = {\r\n                action: 'tf_apt_room_details_qv',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                id: id\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                success: function (response) {\r\n                    $(\".tf-room-popup\").html(response);\r\n                    $(\".tf-room-popup\").addClass(\"tf-show\")\r\n                    $(\"#tour_room_details_loader\").hide();\r\n                }\r\n\r\n            });\r\n        });\r\n\r\n\r\n        /**\r\n         * Apartment location autocomplete\r\n         * @author Foysal\r\n         */\r\n        var apartment_location_input = document.getElementById(\"tf-apartment-location\");\r\n        var apartment_locations = tf_params.apartment_locations;\r\n        if (apartment_location_input) {\r\n            tourfic_autocomplete(apartment_location_input, apartment_locations);\r\n        }\r\n       \r\n        /**\r\n         * Apartment Min and Max Range\r\n         * @author Foysal\r\n         */\r\n        if (tf_params.tf_apartment_min_price >= 0 && tf_params.tf_apartment_max_price > 0) {\r\n            $('.tf-apartment-filter-range').alRangeSlider({\r\n                range: {\r\n                    min: parseInt(tf_params.tf_apartment_min_price),\r\n                    max: parseInt(tf_params.tf_apartment_max_price),\r\n                    step: 1\r\n                },\r\n                initialSelectedValues: {\r\n                    from: parseInt(tf_params.tf_apartment_min_price),\r\n                    to: parseInt(tf_params.tf_apartment_max_price)\r\n                },\r\n                grid: false,\r\n                theme: \"dark\",\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Apartment highlights slider\r\n         * @author Foysal\r\n         */\r\n        $('.tf-apt-highlights-slider').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: false,\r\n            autoplaySpeed: 3000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Apartment room slider\r\n         * @author Foysal\r\n         */\r\n        $('.tf-apartment-room-slider').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: false,\r\n            autoplaySpeed: 3000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        // Design Default Room Slider\r\n\r\n        $('.tf-apartment-default-design-room-slider').slick({\r\n            arrows: true,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: false,\r\n            autoplaySpeed: 3000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            prevArrow:\"<button type='button' class='slick-prev'><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\">\\n\" +\r\n                \"  <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M16.2071 5.29289C16.5976 5.68342 16.5976 6.31658 16.2071 6.70711L10.9142 12L16.2071 17.2929C16.5976 17.6834 16.5976 18.3166 16.2071 18.7071C15.8166 19.0976 15.1834 19.0976 14.7929 18.7071L8.79289 12.7071C8.40237 12.3166 8.40237 11.6834 8.79289 11.2929L14.7929 5.29289C15.1834 4.90237 15.8166 4.90237 16.2071 5.29289Z\\\" fill=\\\"#2A3343\\\"/>\\n\" +\r\n                \"</svg></button>\",\r\n            nextArrow:\"<button type='button' class='slick-next'><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\">\\n\" +\r\n                \"  <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M8.79289 5.29289C9.18342 4.90237 9.81658 4.90237 10.2071 5.29289L16.2071 11.2929C16.5976 11.6834 16.5976 12.3166 16.2071 12.7071L10.2071 18.7071C9.81658 19.0976 9.18342 19.0976 8.79289 18.7071C8.40237 18.3166 8.40237 17.6834 8.79289 17.2929L14.0858 12L8.79289 6.70711C8.40237 6.31658 8.40237 5.68342 8.79289 5.29289Z\\\" fill=\\\"#2A3343\\\"/>\\n\" +\r\n                \"</svg></button>\",\r\n\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Related Apartment slider\r\n         * @author Foysal\r\n         */\r\n        $('.tf-related-apartment-slider').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: true,\r\n            autoplaySpeed: 3000,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Apartment 2 design Highlights sliers\r\n         *\r\n         * Slick\r\n         */\r\n        $('.tf-features-block-slides').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: false,\r\n            autoplaySpeed: 2000,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        $(document).on('click', '.tf-apartment-show-more', function (e) {\r\n            if ($(this).siblings('.tf-full-description')) {\r\n                $(this).siblings('.tf-full-description').show();\r\n                $(this).siblings('.tf-description').hide();\r\n                $(this).text(\"Show Less\");\r\n                $(this).addClass('tf-apartment-show-less');\r\n            }\r\n        });\r\n        \r\n        $(document).on('click', '.tf-apartment-show-less', function (e) {\r\n            if ($(this).siblings('.tf-full-description')) {\r\n                $(this).siblings('.tf-full-description').hide();\r\n                $(this).siblings('.tf-description').show();\r\n                $(this).text(\"Show More\");\r\n                $(this).removeClass('tf-apartment-show-less');\r\n            }\r\n        });\r\n        \r\n        $('.tf-single-review.tf_apartment .tf-single-details').each(function (index, val) {\r\n            if (index > 1) {\r\n                $(this).hide();\r\n            }\r\n        });\r\n\r\n        $(\".tf-apaartment-show-all\").on('click', function (e) { \r\n            $('.tf-single-review.tf_apartment .tf-single-details').each(function (index, val) {\r\n                $(val).show();\r\n            });\r\n\r\n            $('.show-all-review-wrap').hide();\r\n        });\r\n\r\n    });\r\n\r\n})(jQuery, window);\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/apartment.js?");

/***/ }),

/***/ "./sass/app/js/free/car.js":
/*!*********************************!*\
  !*** ./sass/app/js/free/car.js ***!
  \*********************************/
/***/ (() => {

eval("(function ($, win) {\r\n    \r\n\r\n    $(document).ready(function () {\r\n       \r\n\r\n        \r\n\r\n        // Create an instance of Notyf\r\n        const notyf = new Notyf({\r\n            ripple: true,\r\n            duration: 3000,\r\n            dismissable: true,\r\n            position: {\r\n                x: 'right',\r\n                y: 'bottom',\r\n            },\r\n        });\r\n\r\n        \r\n        // FAQ Accordion\r\n        $('.tf-car-faq-section .tf-faq-head').on(\"click\", function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-question-desc\").slideUp(400);\r\n                $(\".tf-faq-head\").removeClass(\"active\");\r\n                $('.tf-faq-col').removeClass('active');\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $this.next().slideToggle();\r\n            $(this).closest('.tf-faq-col').toggleClass('active');\r\n        });\r\n\r\n        // Tabs Section\r\n        $('.tf-details-menu ul li').on(\"click\", function () {\r\n            var $this = $(this);\r\n            $currentmenu = $this.attr('data-menu');\r\n            $('.tf-details-menu ul li').removeClass('active');\r\n\r\n            $('.tf-details-menu ul li[data-menu=\"' + $currentmenu + '\"]').addClass('active');\r\n        });\r\n\r\n       \r\n        \r\n        \r\n        \r\n        // Car Location Autocomplete\r\n\r\n        function tourfic_car_autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n\r\n            // Executes when some one click in the search form location\r\n            inp.addEventListener(\"focus\", function () {\r\n                    closeAllLists();\r\n                    let a = document.createElement(\"DIV\");\r\n                    a.setAttribute(\"id\", this.id + \"-autocomplete-list\");\r\n                    a.setAttribute(\"class\", \"autocomplete-items\");\r\n                    this.parentNode.appendChild(a);\r\n                    for (const [key, value] of Object.entries(arr)) {\r\n                        let b = document.createElement(\"DIV\");\r\n                        b.innerHTML = value;\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug;\r\n                            setTimeout(() => {\r\n                                closeAllLists();\r\n                            },100);\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                // }\r\n            })\r\n\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n            inp.addEventListener(\"keyup\", function (e) {\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                var $notfound = [];\r\n                /*for each item in the array...*/\r\n                for (const [key, value] of Object.entries(arr)) {\r\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                        $notfound.push('found');\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += value.substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n\r\n                    } else {\r\n                        $notfound.push('notfound');\r\n                    }\r\n                }\r\n\r\n                if ($notfound.indexOf('found') == -1) {\r\n                    /*create a DIV element for each matching element:*/\r\n                    b = document.createElement(\"DIV\");\r\n                    /*make the matching letters bold:*/\r\n\r\n                    b.innerHTML += tf_params.no_found;\r\n                    /*insert a input field that will hold the current array item's value:*/\r\n                    b.innerHTML += \"<input type='hidden' value=''>\";\r\n                    /*execute a function when someone clicks on the item value (DIV element):*/\r\n                    b.addEventListener(\"click\", function (e) {\r\n                        /*insert the value for the autocomplete text field:*/\r\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                        /*close the list of autocompleted values,\r\n                        (or any other open lists of autocompleted values:*/\r\n                        closeAllLists();\r\n                    });\r\n                    a.appendChild(b);\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode == 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].trigger(\"click\");;\r\n                    }\r\n                }\r\n            });\r\n\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt != x[i] && elmnt != inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*execute a function when someone clicks in the document:*/\r\n            $(document).on('click', function (event) {\r\n                if (!$(event.target).closest(\"#tf_dropoff_location, #tf_pickup_location\").length) {\r\n                    $(\"#tf_pickup_location-autocomplete-list,#tf_dropoff_location-autocomplete-list\").hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        // Car location autocomplete\r\n        var car_pickup_input = document.getElementById(\"tf_pickup_location\");\r\n        var car_locations = tf_params.car_locations;\r\n        if (car_pickup_input) {\r\n            tourfic_car_autocomplete(car_pickup_input, car_locations);\r\n        }\r\n\r\n        var car_dropoff_input = document.getElementById(\"tf_dropoff_location\");\r\n        if (car_dropoff_input) {\r\n            tourfic_car_autocomplete(car_dropoff_input, car_locations);\r\n        }\r\n\r\n        $(\".tf-booking-popup-header .tf-close-popup\").on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            $('.tf-car-booking-popup').hide();\r\n        });\r\n\r\n\r\n        /*\r\n        * Car Booking Popup\r\n        * @author Jahid\r\n        */\r\n        $(\".tf-car-booking\").on('click', function (e) {\r\n            e.preventDefault();\r\n            $this = $(this);\r\n\r\n            $('.tf-booking-content-wraper').html(\"\");\r\n            var pickup = $('#tf_pickup_location').val();\r\n            let dropoff = $('#tf_dropoff_location').val();\r\n            let pickup_date = $('.tf_pickup_date').val();\r\n            let dropoff_date = $('.tf_dropoff_date').val();\r\n            let pickup_time = $('.tf_pickup_time').val();\r\n            let dropoff_time = $('.tf_dropoff_time').val();\r\n            let post_id = $('#post_id').val();\r\n\r\n            if( !pickup || !dropoff || !pickup_date || !dropoff_date || !pickup_time || !dropoff_time ){\r\n                $('.error-notice').show();\r\n                $('.error-notice').text('Fill up the all fields');\r\n                return;\r\n            }\r\n\r\n            if($this.attr('data-partial')){\r\n                $('#tf_partial_payment').val($this.attr('data-partial'));\r\n            }\r\n\r\n            var data = {\r\n                action: 'tf_car_booking_pupup',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                pickup_date: pickup_date,\r\n                pickup_time: pickup_time,\r\n                dropoff_date: dropoff_date,\r\n                dropoff_time: dropoff_time\r\n            };\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: data,\r\n                beforeSend: function () {\r\n                    $this.addClass('tf-btn-loading');\r\n                },\r\n                success: function (data) {\r\n                    $('.tf-booking-content-wraper').html(data);\r\n                    $('.error-notice').hide();\r\n                    $('.tf-car-booking-popup').css('display', 'flex');\r\n                    $this.removeClass('tf-btn-loading');\r\n                    if($(window).width() < 768){\r\n                        $(\".tf-date-select-box\").hide();\r\n                        $(\".tf-mobile-booking-btn\").hide();\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        /*\r\n        * Car Archive Booking Popup\r\n        * @author Jahid\r\n        */\r\n        $(document).on('click', '.tf-car-quick-booking', function (e) {\r\n            e.preventDefault();\r\n            $this = $(this);\r\n            $('.tf-booking-content-wraper').html(\"\");\r\n            let post_id = $this.closest('.tf-booking-btn').find('#post_id').val();\r\n            let pickup_date = $this.closest('.tf-booking-btn').find('#pickup_date').val();\r\n            let dropoff_date = $this.closest('.tf-booking-btn').find('#dropoff_date').val();\r\n            let pickup_time = $this.closest('.tf-booking-btn').find('#pickup_time').val();\r\n            let dropoff_time = $this.closest('.tf-booking-btn').find('#dropoff_time').val();\r\n\r\n            var data = {\r\n                action: 'tf_car_booking_pupup',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                pickup_date: pickup_date,\r\n                pickup_time: pickup_time,\r\n                dropoff_date: dropoff_date,\r\n                dropoff_time: dropoff_time\r\n            };\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: data,\r\n                beforeSend: function () {\r\n                    $this.addClass('tf-btn-loading');\r\n                },\r\n                success: function (data) {\r\n                    $this.closest('.tf-booking-btn').find('.tf-booking-content-wraper').html(data);\r\n                    $this.closest('.tf-booking-btn').find('.tf-car-booking-popup').css('display', 'flex');\r\n                    $this.removeClass('tf-btn-loading');\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        $(document).on('click touchstart', '.tf-booking-content-wraper .booking-next', function (e) {\r\n            e.preventDefault();\r\n            let $this = $(this);\r\n\r\n            let protections = $('input[name=\"protections[]\"]');\r\n\r\n\r\n            let validationProtections = protectionValidation(protections);\r\n\r\n            if( validationProtections ){\r\n                return;\r\n            }else{\r\n                $('.tf-booking-tabs ul li').removeClass('active');\r\n                $('.tf-booking-tabs ul li.booking').addClass('active');\r\n\r\n                $('.tf-protection-content').hide();\r\n                $('.tf-booking-bar').hide();\r\n\r\n                $('.tf-booking-form-fields').show();\r\n            }\r\n        });\r\n\r\n        /*\r\n        * Car Booking\r\n        * @author Jahid\r\n        */\r\n\r\n        const BookingVallidation = (booking) => {\r\n            let hasErrors = [];\r\n            \r\n            $('.error-text').text(\"\");\r\n            booking.find('.tf-single-field').each(function () {\r\n                $(this).find('input, select').each(function () {\r\n                    if ($(this).attr('data-required')) {\r\n                        if ($(this).val() == \"\") {\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                $(this).find('input[type=\"radio\"], input[type=\"checkbox\"]').each(function () {\r\n                    if ($(this).attr('data-required')) {\r\n                        const radioName = $(this).attr('name');\r\n                        const isChecked = $('input[name=\"' + radioName + '\"]:checked').length > 0;\r\n\r\n                        if (!isChecked) {\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).parent().siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            if (hasErrors.includes(true)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const protectionValidation = (protections) => {\r\n\r\n            var attrCount = 0;\r\n            var response = [];\r\n\r\n            $(protections).each(function() {\r\n                attrCount += Array.from(this.attributes).filter( function(a) {\r\n                    return a.nodeName.startsWith('data-required');\r\n                }).length\r\n            })\r\n            \r\n            protections.each(function (i, protection) {\r\n\r\n                if ( $(protection).data(\"required\") ) {\r\n                    \r\n                    if (! $(protection).is(':checked')) {\r\n                        response.push(true);\r\n                    } else {\r\n                       response.push(false);\r\n                    }\r\n                }\r\n            });\r\n\r\n            if( response.includes(true) ){\r\n                if( attrCount > 1 ){\r\n                    notyf.error('( * ) fields are required');\r\n                } else {\r\n                    notyf.error('( * ) field is required');\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n        $(document).on('click touchstart', '.booking-process', function (e) {\r\n            \r\n            if (e.type === 'touchstart') {\r\n                $(this).off('click');\r\n            }\r\n            let $this = $(this);\r\n            \r\n            let extra_ids = $(\"input[name='selected_extra[]']\").map(function() {\r\n                return $(this).val();\r\n            }).get();\r\n\r\n            let extra_qty = $(\"input[name='selected_qty[]']\").map(function() {\r\n                return $(this).val();\r\n            }).get();\r\n\r\n            var travellerData = {};\r\n            if($this.hasClass('tf-offline-booking')){\r\n                let booking = $(this).closest('.tf-booking-form-fields');\r\n                let Validation_response = BookingVallidation(booking);\r\n                if(Validation_response){\r\n                    return;\r\n                }\r\n                // Text, email, date inputs\r\n                $(\"input[name^='traveller[']\").each(function() {\r\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\r\n                    travellerData[name] = $(this).val();\r\n                });\r\n\r\n                // Select dropdowns\r\n                $(\"select[name^='traveller[']\").each(function() {\r\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\r\n                    travellerData[name] = $(this).val();\r\n                });\r\n\r\n                // Checkbox and Radio buttons\r\n                $(\"input[type='checkbox'][name^='traveller[']:checked, input[type='radio'][name^='traveller[']:checked\").each(function() {\r\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\r\n                    if (!travellerData[name]) {\r\n                        travellerData[name] = [];\r\n                    }\r\n                    travellerData[name].push($(this).val());\r\n                });\r\n\r\n            }\r\n    \r\n            if($this.hasClass('tf-final-step')){\r\n                var pickup = $('#tf_pickup_location').val();\r\n                let dropoff = $('#tf_dropoff_location').val();\r\n                let pickup_date = $('.tf_pickup_date').val();\r\n                let dropoff_date = $('.tf_dropoff_date').val();\r\n                let pickup_time = $('.tf_pickup_time').val();\r\n                let dropoff_time = $('.tf_dropoff_time').val();\r\n\r\n                if( !pickup || !dropoff || !pickup_date || !dropoff_date || !pickup_time || !dropoff_time ){\r\n                    $('.error-notice').show();\r\n                    $('.error-notice').text('Fill up the all fields');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            $('.error-notice').hide();\r\n\r\n            var pickup = $('#tf_pickup_location').val();\r\n            let dropoff = $('#tf_dropoff_location').val();\r\n            let pickup_date = $('.tf_pickup_date').val();\r\n            let dropoff_date = $('.tf_dropoff_date').val();\r\n            let pickup_time = $('.tf_pickup_time').val();\r\n            let dropoff_time = $('.tf_dropoff_time').val();\r\n            let post_id = $('#post_id').val();\r\n            var protection = $('input[name=\"protections[]\"]:checked').map(function() {\r\n                return $(this).val();  // Get the value of each checked checkbox\r\n            }).get();\r\n\r\n            let protections = $('input[name=\"protections[]\"]');\r\n\r\n            \r\n            let validationProtections = protectionValidation(protections);\r\n\r\n            if( validationProtections ){\r\n                return;\r\n            }\r\n\r\n            let partial_payment = $('#tf_partial_payment').val();\r\n\r\n            var data = {\r\n                action: 'tf_car_booking',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                pickup: pickup,\r\n                dropoff: dropoff,\r\n                pickup_date: pickup_date,\r\n                dropoff_date: dropoff_date,\r\n                pickup_time: pickup_time,\r\n                dropoff_time: dropoff_time,\r\n                protection: protection,\r\n                partial_payment: partial_payment,\r\n                extra_ids: extra_ids,\r\n                extra_qty: extra_qty,\r\n                travellerData: travellerData\r\n            };\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: data,\r\n                beforeSend: function () {\r\n                    $this.addClass('tf-btn-loading');\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n                    if (response.status == 'error') {\r\n\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        $('.tf-car-booking-popup').hide();\r\n                        $this.removeClass('tf-btn-loading');\r\n                        if($('.tf-protection-content')){\r\n                            $('.tf-protection-content').show();\r\n                            $('.tf-booking-bar').show();\r\n                            $('.tf-booking-form-fields').hide();\r\n\r\n                            $('.tf-booking-tabs ul li').removeClass('active');\r\n                            $('.tf-booking-tabs ul li.protection').addClass('active');\r\n                        }else{\r\n                            $('.tf-booking-form-fields').show();\r\n                            $('.tf-booking-tabs ul li').removeClass('active');\r\n                            $('.tf-booking-tabs ul li.booking').addClass('active');\r\n                        }\r\n                        return false;\r\n                    } else {\r\n                        if (response.without_payment == 'false') {\r\n                            if (response.status == 'error') {\r\n\r\n                                if (response.errors) {\r\n                                    response.errors.forEach(function (text) {\r\n                                        notyf.error(text);\r\n                                    });\r\n                                }\r\n\r\n                                return false;\r\n                            } else {\r\n\r\n                                if (response.redirect_to) {\r\n                                    window.location.replace(response.redirect_to);\r\n                                } else {\r\n                                    jQuery(document.body).trigger('added_to_cart');\r\n                                }\r\n\r\n                            }\r\n                        }else{\r\n                            $('.tf-car-booking-popup').hide();\r\n                            $('.tf-withoutpayment-booking-confirm').addClass('show');\r\n                            $this.removeClass('tf-btn-loading');\r\n                            $('#tf_pickup_location').val('');\r\n                            $('#tf_dropoff_location').val('');\r\n                            $('.tf_pickup_date').val('');\r\n                            $('.tf_dropoff_date').val('');\r\n                            $('.tf_pickup_time').val('');\r\n                            $('.tf_dropoff_time').val('');\r\n                            if($('.tf-protection-content')){\r\n                                $('.tf-protection-content').show();\r\n                                $('.tf-booking-bar').show();\r\n                                $('.tf-booking-form-fields').hide();\r\n\r\n                                $('.tf-booking-tabs ul li').removeClass('active');\r\n                                $('.tf-booking-tabs ul li.protection').addClass('active');\r\n                            }else{\r\n                                $('.tf-booking-form-fields').show();\r\n                                $('.tf-booking-tabs ul li').removeClass('active');\r\n                                $('.tf-booking-tabs ul li.booking').addClass('active');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        /*\r\n        * Car Search submit\r\n        * @author Jahid\r\n        */\r\n        $(document).on('submit', '#tf_car_booking', function (e) {\r\n            e.preventDefault();\r\n            let form = $(this),\r\n                submitBtn = form.find('.tf-submit'),\r\n                formData = new FormData(form[0]);\r\n            \r\n            formData.append('action', 'tf_car_search');\r\n            formData.append('_nonce', tf_params.nonce);\r\n\r\n            if (formData.get('from') == null || formData.get('to') == null) {\r\n                formData.append('from', tf_params.tf_car_min_price);\r\n                formData.append('to', tf_params.tf_car_max_price);\r\n            }\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: formData,\r\n                contentType: false,\r\n                processData: false,\r\n                beforeSend: function () {\r\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\r\n                    submitBtn.addClass('tf-btn-loading');\r\n                },\r\n                success: function (response) {\r\n                    let obj = JSON.parse(response);\r\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\r\n                    submitBtn.removeClass('tf-btn-loading');\r\n                    if (obj.status === 'error') {\r\n                        notyf.error(obj.message);\r\n                    }\r\n                    if (obj.status === 'success') {\r\n                        //location redirect to form action url with query string\r\n                        location.href = form.attr('action') + '?' + obj.query_string;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n        * Car Quick Booking\r\n        * @author Jahid\r\n        */\r\n\r\n        $(\".quick-booking\").on('click', function (e) {\r\n            let $this = $(this);\r\n\r\n            var pickup = $('#tf_pickup_location').val();\r\n            let dropoff = $('#tf_dropoff_location').val();\r\n            let pickup_date = $this.closest('.tf-booking-btn').find('#pickup_date').val();\r\n            let dropoff_date = $this.closest('.tf-booking-btn').find('#dropoff_date').val();\r\n            let pickup_time = $this.closest('.tf-booking-btn').find('#pickup_time').val();\r\n            let dropoff_time = $this.closest('.tf-booking-btn').find('#dropoff_time').val();\r\n            let post_id = $this.closest('.tf-booking-btn').find('#post_id').val();\r\n\r\n            var data = {\r\n                action: 'tf_car_booking',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                pickup: pickup,\r\n                dropoff: dropoff,\r\n                pickup_date: pickup_date,\r\n                dropoff_date: dropoff_date,\r\n                pickup_time: pickup_time,\r\n                dropoff_time: dropoff_time\r\n            };\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: data,\r\n                beforeSend: function () {\r\n                    $this.addClass('tf-btn-loading');\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n                    if (response.without_payment == 'false') {\r\n                        if (response.status == 'error') {\r\n\r\n                            if (response.errors) {\r\n                                response.errors.forEach(function (text) {\r\n                                    notyf.error(text);\r\n                                });\r\n                            }\r\n\r\n                            return false;\r\n                        } else {\r\n\r\n                            if (response.redirect_to) {\r\n                                window.location.replace(response.redirect_to);\r\n                            } else {\r\n                                jQuery(document.body).trigger('added_to_cart');\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        $(\".tf-booking-btn .booking-process\").on(\"click touchstart\", function (e) {\r\n            if(e.type === 'touchstart'){\r\n                $(this).off('click');\r\n            }\r\n            let $this = $(this);\r\n\r\n            var travellerData = {};\r\n            if($this.hasClass('tf-offline-booking')){\r\n                let booking = $(this).closest('.tf-booking-form-fields');\r\n                let Validation_response = BookingVallidation(booking);\r\n                if(Validation_response){\r\n                    return;\r\n                }\r\n                // Text, email, date inputs\r\n                $(\"input[name^='traveller[']\").each(function() {\r\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\r\n                    travellerData[name] = $(this).val();\r\n                });\r\n\r\n                // Select dropdowns\r\n                $(\"select[name^='traveller[']\").each(function() {\r\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\r\n                    travellerData[name] = $(this).val();\r\n                });\r\n\r\n                // Checkbox and Radio buttons\r\n                $(\"input[type='checkbox'][name^='traveller[']:checked, input[type='radio'][name^='traveller[']:checked\").each(function() {\r\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\r\n                    if (!travellerData[name]) {\r\n                        travellerData[name] = [];\r\n                    }\r\n                    travellerData[name].push($(this).val());\r\n                });\r\n            }\r\n    \r\n            var pickup = $('#tf_pickup_location').val();\r\n            let dropoff = $('#tf_dropoff_location').val();\r\n            let partial_payment = $('#tf_partial_payment').val();\r\n            let pickup_date = $this.closest('.tf-booking-btn').find('#pickup_date').val();\r\n            let dropoff_date = $this.closest('.tf-booking-btn').find('#dropoff_date').val();\r\n            let pickup_time = $this.closest('.tf-booking-btn').find('#pickup_time').val();\r\n            let dropoff_time = $this.closest('.tf-booking-btn').find('#dropoff_time').val();\r\n            let post_id = $this.closest('.tf-booking-btn').find('#post_id').val();\r\n\r\n            var protection = $('input[name=\"protections[]\"]:checked').map(function() {\r\n                return $(this).val();  // Get the value of each checked checkbox\r\n            }).get();\r\n\r\n            let protections = $('input[name=\"protections[]\"]');\r\n            \r\n            let validationProtections = protectionValidation(protections);\r\n\r\n            if( validationProtections ){\r\n                return;\r\n            }\r\n\r\n            var data = {\r\n                action: 'tf_car_booking',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                pickup: pickup,\r\n                dropoff: dropoff,\r\n                pickup_date: pickup_date,\r\n                dropoff_date: dropoff_date,\r\n                pickup_time: pickup_time,\r\n                dropoff_time: dropoff_time,\r\n                protection: protection,\r\n                partial_payment: partial_payment,\r\n                travellerData: travellerData\r\n            };\r\n            \r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: data,\r\n                beforeSend: function () {\r\n                    $this.addClass('tf-btn-loading');\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n                    if (response.status == 'error') {\r\n\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        $('.tf-car-booking-popup').hide();\r\n                        $this.removeClass('tf-btn-loading');\r\n                        return false;\r\n                    } else {\r\n                        if (response.without_payment == 'false') {\r\n                            if (response.status == 'error') {\r\n\r\n                                if (response.errors) {\r\n                                    response.errors.forEach(function (text) {\r\n                                        notyf.error(text);\r\n                                    });\r\n                                }\r\n\r\n                                return false;\r\n                            } else {\r\n\r\n                                if (response.redirect_to) {\r\n                                    window.location.replace(response.redirect_to);\r\n                                } else {\r\n                                    jQuery(document.body).trigger('added_to_cart');\r\n                                }\r\n\r\n                            }\r\n                        }else{\r\n                            $('.tf-car-booking-popup').hide();\r\n                            $('.tf-withoutpayment-booking-confirm').addClass('show');\r\n                            $this.removeClass('tf-btn-loading');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n\r\n        /*\r\n        * Car Single Price Calculation\r\n        * @author Jahid\r\n        */\r\n\r\n        $(document).on('change', '.tf-car-booking-form .tf_pickup_date, .tf-car-booking-form .tf_pickup_time, .tf-car-booking-form .tf_dropoff_date, .tf-car-booking-form .tf_dropoff_time', function (e) {\r\n            \r\n            let extra_ids = $(\"input[name='selected_extra[]']\").map(function() {\r\n                return $(this).val();\r\n            }).get();\r\n\r\n            let extra_qty = $(\"input[name='selected_qty[]']\").map(function() {\r\n                return $(this).val();\r\n            }).get();\r\n\r\n            let pickup_date = $('.tf_pickup_date').val();\r\n            let dropoff_date = $('.tf_dropoff_date').val();\r\n            let pickup_time = $('.tf_pickup_time').val();\r\n            let dropoff_time = $('.tf_dropoff_time').val();\r\n            let post_id = $('#post_id').val();\r\n\r\n            if( !pickup_date || !dropoff_date || !pickup_time || !dropoff_time ){\r\n                return;\r\n            }\r\n            var data = {\r\n                action: 'tf_car_price_calculation',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                pickup_date: pickup_date,\r\n                dropoff_date: dropoff_date,\r\n                pickup_time: pickup_time,\r\n                dropoff_time: dropoff_time,\r\n                extra_ids: extra_ids,\r\n                extra_qty: extra_qty,\r\n            };\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: data,\r\n                beforeSend: function () {\r\n                    $('.tf-date-select-box').addClass('tf-box-loading');\r\n                },\r\n                success: function (response) {\r\n                    $('.tf-cancellation-box').html('');\r\n                    $('.tf-cancellation-box').hide();\r\n                    if(response){\r\n                        if(response.data.total_price){\r\n                            $('.tf-price-header h2').html(response.data.total_price);\r\n                        }\r\n                        if(response.data.cancellation){\r\n                            $('.tf-cancellation-box').html(response.data.cancellation);\r\n                            $('.tf-cancellation-box').show();\r\n                        }\r\n                        $('.tf-date-select-box').removeClass('tf-box-loading');\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n        /*\r\n        * Car Archive View\r\n        * @author Jahid\r\n        */\r\n         $(document).on('click', '.tf-archive-header .tf-archive-view ul li', function (e) {\r\n            $('.tf-archive-header .tf-archive-view ul li').removeClass('active');\r\n            let $this = $(this);\r\n            $this.addClass('active');\r\n            let view = $this.attr('data-view');\r\n            if(view=='grid'){\r\n                $('.tf-car-details-column .tf-car-archive-result .tf-car-result').removeClass('list-view');\r\n                $('.tf-car-details-column .tf-car-archive-result .tf-car-result').addClass('grid-view');\r\n            }else{\r\n                $('.tf-car-details-column .tf-car-archive-result .tf-car-result').addClass('list-view');\r\n                $('.tf-car-details-column .tf-car-archive-result .tf-car-result').removeClass('grid-view');\r\n            }\r\n        });\r\n\r\n        if($('.tf-single-car-details-warper .tf-details-menu').length){\r\n            // Booking Bar Show\r\n            $(window).scroll(function() {\r\n                // Check the position of the target div\r\n                var targetOffset = $('.tf-single-car-details-warper .tf-details-menu').offset().top;\r\n                var targetHeight = $('.tf-single-car-details-warper .tf-details-menu').outerHeight(); // Get the full height of the div including padding\r\n                var targetBottom = targetOffset + targetHeight;\r\n\r\n                var scrollPosition = $(window).scrollTop();\r\n        \r\n                // If the user has scrolled past the target div, show the other div\r\n                if (scrollPosition > targetBottom) {\r\n                    $('.tf-single-booking-bar').fadeIn(); // You can change this to show() or add animations\r\n                } else {\r\n                    $('.tf-single-booking-bar').fadeOut();\r\n                }\r\n            });\r\n        }\r\n\r\n        // Back to Booking Form\r\n        $(document).on('click', '.tf-back-to-booking', function (e) {\r\n            e.preventDefault(); \r\n            $('.tf-single-booking-bar').fadeOut();\r\n            var bookingBarHeight = $('.tf-single-booking-bar').outerHeight() || 0;\r\n            $('html, body').animate({\r\n                scrollTop: $('.tf-date-select-box').offset().top - bookingBarHeight\r\n            }); \r\n        });        \r\n\r\n        // Social Share\r\n        $('.single-tf_carrental .tf-single-template__one .tf-share-toggle').on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            $('.tf-share-toggle').toggleClass('actives');\r\n            $('.share-car-content').toggleClass('show');\r\n        });\r\n\r\n        // Instructions showing\r\n        $(document).on('click', '.tf-instraction-showing', function (e) {\r\n            $('.tf-car-instraction-popup').css('display', 'flex');\r\n        });   \r\n\r\n        // Instructions Popup Close\r\n        $(\".tf-instraction-popup-header .tf-close-popup\").on(\"click touchstart\", function (e) {\r\n            e.preventDefault();\r\n            $('.tf-car-instraction-popup').hide();\r\n        });\r\n\r\n        $(\".tf-confirm-popup .tf-booking-times\").on(\"click touchstart\", function (e) {\r\n            e.preventDefault();\r\n            $('.tf-withoutpayment-booking-confirm').removeClass('show');\r\n        })\r\n\r\n        // Showing Total into a protections\r\n        $(document).on('change', '.protection-checkbox', function (e) {\r\n            let total_price = 0;\r\n            let prev_total = parseFloat($(\"#tf_total_proteciton_price\").val()) || 0; // Parse as float, default to 0 if empty\r\n            let single_price = parseFloat($(this).parent().parent().find('#tf_single_protection_price').val()) || 0; // Parse as float\r\n        \r\n            if ($(this).is(':checked')) {\r\n                total_price = prev_total + single_price;\r\n            } else {\r\n                total_price = prev_total - single_price;\r\n            }\r\n        \r\n            // Update total and display it\r\n            $('#tf_total_proteciton_price').val(total_price.toFixed(2)); // Format as float with 2 decimal places\r\n            $('#tf_proteciton_subtotal').text(total_price.toFixed(2)); // Display formatted total\r\n        });\r\n\r\n        /*\r\n        * Mobile Booking button\r\n        * @author Jahid\r\n        */\r\n        $(\".tf-mobile-booking-btn button\").on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            var $button = $(this);\r\n\r\n            // Toggle the visibility of .tf-date-select-box\r\n            $('.tf-date-select-box').slideToggle( function () {\r\n                // Check visibility after the toggle animation completes\r\n                if ($(this).is(':visible')) {\r\n                    $button.text('Hide');\r\n                } else {\r\n                    $button.text('Book Now');\r\n                }\r\n            });\r\n        });\r\n\r\n    \r\n    });\r\n\r\n    \r\n     \r\n     \r\n   \r\n\r\n})(jQuery, window);\r\n\r\n\r\n\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/car.js?");

/***/ }),

/***/ "./sass/app/js/free/hotel.js":
/*!***********************************!*\
  !*** ./sass/app/js/free/hotel.js ***!
  \***********************************/
/***/ (() => {

eval("(function ($, win) {\r\n    $(document).ready(function () {\r\n\r\n        // Create an instance of Notyf\r\n        const notyf = new Notyf({\r\n            ripple: true,\r\n            duration: 3000,\r\n            dismissable: true,\r\n            position: {\r\n                x: 'right',\r\n                y: 'bottom',\r\n            },\r\n        });\r\n\r\n        /**\r\n         * Hotel room availability ajax filter\r\n         * @author Fida\r\n         */\r\n        const tfRoomFilter = () => {\r\n            // Child & Child Type\r\n            var adult_field_type = $(\"#adults\").attr('type');\r\n            var child_field_type = $(\"#children\").attr('type');\r\n            if ($.trim($('input[name=check-in-out-date]').val()) == '') {\r\n\r\n                if ($('#tf-required').length === 0) {\r\n                    if($('.tf_booking-dates .tf_label-row').length === 1){\r\n                        if(tf_params.hotel_single_template == 'design-3'){\r\n                            $('.tf_booking-dates .tf_label-row').addClass('tf-date-required');\r\n                            $('.tf-hotel-error-msg').show();\r\n                        } else {\r\n                            $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\"><b>' + tf_params.field_required + '</b></span>');\r\n                        }\r\n                    }else{\r\n                        $(\".tf-check-in-out-date\").trigger(\"click\");\r\n                    }\r\n                }\r\n                return;\r\n            } else {\r\n                if ($('#tf-required').length === 1) {\r\n                    if(tf_params.hotel_single_template == 'design-3'){\r\n                        $('.tf_booking-dates .tf_label-row').removeClass('tf-date-required');\r\n                        $('.tf-hotel-error-msg').hide();\r\n                    } else {\r\n                        $('.tf_booking-dates .tf_label-row .required').html('');\r\n                    }\r\n                }\r\n            }\r\n            //get the checked values of features\r\n            var features = [];\r\n            $('.tf-room-checkbox :checkbox:checked').each(function (i) {\r\n                features[i] = $(this).val();\r\n            });\r\n            var tf_room_avail_nonce = $(\"input[name=tf_room_avail_nonce]\").val();\r\n            var post_id = $('input[name=post_id]').val();\r\n            if (adult_field_type == \"number\" || adult_field_type == \"tel\") {\r\n                var adult = $('#adults').val();\r\n            } else {\r\n                var adult = $('select[name=adults] option').filter(':selected').val();\r\n            }\r\n            if (child_field_type == \"number\" || child_field_type == \"tel\") {\r\n                var child = $('#children').val();\r\n            } else {\r\n                var child = $('select[name=children] option').filter(':selected').val();\r\n            }\r\n            //var features = $('input[name=features]').filter(':checked').val();\r\n            var children_ages = $('input[name=children_ages]').val();\r\n            var check_in_out = $('input[name=check-in-out-date]').val();\r\n\r\n            var data = {\r\n                action: 'tf_room_availability',\r\n                tf_room_avail_nonce: tf_room_avail_nonce,\r\n                post_id: post_id,\r\n                adult: adult,\r\n                child: child,\r\n                features: features,\r\n                children_ages: children_ages,\r\n                check_in_out: check_in_out,\r\n            };\r\n\r\n            jQuery.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'post',\r\n                data: data,\r\n                beforeSend: function () {\r\n                    $(\"#tf-single-hotel-avail .tf-submit\").addClass('tf-btn-loading');\r\n                },\r\n                success: function (data) {\r\n                    if( $(\"#rooms\").length > 0){\r\n                        $('html, body').animate({\r\n                            scrollTop: $(\"#rooms\").offset().top\r\n                        }, 500);\r\n                        $(\"#rooms\").html(data);\r\n                        $('.tf-room-filter').show();\r\n                        $(\"#tf-single-hotel-avail .tf-submit\").removeClass('tf-btn-loading');\r\n                     } else {\r\n                         notyf.error(tf_params.no_room_found);\r\n                         $(\"#tf-single-hotel-avail .tf-submit\").removeClass('tf-btn-loading');\r\n                     }\r\n                 },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                }\r\n            });\r\n        }\r\n\r\n        $(document).on('change', 'input[name=check-in-out-date]', function () {\r\n            if(tf_params.hotel_single_template == 'design-3'){\r\n                if($.trim($('input[name=check-in-out-date]').val()) !== '') {\r\n                    $('.tf_booking-dates .tf_label-row').removeClass('tf-date-required');\r\n                    $('.tf-hotel-error-msg').hide();\r\n                } else {\r\n                    $('.tf_booking-dates .tf_label-row').addClass('tf-date-required');\r\n                    $('.tf-hotel-error-msg').show();\r\n                }\r\n            }\r\n        });\r\n\r\n        $('#tf-single-hotel-avail .tf-submit').on('click', function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            tfRoomFilter();\r\n        });\r\n\r\n        $(document).on('change', '.tf-room-checkbox :checkbox', function () {\r\n            tfRoomFilter();\r\n        });\r\n        /**\r\n         * Click to go back to hotel availability form\r\n         */\r\n        $(document).on('click', '.hotel-room-availability', function (e) {\r\n            e.preventDefault();\r\n\r\n            $('html, body').animate({\r\n                scrollTop: $(\"#tf-single-hotel-avail\").offset().top\r\n            }, 500);\r\n        });\r\n\r\n        /**\r\n         * Ajax hotel booking\r\n         *\r\n         * tf_hotel_booking\r\n         */\r\n        $(document).on('click', '.hotel-room-book', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n\r\n            var tf_room_booking_nonce = $(\"input[name=tf_room_booking_nonce]\").val();\r\n            var post_id = $('input[name=post_id]').val();\r\n            var unique_id = $this.closest('.tf-room').find('input[name=unique_id]').val();\r\n            var room_id = $this.closest('.tf-room').find('input[name=room_id]').val();\r\n            var option_id = $this.closest('.tf-room').find('input[name=option_id]').val();\r\n\r\n            var location = $('input[name=place]').val();\r\n            var adult = $('input[name=adult]').val();\r\n            var child = $('input[name=child]').val();\r\n            var children_ages = $('input[name=children_ages]').val();\r\n            var check_in_date = $('input[name=check_in_date]').val();\r\n            var check_out_date = $('input[name=check_out_date]').val();\r\n            if ($(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val()) {\r\n                var room = $(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val();\r\n                var deposit = $(this).closest('.tf-room').find('input[name=make_deposit]').is(':checked');\r\n            } else {\r\n                var room = $(\"#hotel_room_number\").val();\r\n                var deposit = $this.closest('.tf-room').find('input[name=make_deposit]').is(':checked');\r\n            }\r\n            var airport_service = $this.closest('.tf-withoutpayment-popup').find('[name=\"airport_service\"]:checked').val();\r\n\r\n            var data = {\r\n                action: 'tf_hotel_booking',\r\n                tf_room_booking_nonce: tf_room_booking_nonce,\r\n                post_id: post_id,\r\n                room_id: room_id,\r\n                unique_id: unique_id,\r\n                option_id: option_id,\r\n                location: location,\r\n                adult: adult,\r\n                child: child,\r\n                children_ages: children_ages,\r\n                check_in_date: check_in_date,\r\n                check_out_date: check_out_date,\r\n                room: room,\r\n                deposit: deposit,\r\n                airport_service: airport_service\r\n            };\r\n            $this.closest(\".tf-booking-pagination\").siblings(\".tf-booking-content-summery\").find( '.traveller-single-info input' ).each(function (index, element) {\r\n                var element_name = $(element).attr(\"name\");\r\n                data[ element_name ] = $(element).val();\r\n           })\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n\r\n                    $('.tf_notice_wrapper').html(\"\").hide();\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status == 'error') {\r\n\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        return false;\r\n                    } else {\r\n\r\n                        if (response.redirect_to) {\r\n                            window.location.replace(response.redirect_to);\r\n                        } else {\r\n                            jQuery(document.body).trigger('added_to_cart');\r\n                            $.fancybox.close();\r\n                        }\r\n\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n\r\n        });\r\n\r\n        /**\r\n         * Single Hotel Video\r\n         *\r\n         * Fancybox\r\n         */\r\n\r\n        Fancybox.bind('[data-fancybox=\"hotel-video\"]', {\r\n            loop: true,\r\n            buttons: [\r\n                \"zoom\",\r\n                \"slideShow\",\r\n                \"fullScreen\",\r\n                \"close\"\r\n            ],\r\n            hash: false,\r\n        });\r\n\r\n        /**\r\n         * Single hotel Gallery\r\n         *\r\n         * Fancybox\r\n         */\r\n        Fancybox.bind('[data-fancybox=\"hotel-gallery\"]', {\r\n            loop: true,\r\n            buttons: [\r\n                \"zoom\",\r\n                \"slideShow\",\r\n                \"fullScreen\",\r\n                \"close\"\r\n            ],\r\n            hash: false,\r\n        });\r\n\r\n        /**\r\n         * Single Map\r\n         *\r\n         * Fancybox\r\n         */\r\n\r\n        Fancybox.bind('.map-pre', {\r\n            loop: true,\r\n            touch: false\r\n        });\r\n\r\n        /**\r\n         * Hotel slider\r\n         *\r\n         * Slick\r\n         */\r\n\r\n        var sbp = $('.swiper-button-prev'),\r\n            sbn = $('.swiper-button-next');\r\n\r\n        $('.single-slider-wrapper .tf_slider-for').slick({\r\n            slide: '.slick-slide-item',\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            arrows: false,\r\n            fade: false,\r\n            dots: false,\r\n            centerMode: false,\r\n            variableWidth: false,\r\n            adaptiveHeight: true\r\n        });\r\n\r\n        sbp.on(\"click\", function () {\r\n            $(this).closest(\".single-slider-wrapper\").find('.tf_slider-for').slick('slickPrev');\r\n        });\r\n\r\n        sbn.on(\"click\", function () {\r\n            $(this).closest(\".single-slider-wrapper\").find('.tf_slider-for').slick('slickNext');\r\n        });\r\n\r\n        /**\r\n         * Scroll to room reserve table\r\n         */\r\n        $(\".reserve-button a\").on(\"click\", function () {\r\n            $('html, body').animate({\r\n                scrollTop: $(\"#rooms\").offset().top - 32\r\n            }, 1000);\r\n        });\r\n\r\n        /*\r\n        * Single Hotel Gallery\r\n        * @author Jahid\r\n        */\r\n        $(document).on('click', '#featured-gallery', function (e) {\r\n            e.preventDefault();\r\n            $(\"#tour-gallery\").trigger(\"click\");\r\n        });\r\n\r\n        /*\r\n        * Hotel Search submit\r\n        * @since 2.9.7\r\n        * @author Foysal\r\n        */\r\n        $(document).on('submit', '#tf_hotel_aval_check', function (e) {\r\n            e.preventDefault();\r\n            let form = $(this),\r\n                submitBtn = form.find('.tf-submit'),\r\n                formData = new FormData(form[0]);\r\n            \r\n            formData.append('action', 'tf_hotel_search');\r\n            formData.append('_nonce', tf_params.nonce);\r\n\r\n            if (formData.get('from') == null || formData.get('to') == null) {\r\n                formData.append('from', tf_params.tf_hotel_min_price);\r\n                formData.append('to', tf_params.tf_hotel_max_price);\r\n            }\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: formData,\r\n                contentType: false,\r\n                processData: false,\r\n                beforeSend: function () {\r\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\r\n                    submitBtn.addClass('tf-btn-loading');\r\n                },\r\n                success: function (response) {\r\n                    let obj = JSON.parse(response);\r\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\r\n                    submitBtn.removeClass('tf-btn-loading');\r\n                    if (obj.status === 'error') {\r\n                        notyf.error(obj.message);\r\n                    }\r\n                    if (obj.status === 'success') {\r\n                        //location redirect to form action url with query string\r\n                        location.href = form.attr('action') + '?' + obj.query_string;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        // Hotel Locations Autocomplete\r\n        function tourfic_autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n\r\n            // Executes when some one click in the search form location\r\n            inp.addEventListener(\"focus\", function () {\r\n                // if (this.value == '' || !this.value) {\r\n                    // alert(\"Working....\")\r\n                    let a = document.createElement(\"DIV\");\r\n                    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                    a.classList.add(\"autocomplete-items\")\r\n                    this.parentNode.appendChild(a);\r\n                    for (const [key, value] of Object.entries(arr)) {\r\n                        let b = document.createElement(\"DIV\");\r\n                        b.innerHTML = value;\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                // }\r\n            })\r\n\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n            inp.addEventListener(\"keyup\", function (e) {\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                var $notfound = [];\r\n                /*for each item in the array...*/\r\n                for (const [key, value] of Object.entries(arr)) {\r\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                        $notfound.push('found');\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += value.substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n\r\n                    } else {\r\n                        $notfound.push('notfound');\r\n                    }\r\n                }\r\n\r\n                if ($notfound.indexOf('found') == -1) {\r\n                    /*create a DIV element for each matching element:*/\r\n                    b = document.createElement(\"DIV\");\r\n                    /*make the matching letters bold:*/\r\n\r\n                    b.innerHTML += tf_params.no_found;\r\n                    /*insert a input field that will hold the current array item's value:*/\r\n                    b.innerHTML += \"<input type='hidden' value=''>\";\r\n                    /*execute a function when someone clicks on the item value (DIV element):*/\r\n                    b.addEventListener(\"click\", function (e) {\r\n                        /*insert the value for the autocomplete text field:*/\r\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                        /*close the list of autocompleted values,\r\n                        (or any other open lists of autocompleted values:*/\r\n                        closeAllLists();\r\n                    });\r\n                    a.appendChild(b);\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode == 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].trigger(\"click\");\r\n                    }\r\n                }\r\n            });\r\n\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt != x[i] && elmnt != inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                // closeAllLists(e.target);\r\n                if (e.target.id == \"content\" || e.target.id == \"\") {\r\n                    closeAllLists(e.target);\r\n                }\r\n            });\r\n        }\r\n\r\n            // Hotel Location\r\n\r\n            $('#tf-destination-adv').on(\"click\", function (e) {\r\n                $(\".tf-hotel-locations\").addClass('tf-locations-show');\r\n            });\r\n        \r\n            $('#tf-destination-adv').on(\"keyup\", function (e) {\r\n                var location = $(this).val();\r\n                $(\"#tf-place-destination\").val(location);\r\n            });\r\n        \r\n            $('#tf-location').on(\"keyup\", function (e) {\r\n                var tf_location = $(this).val();\r\n                $(\"#tf-search-hotel\").val(tf_location);\r\n            });\r\n    \r\n        \r\n            $('#ui-id-1').on(\"click\", \"li\", function (e) {\r\n        \r\n                var dest_name = $(this).attr(\"data-name\");\r\n                var dest_slug = $(this).attr(\"data-slug\");\r\n        \r\n                $(\".tf-preview-destination\").val(dest_name);\r\n                $(\"#tf-place-destination\").val(dest_slug);\r\n        \r\n                setTimeout(function () {\r\n                    $(\".tf-hotel-locations\").removeClass('tf-locations-show');\r\n                }, 100); \r\n            });\r\n            $(document).on('click', function (event) {\r\n                if (!$(event.target).closest(\"#tf-destination-adv, #ui-id-1\").length) {\r\n                    $(\".tf-hotel-locations\").removeClass('tf-locations-show');\r\n                }\r\n            });\r\n\r\n        // Hotel location autocomplete\r\n        var hotel_location_input = document.getElementById(\"tf-location\");\r\n        var hotel_locations = tf_params.locations;\r\n        if (hotel_location_input) {\r\n            tourfic_autocomplete(hotel_location_input, hotel_locations);\r\n        }\r\n\r\n        /*\r\n        * Hotel without payment booking\r\n        * @since 2.10.3\r\n        * @Author Foysal\r\n        */\r\n        const hotelPopupBooking = ($this) => {\r\n\r\n            var tf_room_booking_nonce = $(\"input[name=tf_room_booking_nonce]\").val();\r\n            var post_id = $('input[name=post_id]').val();\r\n            var roomnumber = $this.closest('.reserve').find('select[name=hotel_room_selected]').val();\r\n            var room_id = $this.closest('.tf-room').find('input[name=room_id]').val();\r\n            var unique_id = $this.closest('.tf-room').find('input[name=unique_id]').val();\r\n            var hotel_deposit = $this.closest('.tf-room').find('input[name=make_deposit]').is(':checked');\r\n            if (roomnumber == 0) {\r\n                $this.closest('.tf-room').find('.roomselectissue').html('<span style=\"color:red\">' + tf_pro_params.select_room + '</span>');\r\n            } else {\r\n                $this.closest('.tf-room').find('.roomselectissue').html('');\r\n                $(\"#hotel_room_number\").val(roomnumber);\r\n                $(\"#hotel_roomid\").val(room_id);\r\n                $(\"#hotel_room_uniqueid\").val(unique_id);\r\n                $this.closest('.tf-room').find(\"input[name=hotel_room_depo]\").val(hotel_deposit);\r\n            }\r\n\r\n            /*if ($(this).closest('.room-submit-wrap').find('input[name=room_id]').val()) {\r\n                var room_id = $(this).closest('.room-submit-wrap').find('input[name=room_id]').val();\r\n            } else {\r\n                var room_id = $(\"#hotel_roomid\").val();\r\n            }\r\n            if ($(this).closest('.room-submit-wrap').find('input[name=unique_id]').val()) {\r\n                var unique_id = $(this).closest('.room-submit-wrap').find('input[name=unique_id]').val();\r\n            } else {\r\n                var unique_id = $(\"#hotel_room_uniqueid\").val();\r\n            }*/\r\n            var location = $('input[name=place]').val();\r\n            var adult = $('input[name=adult]').val();\r\n            var child = $('input[name=child]').val();\r\n            var children_ages = $('input[name=children_ages]').val();\r\n            var check_in_date = $('input[name=check_in_date]').val();\r\n            var check_out_date = $('input[name=check_out_date]').val();\r\n            if ($this.closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val()) {\r\n                var room = $this.closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val();\r\n                var deposit = $this.closest('.tf-room').find('input[name=make_deposit]').is(':checked');\r\n            } else {\r\n                var room = $(\"#hotel_room_number\").val();\r\n                var deposit = $this.closest('.tf-room').find(\"input[name=hotel_room_depo]\").val();\r\n            }\r\n            var airport_service = $this.closest('[name=\"airport_service\"]:checked').val();\r\n\r\n            var data = {\r\n                action: 'tf_hotel_booking_popup',\r\n                tf_room_booking_nonce: tf_room_booking_nonce,\r\n                post_id: post_id,\r\n                room_id: room_id,\r\n                unique_id: unique_id,\r\n                location: location,\r\n                adult: adult,\r\n                child: child,\r\n                children_ages: children_ages,\r\n                check_in_date: check_in_date,\r\n                check_out_date: check_out_date,\r\n                room: room,\r\n                deposit: deposit,\r\n                airport_service: airport_service\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                beforeSend: function (data) {\r\n                    $('#tour_room_details_loader').show();\r\n                },\r\n                complete: function (data) {\r\n                    $this.closest(\".room-submit-wrap\").siblings(\".tf-withoutpayment-booking\").find('.tf-hotel-booking-content').show()\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status == 'error') {\r\n\r\n                        $('#tour_room_details_loader').hide();\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        return false;\r\n                    } else {\r\n                        $('#tour_room_details_loader').hide();\r\n                        if ($('.tf-traveller-info-box').length > 0) {\r\n                            if ($(\".tf-traveller-info-box\").html().trim() == \"\") {\r\n                                $('.tf-traveller-info-box').html(response.guest_info);\r\n                            } else {\r\n                                $('.tf-traveller-info-box').html(response.guest_info);\r\n                            }\r\n                        }\r\n                        if ($('.tf-booking-traveller-info').length > 0) {\r\n                            $('.tf-booking-traveller-info').html(response.hotel_booking_summery);\r\n                        }\r\n                        if( ! $this.closest('form.tf-room').find('.tf-withoutpayment-booking').hasClass('show') ){\r\n                            $this.closest('form.tf-room').find('.tf-withoutpayment-booking').addClass('show');\r\n                        }\r\n                        $this.closest(\".room-submit-wrap\").siblings(\".tf-withoutpayment-booking\").find('.tf-control-pagination:first-child').show()\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        }\r\n        $(document).on('click', '.tf-hotel-booking-popup-btn', function (e) {\r\n            e.preventDefault();\r\n            var $this = $(this);\r\n\r\n            hotelPopupBooking($this);\r\n        });\r\n\r\n        $(document).on('submit', 'form.tf-room', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n            var formData = new FormData(this);\r\n\r\n            // if ($(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val()) {\r\n            //     var room = $(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val();\r\n            //     var deposit = $(this).closest('.room-submit-wrap').find('input[name=make_deposit]').is(':checked');\r\n            // } else {\r\n            //     var room = $(\"#hotel_room_number\").val();\r\n            // }\r\n            var deposit = $this.find(\"input[name=hotel_room_depo]\").val();\r\n            var airport_service = $this.find('[name=\"airport_service\"]:checked').val();\r\n\r\n            formData.append('action', 'tf_hotel_booking');\r\n            formData.append('_ajax_nonce', tf_params.nonce);\r\n            formData.append('deposit', deposit);\r\n            formData.append('airport_service', airport_service);\r\n\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n                    $('#tour_room_details_loader').show();\r\n                    $('.tf-notice-wrapper').html(\"\").hide();\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock()\r\n                    $('#tour_room_details_loader').hide();\r\n                    $('.tf-withoutpayment-booking').removeClass('show');\r\n                    $this.find('.tf-withoutpayment-booking-confirm').addClass('show');\r\n                },\r\n            })\r\n        });\r\n\r\n\r\n        $(document).on(\"change\", \"[name='airport_service']\", function (e) {\r\n            var $this = $(this);\r\n\r\n            hotelPopupBooking($this);\r\n        });\r\n\r\n        // Design 1 - hotel Facilities\r\n        $('.tf-hotel-facilities-title-area').on(\"click\", function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-hotel-facilities-content-area\").slideUp(400);\r\n                $(\".tf-hotel-facilities-title-area\").removeClass(\"active\");\r\n                $('.hotel-facilities-icon-down').removeClass(\"active\");\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $(this).closest('.tf-hotel-facilities-content-area').toggleClass('active');\r\n            $(this).find('.hotel-facilities-icon-down').toggle();\r\n            $(this).find('.hotel-facilities-icon-up').toggleClass('active');\r\n            $this.next().slideToggle();\r\n        });\r\n    });\r\n\r\n})(jQuery, window);\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/hotel.js?");

/***/ }),

/***/ "./sass/app/js/free/tour.js":
/*!**********************************!*\
  !*** ./sass/app/js/free/tour.js ***!
  \**********************************/
/***/ (() => {

eval("(function ($, win) {\r\n    $(document).ready(function () {\r\n\r\n\r\n        function tf_flatpickr_locale() {\r\n            let locale = tf_params.tour_form_data.flatpickr_locale;\r\n            let allowed_locales = ['ar', 'bn_BD', 'de_DE', 'es_ES', 'fr_FR', 'hi_IN', 'it_IT', 'nl_NL', 'ru_RU', 'zh_CN' ];\r\n\r\n            if( jQuery.inArray(locale, allowed_locales) !== -1 ) {\r\n                \r\n                switch (locale) {\r\n                    case \"bn_BD\":\r\n                        locale = 'bn';\r\n                        break;\r\n                    case \"de_DE\":\r\n                        locale = 'de';\r\n                        break;\r\n                    case \"es_ES\":\r\n                        locale = 'es';\r\n                        break;\r\n                    case \"fr_FR\":\r\n                        locale = 'fr';\r\n                        break;\r\n                    case \"hi_IN\":\r\n                        locale = 'hi';\r\n                        break;\r\n                    case \"it_IT\":\r\n                        locale = 'it';\r\n                        break;\r\n                    case \"nl_NL\":\r\n                        locale = 'nl';\r\n                        break;\r\n                    case \"ru_RU\":\r\n                        locale = 'ru';\r\n                        break;\r\n                    case \"zh_CN\":\r\n                        locale = 'zh';\r\n                        break;\r\n                }\r\n            } else {\r\n                locale = 'default';\r\n            }\r\n\r\n            return locale;\r\n        }\r\n\r\n        // let locale_zone = tf_flatpickr_locale();\r\n\r\n        window.flatpickr.l10ns[tf_flatpickr_locale()].firstDayOfWeek = tf_params.tour_form_data.first_day_of_week;\r\n\r\n        // Create an instance of Notyf\r\n        const notyf = new Notyf({\r\n            ripple: true,\r\n            duration: 3000,\r\n            dismissable: true,\r\n            position: {\r\n                x: 'right',\r\n                y: 'bottom',\r\n            },\r\n        });\r\n\r\n        /**\r\n         * Ajax tour booking\r\n         *\r\n         * tf_tours_booking\r\n         */\r\n        $(document).on('submit', 'form.tf_tours_booking', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n\r\n            var formData = new FormData(this);\r\n            formData.append('action', 'tf_tours_booking');\r\n            formData.append('_ajax_nonce', tf_params.nonce);\r\n\r\n\r\n            // Tour Extra\r\n            var tour_extra_total = [];\r\n            var tour_extra_quantity = [];\r\n\r\n            /*\r\n            jQuery('.tour-extra-single input:checkbox:checked').each(function () {\r\n                tour_extra_total.push(jQuery(this).val());\r\n\r\n                    if ($this.find('.tf_quantity-acrselection').hasClass('quantity-active')) {\r\n                        let qty = $this.find('input[name=\"extra-quantity\"]').val();\r\n\r\n                        tour_extra_quantity.push(qty)\r\n                    } else {\r\n                        tour_extra_quantity.push(1)\r\n                    }\r\n                }\r\n            });\r\n            */\r\n\r\n            jQuery('.tour-extra-single').each(function(e) {\r\n                let $this = jQuery(this);\r\n\r\n                if($this.find('input[name=\"tf-tour-extra\"]').is(':checked')){\r\n\r\n                   let tour_extras = $this.find('input[name=\"tf-tour-extra\"]').val();\r\n                   tour_extra_total.push(tour_extras);\r\n\r\n                   if($this.find('.tf_quantity-acrselection').hasClass('quantity-active')){\r\n                       let qty = $this.find('input[name=\"extra-quantity\"]').val();\r\n\r\n                       tour_extra_quantity.push(qty)\r\n                   }else{\r\n                    tour_extra_quantity.push(1)\r\n                   }\r\n               }\r\n           });\r\n\r\n            formData.append('tour_extra', tour_extra_total);\r\n            formData.append('tour_extra_quantity', tour_extra_quantity);\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n                    $('#tour_room_details_loader').show();\r\n                    $('.tf-notice-wrapper').html(\"\").hide();\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.without_payment == 'false') {\r\n                        if (response.status == 'error') {\r\n                            $.fancybox.close();\r\n                            if (response.errors) {\r\n                                response.errors.forEach(function (text) {\r\n                                    notyf.error(text);\r\n                                });\r\n                            }\r\n\r\n                            return false;\r\n                        } else {\r\n\r\n                            if (response.redirect_to) {\r\n                                window.location.replace(response.redirect_to);\r\n                            } else {\r\n                                jQuery(document.body).trigger('added_to_cart');\r\n                                $('#tour_room_details_loader').hide();\r\n                                $('.tf-withoutpayment-booking').removeClass('show');\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        $('#tour_room_details_loader').hide();\r\n                        $('.tf-withoutpayment-booking').removeClass('show');\r\n                        $('.tf-withoutpayment-booking-confirm').addClass('show');\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        });\r\n\r\n        $('input[name=\"tf-tour-extra\"]').on(\"change\", function (e) {\r\n\r\n            let parent = $(this).parent().parent().parent()\r\n\r\n            if ($(this).is(':checked')) {\r\n\r\n                parent.find(\".tf_quantity-acrselection\").addClass('quantity-active')\r\n\r\n            } else {\r\n\r\n                parent.find(\".tf_quantity-acrselection\").removeClass('quantity-active')\r\n\r\n            }\r\n        })\r\n\r\n        $(\".tf-itinerary-single-meta li .fa-info-circle, .ininerary-other-info li .fa-info-circle\").on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var id = $(this).parent().attr(\"id\");\r\n            $(\".tour-itinerary-sleep\").each(function () {\r\n                var elementId = $(this).attr(\"id\"); \r\n                if (id === elementId) {\r\n                    $(this).fadeIn();\r\n                } else {\r\n                    $(this).fadeOut();\r\n                }\r\n            });\r\n        });\r\n        \r\n    \r\n        // Hide when clicking outside\r\n        $(document).on(\"click\", function (e) {\r\n            if (!$(e.target).closest(\".tour-itinerary-sleep, .ininerary-other-info li .fa-info-circle, .tf-itinerary-single-meta li .fa-info-circle\").length) {\r\n                $(\".tour-itinerary-sleep\").fadeOut();\r\n            }\r\n        });\r\n\r\n\r\n        /**\r\n         * Single Tour Video\r\n         *\r\n         * Fancybox\r\n         */\r\n      \r\n        Fancybox.bind('[data-fancybox=\"tour-video\"]', {\r\n            loop: true,\r\n            buttons: [\r\n                \"zoom\",\r\n                \"slideShow\",\r\n                \"fullScreen\",\r\n                \"close\"\r\n            ],\r\n        });\r\n\r\n        /**\r\n         * Single Tour Gallery\r\n         *\r\n         * Fancybox\r\n         */\r\n        Fancybox.bind('[data-fancybox=\"tour-gallery\"]', {\r\n            loop: true,\r\n            buttons: [\r\n                \"zoom\",\r\n                \"slideShow\",\r\n                \"fullScreen\",\r\n                \"close\"\r\n            ],\r\n            hash: false,\r\n        });\r\n\r\n        /**\r\n         * Itinerary gallery init\r\n         */\r\n        Fancybox.bind('[data-fancybox=\"tf-itinerary-gallery\"]', {\r\n            buttons: [\r\n                \"zoom\",\r\n                \"slideShow\",\r\n                \"fullScreen\",\r\n                \"close\"\r\n            ]\r\n        });\r\n\r\n        Fancybox.bind('.tf-hero-btm-icon.tf-tour-info', {\r\n            loop: true,\r\n            touch: false\r\n        });\r\n        /**\r\n         * Single Tour price change\r\n         *\r\n         * adult, child, infant\r\n         */\r\n        $(document).on('click', '.tf-single-tour-pricing .tf-price-tab li', function () {\r\n            var t = $(this).attr('id');\r\n\r\n            $(this).addClass('active').siblings().removeClass('active');\r\n            $('.tf-price').addClass('tf-d-n');\r\n            $('.' + t + '-price').removeClass('tf-d-n');\r\n        });\r\n        //first li click\r\n        $('.tf-single-tour-pricing .tf-price-tab li:first-child').trigger('click');\r\n\r\n        /**\r\n         * Single Tour price change Template 1\r\n         *\r\n         * adult, child, infant\r\n         */\r\n        $(document).on('click', '.tf-trip-person-info ul li', function () {\r\n            var t = $(this).attr('data');\r\n\r\n            $(this).addClass('active').siblings().removeClass('active');\r\n            $('.tf-trip-pricing').removeClass('active');\r\n            $('.tf-' + t).addClass('active');\r\n        });\r\n\r\n        /*\r\n        * Tour Search submit\r\n        * @since 2.9.7\r\n        * @author Foysal\r\n        */\r\n        $(document).on('submit', '#tf_tour_aval_check', function (e) {\r\n            e.preventDefault();\r\n            let form = $(this),\r\n                submitBtn = form.find('.tf-submit'),\r\n                formData = new FormData(form[0]);\r\n\r\n            formData.append('action', 'tf_tour_search');\r\n            formData.append('_nonce', tf_params.nonce);\r\n\r\n            if (formData.get('from') == null || formData.get('to') == null) {\r\n                formData.append('from', tf_params.tf_tour_min_price);\r\n                formData.append('to', tf_params.tf_tour_max_price);\r\n            }\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: formData,\r\n                contentType: false,\r\n                processData: false,\r\n                beforeSend: function () {\r\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\r\n                    submitBtn.addClass('tf-btn-loading');\r\n                },\r\n                success: function (response) {\r\n                    let obj = JSON.parse(response);\r\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\r\n                    submitBtn.removeClass('tf-btn-loading');\r\n                    if (obj.status === 'error') {\r\n                        notyf.error(obj.message);\r\n                    }\r\n                    if (obj.status === 'success') {\r\n                        //location redirect to form action url with query string\r\n                        location.href = form.attr('action') + '?' + obj.query_string;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        // Tour destination Autocomplete\r\n\r\n        function tourfic_autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n\r\n            // Executes when some one click in the search form location\r\n            inp.addEventListener(\"focus\", function () {\r\n                // if (this.value == '' || !this.value) {\r\n                    // alert(\"Working....\")\r\n                    let a = document.createElement(\"DIV\");\r\n                    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                    a.classList.add(\"autocomplete-items\")\r\n                    this.parentNode.appendChild(a);\r\n                    for (const [key, value] of Object.entries(arr)) {\r\n                        let b = document.createElement(\"DIV\");\r\n                        b.innerHTML = value;\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                // }\r\n            })\r\n\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n            inp.addEventListener(\"keyup\", function (e) {\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                var $notfound = [];\r\n                /*for each item in the array...*/\r\n                for (const [key, value] of Object.entries(arr)) {\r\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                        $notfound.push('found');\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += value.substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n\r\n                    } else {\r\n                        $notfound.push('notfound');\r\n                    }\r\n                }\r\n\r\n                if ($notfound.indexOf('found') == -1) {\r\n                    /*create a DIV element for each matching element:*/\r\n                    b = document.createElement(\"DIV\");\r\n                    /*make the matching letters bold:*/\r\n\r\n                    b.innerHTML += tf_params.no_found;\r\n                    /*insert a input field that will hold the current array item's value:*/\r\n                    b.innerHTML += \"<input type='hidden' value=''>\";\r\n                    /*execute a function when someone clicks on the item value (DIV element):*/\r\n                    b.addEventListener(\"click\", function (e) {\r\n                        /*insert the value for the autocomplete text field:*/\r\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                        /*close the list of autocompleted values,\r\n                        (or any other open lists of autocompleted values:*/\r\n                        closeAllLists();\r\n                    });\r\n                    a.appendChild(b);\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode == 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].trigger(\"click\");;\r\n                    }\r\n                }\r\n            });\r\n\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt != x[i] && elmnt != inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                // closeAllLists(e.target);\r\n                if (e.target.id == \"content\" || e.target.id == \"\") {\r\n                    closeAllLists(e.target);\r\n                }\r\n            });\r\n        }\r\n\r\n        /*\r\n        * New Template Itinerary Accordion\r\n        * @author: Jahid\r\n        */\r\n        $('.tf-itinerary-title').on(\"click\", function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-itinerary-content-box\").slideUp(400);\r\n                $(\".tf-itinerary-title\").removeClass(\"active\");\r\n                $('.tf-single-itinerary-item').removeClass('active');\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $(this).closest('.tf-single-itinerary-item').toggleClass('active');\r\n            $this.next().slideToggle();\r\n        });\r\n\r\n        /*\r\n        * New Template Tour Extra\r\n        * @author: Jahid\r\n        */\r\n        $('.tf-form-title.tf-tour-extra').on(\"click\", function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-tour-extra-box\").slideUp(400);\r\n                $(\".tf-form-title.tf-tour-extra\").removeClass(\"active\");\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $this.next().slideToggle();\r\n        });\r\n\r\n        // Itinerary Accordion\r\n        $('.tf-accordion-head').on(\"click\", function () {\r\n            $(this).toggleClass('active');\r\n            $(this).parent().find('.arrow').toggleClass('arrow-animate');\r\n            $(this).parent().find('.tf-accordion-content').slideToggle();\r\n            //$(this).parents('#tf-accordion-wrapper').siblings().find('.tf-accordion-content').slideUp();\r\n            $(this).siblings().find('.ininerary-other-gallery').slick({\r\n                slidesToShow: 6,\r\n                slidesToScroll: 1,\r\n                arrows: true,\r\n                fade: false,\r\n                adaptiveHeight: true,\r\n                infinite: true,\r\n                useTransform: true,\r\n                speed: 400,\r\n                cssEase: 'cubic-bezier(0.77, 0, 0.18, 1)',\r\n                responsive: [{\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 1,\r\n                    }\r\n                }, {\r\n                    breakpoint: 640,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                    }\r\n                }, {\r\n                    breakpoint: 420,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                    }\r\n                }]\r\n            });\r\n        });\r\n\r\n        // Tour Destination\r\n\r\n        $('#tf-tour-location-adv').on(\"click\", function (e) {\r\n            var location = $(this).val();\r\n            $(\".tf-tour-results\").addClass('tf-destination-show');\r\n        });\r\n        $('#tf-tour-location-adv').on(\"keyup\", function (e) {\r\n            var location = $(this).val();\r\n            $(\"#tf-tour-place\").val(location);\r\n        });\r\n        $('#tf-destination').on(\"keyup\", function (e) {\r\n            var tf_location = $(this).val();\r\n            $(\"#tf-search-tour\").val(tf_location);\r\n        });\r\n    \r\n        $('#ui-id-2 li').on(\"click\", function (e) {\r\n            var dest_name = $(this).attr(\"data-name\");\r\n            var dest_slug = $(this).attr(\"data-slug\");\r\n            $(\".tf-tour-preview-place\").val(dest_name);\r\n            $(\"#tf-tour-place\").val(dest_slug);\r\n            setTimeout(function () {\r\n                $(\".tf-tour-results\").removeClass('tf-destination-show');\r\n            }, 100);\r\n        });\r\n\r\n        $(document).on('click', function (event) {\r\n            if (!$(event.target).closest(\"#tf-tour-location-adv\").length) {\r\n                $(\".tf-tour-results\").removeClass('tf-destination-show');\r\n            }\r\n        });\r\n\r\n        // Tour destination autocomplete\r\n        var tour_destination_input = document.getElementById(\"tf-destination\");\r\n        var tour_destinations = tf_params.tour_destinations;\r\n        if (tour_destination_input) {\r\n            tourfic_autocomplete(tour_destination_input, tour_destinations);\r\n        }\r\n\r\n        /**\r\n         * Single tour sticky booking bar position fixed\r\n         */\r\n        $(window).on(\"scroll\", function () {\r\n            var sticky = $('.tf-tour-booking-wrap'),\r\n                scroll = $(window).scrollTop(),\r\n                footer = $('footer');\r\n        \r\n            if (footer.length === 0) {\r\n                return; \r\n            }\r\n        \r\n            var footerOffset = footer.offset().top,\r\n                windowHeight = $(window).height();\r\n        \r\n            if (scroll >= 800) {\r\n                if (scroll + windowHeight >= footerOffset) {\r\n                    sticky.removeClass('tf-tours-fixed'); \r\n                } else {\r\n                    sticky.addClass('tf-tours-fixed');\r\n                }\r\n            } else {\r\n                sticky.removeClass('tf-tours-fixed');\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Single tour sticky booking bar - template 1\r\n         * @author Foysal\r\n         */\r\n        if ($('.tf-tour-booking-box').length > 0) {\r\n            $(window).on(\"scroll\", function () {\r\n                let bookingBox = $('.tf-tour-booking-box');\r\n                let bottomBar = $('.tf-bottom-booking-bar');\r\n                let footer = $('.footer');\r\n                if (footer.length === 0) {\r\n                    return; \r\n                }\r\n                let boxOffset = bookingBox.offset().top + bookingBox.outerHeight();\r\n                let footerOffset = footer.offset().top;\r\n                var scrollTop = $(window).scrollTop();\r\n                let windowHeight = $(window).height();\r\n\r\n                if (scrollTop > boxOffset && scrollTop + windowHeight < footerOffset) {\r\n                    bottomBar.addClass('active');\r\n                } else {\r\n                    bottomBar.removeClass('active');\r\n                }\r\n            });\r\n        }\r\n\r\n        $('.tf-booking-mobile-btn').on('click', function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            $(this).closest('.tf-bottom-booking-bar').toggleClass('mobile-active');\r\n        });\r\n\r\n        //Template 3 Mobile Booking Btn\r\n        $('.tf-single-template__two .tf-mobile-booking-btn').on('click', function () {\r\n            $('.tf-bottom-booking-bar').addClass('tf-mobile-booking-form');\r\n            $('.tf-single-template__two .tf-mobile-booking-btn').slideUp(300);\r\n        });\r\n\r\n        $(document).on('click touchstart', function (e) {\r\n            if ($(window).width() <= 768) {\r\n                if (!$(e.target).closest('.tf-bottom-booking-bar, .tf-mobile-booking-btn, .flatpickr-calendar').length) {\r\n                    $('.tf-bottom-booking-bar').removeClass('tf-mobile-booking-form');\r\n                    $('.tf-single-template__two .tf-mobile-booking-btn').slideDown(300);\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Single tour booking form\r\n         */\r\n        const allowed_times = tf_params.tour_form_data.allowed_times ? JSON.parse(tf_params.tour_form_data.allowed_times) : [];\r\n        const custom_avail = tf_params.tour_form_data.custom_avail;\r\n        if (custom_avail == false && Object.keys(allowed_times).length > 0) {\r\n            populateTimeSelect(allowed_times); // Pass the entire object, not just the values\r\n        }\r\n\r\n        // First Day of Week\r\n        //const first_day_of_week = tf_params.tour_form_data.flatpickr_locale;\r\n\r\n        function populateTimeSelect(times) {\r\n            let timeSelect = $('select[name=\"check-in-time\"]');\r\n            let timeSelectDiv = $(\".check-in-time-div\");\r\n            timeSelect.empty();\r\n\r\n            if (Object.keys(times).length > 0) {\r\n                timeSelect.append(`<option value=\"\" selected hidden>${tf_params.tour_form_data.select_time_text}</option>`);\r\n                // Use the keys and values from the object to populate the options\r\n                $.each(times, function (key, value) {\r\n                    timeSelect.append(`<option value=\"${key}\">${value}</option>`);\r\n                });\r\n                timeSelectDiv.css('display', 'flex');\r\n            } else timeSelectDiv.hide();\r\n        }\r\n\r\n        var tour_date_options = {\r\n            enableTime: false,\r\n            dateFormat: \"Y/m/d\",\r\n            altInput: true,\r\n            altFormat: tf_params.tour_form_data.date_format,\r\n            locale: tf_flatpickr_locale(),\r\n            \r\n            onReady: function (selectedDates, dateStr, instance) {\r\n                instance.element.value = dateStr.replace(/[a-z]+/g, '-');\r\n                instance.altInput.value = instance.altInput.value.replace(/[a-z]+/g, '-');\r\n            },\r\n\r\n            onChange: function (selectedDates, dateStr, instance) {\r\n\r\n                instance.altInput.value = instance.altInput.value.replace(/[a-z]+/g, '-');\r\n                $(\".tours-check-in-out\").val(instance.altInput.value);\r\n                $('.tours-check-in-out[type=\"hidden\"]').val(dateStr.replace(/[a-z]+/g, '-'));\r\n                if (custom_avail == true) {\r\n                    let times = Object.values(allowed_times).filter((v) => {\r\n                        let date_str = Date.parse(dateStr);\r\n                        let start_date = Date.parse(v.date.from);\r\n                        let end_date = Date.parse(v.date.to);\r\n                        return start_date <= date_str && end_date >= date_str;\r\n                    });\r\n                    times = times.length > 0 && times[0].times ? times[0].times : null;\r\n                    populateTimeSelect(times);\r\n                }\r\n                \r\n                if(tf_params.tour_form_data.tf_tour_selected_template === 'design-2') {\r\n                    dateSetToFields(selectedDates, instance);\r\n                }\r\n            },\r\n\r\n        };\r\n\r\n        if(tf_params.tour_form_data.tour_type == 'fixed'){\r\n            tour_date_options.defaultDate= tf_params.tour_form_data.defaultDate;\r\n            tour_date_options.enable= tf_params.tour_form_data.enable;\r\n        }\r\n\r\n        if(tf_params.tour_form_data.tour_type == 'continuous'){\r\n            tour_date_options.minDate = \"today\";\r\n            tour_date_options.disableMobile = \"true\";\r\n\r\n            if (custom_avail == true) {\r\n                tour_date_options.enable = Object.values(tf_params.tour_form_data.cont_custom_date).map((v) => {\r\n\r\n                    let today = new Date();\r\n                    let from_date = '';\r\n                    let formattedDate = today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate();\r\n\r\n                    if( tf_params.tour_form_data.disable_same_day ) {\r\n                        if (v.date.from == formattedDate) {\r\n                            let date = new Date( v.date.from );\r\n                            let nextDay = new Date(date.setDate(date.getDate() + 1));\r\n                            from_date = nextDay.getFullYear() + '/' + (nextDay.getMonth() + 1) + '/' + nextDay.getDate();\r\n                        }  else {\r\n                            from_date = v.date.from;\r\n                        }\r\n                    } else {\r\n                        from_date = v.date.from;\r\n                    }\r\n\r\n                    return {\r\n                        from: from_date,\r\n                        to: v.date.to\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (custom_avail == false) {\r\n                if (tf_params.tour_form_data.disabled_day || tf_params.tour_form_data.disable_range || tf_params.tour_form_data.disable_specific || tf_params.tour_form_data.disable_same_day) {\r\n                    tour_date_options.disable = [];\r\n                    if (tf_params.tour_form_data.disabled_day) {\r\n                        var disabledDays = tf_params.tour_form_data.disabled_day.map(Number);\r\n                        tour_date_options.disable.push(\r\n                            function (date) {\r\n                            return (date.getDay() === 8 || disabledDays.includes(date.getDay()));\r\n                        }\r\n                        );\r\n                    }\r\n                    if (tf_params.tour_form_data.disable_range) {\r\n                        Object.values(tf_params.tour_form_data.disable_range).forEach((d_item) => {\r\n                            tour_date_options.disable.push({\r\n                                from: d_item.date.from,\r\n                                to: d_item.date.to\r\n                            });\r\n                        });\r\n                    }\r\n                    if (tf_params.tour_form_data.disable_same_day) {\r\n                        tour_date_options.disable.push(\"today\");\r\n                    }\r\n                    \r\n                    if (tf_params.tour_form_data.disable_specific) {\r\n                        var disable_specific_string = tf_params.tour_form_data.disable_specific.split(\", \");\r\n                        disable_specific_string.forEach(function(date) {\r\n                            tour_date_options.disable.push(date);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        // remove empty attributes from tour_date_options object\r\n        // tour_date_options = Object.fromEntries(Object.entries(tour_date_options).filter(([_, v]) => v != '' ));\r\n\r\n        if(tf_params.tour_form_data.tf_tour_selected_template === 'design-1') {\r\n            $(\".tours-check-in-out\").flatpickr(tour_date_options);\r\n\r\n            $(\"select[name='check-in-time']\").on(\"change\", function () {\r\n                var selectedTime = $(this).val();\r\n                $(\"select[name='check-in-time']\").not(this).val(selectedTime);\r\n            });\r\n\r\n            $(\".acr-select input[type='number']\").on(\"change\", function () {\r\n                var inputName = $(this).attr(\"name\");\r\n                var selectedValue = $(this).val();\r\n\r\n                // Update all inputs with the same name\r\n                $(\".acr-select input[type='number'][name='\" + inputName + \"']\").val(selectedValue)\r\n            });\r\n        }\r\n\r\n        if(tf_params.tour_form_data.tf_tour_selected_template === 'design-2') {\r\n            $(\".tours-check-in-out\").flatpickr(tour_date_options);\r\n            if(tour_date_options.defaultDate){\r\n                const monthNames = [\r\n                    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n                    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n                ];\r\n                const startDate = new Date(tour_date_options.defaultDate);\r\n                $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-date\").html(startDate.getDate());\r\n                $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-month span\").html(monthNames[startDate.getMonth()]);\r\n            }\r\n            function dateSetToFields(selectedDates, instance) {\r\n                if (selectedDates.length === 1) {\r\n                    const monthNames = [\r\n                        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n                        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n                    ];\r\n                    if(selectedDates[0]){\r\n                        const startDate = selectedDates[0];\r\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-date\").html(startDate.getDate());\r\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-month span\").html(monthNames[startDate.getMonth()]);\r\n                    }\r\n                }\r\n                if (selectedDates.length === 2) {\r\n                    const monthNames = [\r\n                        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n                        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n                    ];\r\n                    if(selectedDates[0]){\r\n                        const startDate = selectedDates[0];\r\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout  span.tf-booking-date\").html(startDate.getDate());\r\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-month span\").html(monthNames[startDate.getMonth()]);\r\n                    }\r\n                    if(selectedDates[1]){\r\n                        const endDate = selectedDates[1];\r\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout  span.tf-booking-date\").html(endDate.getDate());\r\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-month span\").html(monthNames[endDate.getMonth()]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            $(\"select[name='check-in-time']\").on(\"change\", function () {\r\n                var selectedTime = $(this).val();\r\n                $(\"select[name='check-in-time']\").not(this).val(selectedTime);\r\n            });\r\n\r\n            $(\".acr-select input[type='tel']\").on(\"change\", function () {\r\n                var inputName = $(this).attr(\"name\");\r\n                var selectedValue = $(this).val();\r\n\r\n                // Update all inputs with the same name\r\n                $(\".acr-select input[type='tel'][name='\" + inputName + \"']\").val(selectedValue)\r\n            });\r\n        }\r\n\r\n        if(tf_params.tour_form_data.tf_tour_selected_template === 'default') {\r\n            $(\"#check-in-out-date\").flatpickr(tour_date_options);\r\n        }\r\n\r\n        $(document).on('click', \"#tour-deposit > div > div.tf_button_group > button\", function (e) {\r\n            e.preventDefault();\r\n            var form = $(document).find('form.tf_tours_booking');\r\n            var has_deposit = $(this).data('deposit');\r\n            if (has_deposit === true) {\r\n                form.find('input[name=\"deposit\"]').val(1);\r\n            } else {\r\n                form.find('input[name=\"deposit\"]').val(0);\r\n            }\r\n            form.submit();\r\n        });\r\n\r\n    });\r\n\r\n})(jQuery, window);\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/tour.js?");

/***/ }),

/***/ "./sass/app/js/free/tourfic.js":
/*!*************************************!*\
  !*** ./sass/app/js/free/tourfic.js ***!
  \*************************************/
/***/ (() => {

eval("(function ($, win) {\r\n    $(document).ready(function () {\r\n\r\n        // Create an instance of Notyf\r\n        const notyf = new Notyf({\r\n            ripple: true,\r\n            duration: 3000,\r\n            dismissable: true,\r\n            position: {\r\n                x: 'right',\r\n                y: 'bottom',\r\n            },\r\n        });\r\n        \r\n        // Add the classes to the body element\r\n        if (tf_params.body_classes && tf_params.body_classes.length > 0) {\r\n            $.each(tf_params.body_classes, function(index, className) {\r\n                $('body').addClass(className);\r\n            });\r\n        }\r\n        \r\n\r\n        /*\r\n         * AJAX load for range filter to prevent performance issue.\r\n         * @author Sunvi\r\n        */\r\n       \r\n        if( $(\".widget_tf_price_filters\").length > 0 ){\r\n\r\n            const post_type = $(document).find('input[name=\"post_id\"]').attr(\"data-post-type\");\r\n            if( post_type == 'tf_hotel' || post_type == 'tf_tours' || post_type == 'tf_apartment' || post_type == 'tf_carrental' ){\r\n                $.ajax({\r\n                    type: 'POST',\r\n                    url: tf_params.ajax_url,\r\n                    data: {\r\n                        action: 'tf_get_min_max_price',\r\n                        _nonce: tf_params.nonce,\r\n                        post_type: post_type\r\n                    },\r\n                    success: function (response) {\r\n                        if (response.success) {\r\n                            if( post_type == 'tf_tours' ) {\r\n                                    let tf_tour_range_options = {\r\n                                        range: {\r\n                                            min: parseInt( response.data?.tf_tours?.min ),\r\n                                            max: parseInt( response.data?.tf_tours?.max ),\r\n                                            step: 1\r\n                                        },\r\n                                        initialSelectedValues: {\r\n                                            from: parseInt( response.data?.tf_tours?.min ),\r\n                                            to: parseInt( response.data?.tf_tours?.max )\r\n                                        },\r\n                                        grid: false,\r\n                                        theme: \"dark\",\r\n                                    };\r\n                                    if ( parseInt( response.data?.tf_tours?.min ) != 0 && parseInt( response.data?.tf_tours?.max ) != 0) {\r\n                                        $('.tf-tour-filter-range').alRangeSlider(tf_tour_range_options);\r\n                                    }\r\n                            \r\n                                    // Tours Min and Max Range in Search Result\r\n                                    var tf_search_page_params = new window.URLSearchParams(window.location.search);\r\n                                    let tf_tours_search_range = {\r\n                                        range: {\r\n                                            min: parseInt( response.data?.tf_tours?.min  ),\r\n                                            max: parseInt( response.data?.tf_tours?.max ),\r\n                                            step: 1\r\n                                        },\r\n                                        initialSelectedValues: {\r\n                                            from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_tours?.min ),\r\n                                            to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_tours?.max )\r\n                                        },\r\n                                        grid: false,\r\n                                        theme: \"dark\",\r\n                                        onFinish: function () {\r\n                                            makeFilter();\r\n                                        }\r\n                                    };\r\n                                    if ( parseInt( response.data?.tf_tours?.min ) != 0 && parseInt( response.data?.tf_tours?.max ) != 0) {\r\n                                        $('.tf-tour-result-price-range').alRangeSlider(tf_tours_search_range);\r\n                                    }\r\n                            } else if( post_type == 'tf_hotel' ) { \r\n                                        let tf_hotel_range_options = {\r\n                                            range: {\r\n                                                min: parseInt( response.data?.tf_hotel?.min ),\r\n                                                max: parseInt( response.data?.tf_hotel?.max ),\r\n                                                step: 1\r\n                                            },\r\n                                            initialSelectedValues: {\r\n                                                from: parseInt( response.data?.tf_hotel?.min ),\r\n                                                to: parseInt( response.data?.tf_hotel?.max )\r\n                                            },\r\n                                            grid: false,\r\n                                            theme: \"dark\",\r\n                                        };\r\n                                        if ( response.data?.tf_hotel?.min != 0 && response.data?.tf_hotel?.max != 0) {\r\n                                            $('.tf-hotel-filter-range').alRangeSlider(tf_hotel_range_options);\r\n                                        }\r\n                                \r\n                                        // Hotel Min and Max Range in Search Result\r\n                                        var tf_search_page_params = new window.URLSearchParams(window.location.search);\r\n                                        let tf_hotel_search_range = {\r\n                                            range: {\r\n                                                min: parseInt( response.data?.tf_hotel?.min ),\r\n                                                max: parseInt( response.data?.tf_hotel?.max ),\r\n                                                step: 1\r\n                                            },\r\n                                            initialSelectedValues: {\r\n                                                from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_hotel?.min ),\r\n                                                to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_hotel?.max )\r\n                                            },\r\n                                            grid: false,\r\n                                            theme: \"dark\",\r\n                                            onFinish: function () {\r\n                                                makeFilter();\r\n                                            }\r\n                                        };\r\n                                        if ( response.data?.tf_hotel?.min != 0 && response.data?.tf_hotel?.max != 0) {\r\n                                            $('.tf-hotel-result-price-range').alRangeSlider(tf_hotel_search_range);\r\n                                        }\r\n                            } else if( post_type == 'tf_apartment' ) {\r\n\r\n                                let tf_apartment_range_options = {\r\n                                    range: {\r\n                                        min: parseInt( response.data?.tf_apartment?.min ),\r\n                                        max: parseInt( response.data?.tf_apartment?.max ),\r\n                                        step: 1\r\n                                    },\r\n                                    initialSelectedValues: {\r\n                                        from: parseInt( response.data?.tf_apartment?.min ),\r\n                                        to: parseInt( response.data?.tf_apartment?.max )\r\n                                    },\r\n                                    grid: false,\r\n                                    theme: \"dark\",\r\n                                };\r\n\r\n                                if ( response.data?.tf_apartment?.min != 0 && response.data?.tf_apartment?.max != 0) {\r\n                                    $('.tf-apartment-filter-range').alRangeSlider(tf_apartment_range_options);\r\n                                }\r\n\r\n                                var tf_search_page_params = new window.URLSearchParams(window.location.search);\r\n                                let tf_apartment_search_range = {\r\n                                    range: {\r\n                                        min: parseInt( response.data?.tf_apartment?.min ),\r\n                                        max: parseInt( response.data?.tf_apartment?.max ),\r\n                                        step: 1\r\n                                    },\r\n                                    initialSelectedValues: {\r\n                                        from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_apartment?.min ),\r\n                                        to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_apartment?.max )\r\n                                    },\r\n                                    grid: false,\r\n                                    theme: \"dark\",\r\n                                    onFinish: function () {\r\n                                        makeFilter();\r\n                                    }\r\n                                };\r\n                                if ( parseInt(  response.data?.tf_apartment?.min ) != 0 && parseInt( response.data?.tf_apartment?.max ) != 0) {\r\n                                    $('.tf-apartment-result-price-range').alRangeSlider(tf_apartment_search_range);\r\n                                }\r\n                            } else if( post_type == 'tf_carrental' ) {\r\n                                var tf_search_page_params = new window.URLSearchParams(window.location.search);\r\n                                let tf_car_search_range = {\r\n                                    range: {\r\n                                        min: parseInt( response.data?.tf_carrental?.min ),\r\n                                        max: parseInt( response.data?.tf_carrental?.max ),\r\n                                        step: 1\r\n                                    },\r\n                                    initialSelectedValues: {\r\n                                        from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_carrental?.min ),\r\n                                        to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_carrental?.max )\r\n                                    },\r\n                                    grid: false,\r\n                                    theme: \"dark\",\r\n                                    onFinish: function () {\r\n                                        if($(\".tf-filter-reset-btn\").length>0){\r\n                                            $(\".tf-filter-reset-btn\").show();\r\n                                        }\r\n                                        makeFilter();\r\n                                    }\r\n                                };\r\n                                if ( parseInt( response.data?.tf_carrental?.min ) != 0 && parseInt( response.data?.tf_carrental?.max ) != 0) {\r\n                                    $('.tf-car-result-price-range').alRangeSlider(tf_car_search_range);\r\n                                }\r\n                \r\n                                var tf_search_page_params = new window.URLSearchParams(window.location.search);\r\n                                let tf_car_search_seat_range = {\r\n                                    range: {\r\n                                        min: parseInt( response.data?.tf_carrental?.min_seat ),\r\n                                        max: parseInt( response.data?.tf_carrental?.max_seat ),\r\n                                        step: 1\r\n                                    },\r\n                                    initialSelectedValues: {\r\n                                        from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_carrental?.min_seat ),\r\n                                        to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_carrental?.max_seat )\r\n                                    },\r\n                                    grid: false,\r\n                                    theme: \"dark\",\r\n                                    onFinish: function () {\r\n                                        if($(\".tf-filter-reset-btn\").length>0){\r\n                                            $(\".tf-filter-reset-btn\").show();\r\n                                        }\r\n                                        makeFilter();\r\n                                    }\r\n                                };\r\n                                if ( parseInt( response.data?.tf_carrental?.min_seat ) != 0 && parseInt( response.data?.tf_carrental?.max_seat ) != 0) {\r\n                                    $('.tf-car-result-seat-range').alRangeSlider(tf_car_search_seat_range);\r\n                                }\r\n                            } \r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Scroll to Review Section\r\n         */\r\n        $(\".tf-top-review a\").on(\"click\", function () {\r\n            $('html, body').animate({\r\n                scrollTop: $(\"#tf-review\").offset().top - 32\r\n            }, 1000);\r\n        });\r\n\r\n        /**\r\n         * Scroll to Map Section\r\n         */\r\n        $(\".tf-map-link a\").on(\"click\", function () {\r\n            $('html, body').animate({\r\n                scrollTop: $(\"#tour-map\").offset().top - 32\r\n            }, 1000);\r\n        });\r\n\r\n        /**\r\n         * Ajax Search Result\r\n         *\r\n         * by search form submit\r\n         *\r\n         * by feature filter\r\n         */\r\n\r\n        var filter_xhr;\r\n        // Creating a function for reuse this filter in any where we needs.\r\n        const makeFilter = (page = 1, mapCoordinates = []) => {\r\n            var dest = $('#tf-place').val();\r\n            var page = page;\r\n            var adults = $('#adults').val();\r\n            var room = $('#room').val();\r\n            var children = $('#children').val();\r\n            var infant = $('#infant').val();\r\n            var checked = $('#check-in-out-date').val();\r\n            var startprice = $('.widget_tf_price_filters input[name=\"from\"]').val();\r\n            var endprice = $('.widget_tf_price_filters input[name=\"to\"]').val();\r\n            var tf_author = $('#tf_author').val();\r\n            // split date range into dates\r\n            var checkedArr = checked ? checked.split(' - ') : '';\r\n            var checkin = checkedArr[0];\r\n            var checkout = checkedArr[1];\r\n            var posttype = $('.tf-post-type').val();\r\n\r\n            let filters = termIdsByFeildName('tf_filters');\r\n            let tfHotelTypes = termIdsByFeildName('tf_hotel_types');\r\n            let features = termIdsByFeildName('tf_features');\r\n            let tour_features = termIdsByFeildName('tour_features');\r\n            let attractions = termIdsByFeildName('tf_attractions');\r\n            let activities = termIdsByFeildName('tf_activities');\r\n            let tfTourTypes = termIdsByFeildName('tf_tour_types');\r\n            let tfApartmentFeatures = termIdsByFeildName('tf_apartment_features');\r\n            let tfApartmentTypes = termIdsByFeildName('tf_apartment_types');\r\n            let tf_ordering = $('#tf-orderby').find(\":selected\").val();\r\n\r\n            let category = termIdsByFeildName('car_category');\r\n            let fuel_type = termIdsByFeildName('car_fueltype');\r\n            let engine_year = termIdsByFeildName('car_engine_year');\r\n            let min_seat = $('.widget_tf_seat_filters input[name=\"from\"]').val();\r\n            let max_seat = $('.widget_tf_seat_filters input[name=\"to\"]').val();\r\n            let same_location = $('input[name=\"same_location\"]:checked').val();\r\n            let driver_age = $('input[name=\"driver_age\"]:checked').val();\r\n            let pickup_date = $('.tf_pickup_date').val();\r\n            let dropoff_date = $('.tf_dropoff_date').val();\r\n            let pickup_time = $('.tf_pickup_time').val();\r\n            let dropoff_time = $('.tf_dropoff_time').val();\r\n            let pickup_slug = $('#tf_pickup_location_id').val();\r\n            let dropoff_slug = $('#tf_dropoff_location_id').val();\r\n\r\n            var formData = new FormData();\r\n            formData.append('action', 'tf_trigger_filter');\r\n            formData.append('_nonce', tf_params.nonce);\r\n            formData.append('type', posttype);\r\n            formData.append('page', page);\r\n            formData.append('dest', dest);\r\n            formData.append('adults', adults );\r\n            formData.append('room', room);\r\n            formData.append('children', children ? children : 0);\r\n            formData.append('infant', infant ? infant : 0);\r\n            formData.append('checkin', checkin);\r\n            formData.append('checkout', checkout);\r\n            formData.append('filters', filters);\r\n            formData.append('features', features);\r\n            formData.append('tf_hotel_types', tfHotelTypes);\r\n            formData.append('tour_features', tour_features);\r\n            formData.append('attractions', attractions);\r\n            formData.append('activities', activities);\r\n            formData.append('tf_tour_types', tfTourTypes);\r\n            formData.append('tf_apartment_features', tfApartmentFeatures);\r\n            formData.append('tf_apartment_types', tfApartmentTypes);\r\n            formData.append('checked', checked);\r\n            formData.append('category', category);\r\n            formData.append('fuel_type', fuel_type);\r\n            formData.append('engine_year', engine_year);\r\n            formData.append('pickup', pickup_slug);\r\n            formData.append('dropoff', dropoff_slug);\r\n            formData.append('pickup_date', pickup_date);\r\n            formData.append('dropoff_date', dropoff_date);\r\n            formData.append('pickup_time', pickup_time);\r\n            formData.append('dropoff_time', dropoff_time);\r\n            formData.append('same_location', same_location);\r\n            formData.append('driver_age', driver_age);\r\n            formData.append('dropoff_time', dropoff_time);\r\n            formData.append(\"tf_ordering\", tf_ordering);\r\n            formData.append('page', page);\r\n\r\n            if (startprice) {\r\n                formData.append('startprice', startprice);\r\n            }\r\n            if (endprice) {\r\n                formData.append('endprice', endprice);\r\n            }\r\n            if (tf_author) {\r\n                formData.append('tf_author', tf_author);\r\n            }\r\n\r\n            if (min_seat) {\r\n                formData.append('min_seat', min_seat);\r\n            }\r\n            if (max_seat) {\r\n                formData.append('max_seat', max_seat);\r\n            }\r\n\r\n            if(mapCoordinates.length === 4){\r\n                formData.append('mapCoordinates', mapCoordinates.join(','));\r\n                formData.append('mapFilter', true);\r\n            }\r\n            // abort previous request\r\n            if (filter_xhr && filter_xhr.readyState != 4) {\r\n                filter_xhr.abort();\r\n            }\r\n\r\n            //var pagination_url = '/?place=' + dest + '&adults=' + adults + '&children=' + children + '&type=' + posttype;\r\n            //formData.append('pagination_url', pagination_url);\r\n            filter_xhr = $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $('.archive_ajax_result').block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n                    $('#tf_ajax_searchresult_loader').show();\r\n                    if ($.trim(checkin) !== '') {\r\n                        $('.tf_booking-dates .tf_label-row').find('#tf-required').remove();\r\n                    }\r\n                },\r\n                complete: function (data) {\r\n                    $('.archive_ajax_result').unblock();\r\n                    $('#tf_ajax_searchresult_loader').hide();\r\n\r\n                    // total posts 0 if not found by @hena\r\n                    if ($('.tf-nothing-found')[0]) {\r\n                        $('.tf_posts_navigation').hide();\r\n                        var foundPosts = $('.tf-nothing-found').data('post-count');\r\n                        $('.tf-total-results').find('span').html(foundPosts);\r\n                    } else {\r\n                        $('.tf_posts_navigation').show();\r\n                        var postsCount = $('.tf-posts-count').html();\r\n                        var mapPostsCount = $('.tf-map-posts-count').html();\r\n                        $('.tf-total-results').find('span').html(postsCount);\r\n                        $('.tf-total-results').find('span.tf-map-item-count').html(mapPostsCount);\r\n                    }\r\n                },\r\n                success: function (data, e) {\r\n                    $('.archive_ajax_result').unblock();\r\n                    $('#tf_ajax_searchresult_loader').hide();\r\n                    $('.archive_ajax_result').html(data);\r\n                    // Filter Popup Removed\r\n                    if($('.tf-filter-cars')){\r\n                        $('.tf-filter-cars').removeClass('tf-btn-loading');\r\n                    }\r\n                    if ($('.tf-details-right').length > 0) {\r\n                        $('.tf-details-right').removeClass('tf-filter-show');\r\n                    }\r\n                    if($('#tf-hotel-archive-map').length) {\r\n\r\n                        // GOOGLE MAP INITIALIZE\r\n                        var mapLocations = $('#map-datas').html();\r\n                        if ($('#map-datas').length && mapLocations.length) {\r\n                            googleMapInit(mapLocations);\r\n                        } else {\r\n                            googleMapInit('');\r\n                        }\r\n                    }\r\n\r\n                    // @KK show notice in every success request\r\n                    if(!mapCoordinates.length) {\r\n                        notyf.success(tf_params.ajax_result_success);\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        };\r\n\r\n        // Search Result Ajax page number\r\n        function tf_page_pagination_number(element) {\r\n            element.find('span').remove();\r\n            return parseInt(element.html());\r\n        }\r\n\r\n        // Search Result Ajax pagination\r\n        $(document).on('click', '.tf_search_ajax_pagination a.page-numbers', function (e) {\r\n            e.preventDefault();\r\n            page = tf_page_pagination_number($(this).clone());\r\n            makeFilter(page);\r\n        }); \r\n        \r\n\r\n        // Search Result Ajax pagination\r\n        $(document).on('click', 'tf_tax_posts_navigation a.page-numbers', function (e) {\r\n            e.preventDefault();\r\n            page = tf_page_pagination_number($(this).clone());\r\n            makeFilter(page);\r\n        });\r\n\r\n        // Look for submission and change on filter widgets\r\n        $(document).on('submit', '#tf-widget-booking-search', function (e) {\r\n            e.preventDefault();\r\n            makeFilter()\r\n        });\r\n        $(document).on('change', '.widget_tf_price_filters input[name=\"from\"], .widget_tf_price_filters input[name=\"to\"], [name*=tf_filters],[name*=tf_hotel_types],[name*=tf_features],[name*=tour_features],[name*=tf_attractions],[name*=tf_activities],[name*=tf_tour_types],[name*=tf_apartment_features],[name*=tf_apartment_types], [name*=car_category],[name*=car_fueltype],[name*=car_engine_year]', function () {\r\n            if ($(\".filter-reset-btn\").length > 0) {\r\n                $(\".filter-reset-btn\").show();\r\n            }\r\n            makeFilter();\r\n        })\r\n\r\n        // Archive Page Filter\r\n        $(document).on('submit', '.tf_archive_search_result', function (e) {\r\n            e.preventDefault();\r\n\r\n            checked = $('#check-in-out-date').val();\r\n            var checkedArr = checked.split(' - ');\r\n            var checkin = checkedArr[0];\r\n            var checkout = checkedArr[1];\r\n            var posttype = $('.tf-post-type').val();\r\n\r\n\r\n            if ($.trim(checkin) === '' && tf_params.date_hotel_search && posttype === 'tf_hotel') {\r\n\r\n                if ($('#tf-required').length === 0) {\r\n                    if($('.tf_booking-dates .tf_label-row').length === 1){\r\n                        $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\r\n                    }else{\r\n                        $(\"#check-in-out-date\").trigger(\"click\");\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if ($.trim(checkin) === '' && tf_params.date_tour_search && posttype === 'tf_tours') {\r\n\r\n                if ($('#tf-required').length === 0) {\r\n                    if($('.tf_booking-dates .tf_label-row').length === 1){\r\n                        $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\r\n                    }else{\r\n                        $(\"#check-in-out-date\").trigger(\"click\");\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if ($.trim(checkin) === '' && tf_params.date_apartment_search && posttype === 'tf_apartment') {\r\n\r\n                if ($('#tf-required').length === 0) {\r\n                    if($('.tf_booking-dates .tf_label-row').length === 1){\r\n                        $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\r\n                    }else{\r\n                        $(\"#check-in-out-date\").trigger(\"click\");\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            makeFilter()\r\n        });\r\n\r\n        // Archive Page Filter Reset\r\n        $(document).on('click', '.filter-reset-btn', function (e) {\r\n            e.preventDefault();\r\n            $('[name*=tf_filters],[name*=tf_hotel_types],[name*=tf_features],[name*=tour_features],[name*=tf_attractions],[name*=tf_activities],[name*=tf_tour_types],[name*=tf_apartment_features],[name*=tf_apartment_types], [name*=car_category],[name*=car_fueltype],[name*=car_engine_year]').prop('checked', false);\r\n            makeFilter();\r\n            $(\".filter-reset-btn\").hide();\r\n\r\n            //template 4\r\n            if ($(\".tf-archive-filter-sidebar\").length > 0) {\r\n                $(\".tf-archive-filter-sidebar\").removeClass('tf-show');\r\n            }\r\n        });\r\n\r\n        $(\".tf-archive-ordering\").on('change', 'select.tf-orderby', function (e) {\r\n            $(this).closest('form').trigger('submit');\r\n        });\r\n\r\n        $(\".tf-archive-ordering\").on('submit', function (e) {\r\n            e.preventDefault();\r\n            makeFilter();\r\n\r\n        });\r\n\r\n        /*\r\n        * Car Archive Filter\r\n        * @author Jahid\r\n        */\r\n        $(document).on('click', '.tf-filter-cars', function (e) {\r\n            let $this = $(this);\r\n            $this.addClass('tf-btn-loading');\r\n\r\n            if(tf_params.location_car_search){\r\n                let same_location = $('input[name=\"same_location\"]:checked').val();\r\n                if('on'==same_location){\r\n                    if ($.trim($('#tf_pickup_location').val()) == '') {\r\n                        if ($('#tf-required').length === 0) {\r\n                            if($('.tf-driver-location').length === 1){\r\n                                $('.tf-driver-location').append('<span id=\"tf-required\" class=\"required\"><b>Select Pickup & Dropoff Location</b></span>');\r\n                            }else{\r\n                                $(\"#tf_pickup_location\").trigger(\"click\");\r\n                            }\r\n                        }\r\n                        $('.tf-filter-cars').removeClass('tf-btn-loading');\r\n                        return;\r\n                    } else {\r\n                        if ($('#tf-required').length === 1) {\r\n                            $('.tf-driver-location .required').remove();\r\n                        }\r\n                    }\r\n                }else{\r\n                    if ($.trim($('#tf_pickup_location').val()) == '' || $.trim($('#tf_dropoff_location').val()) == '') {\r\n                        if ($('#tf-required').length === 0) {\r\n                            if($('.tf-driver-location').length === 1){\r\n                                $('.tf-driver-location').append('<span id=\"tf-required\" class=\"required\"><b>Select Pickup & Dropoff Location</b></span>');\r\n                            }else{\r\n                                $(\"#tf_pickup_location\").trigger(\"click\");\r\n                            }\r\n                        }\r\n                        $('.tf-filter-cars').removeClass('tf-btn-loading');\r\n                        return;\r\n                    } else {\r\n                        if ($('#tf-required').length === 1) {\r\n                            $('.tf-driver-location .required').remove();\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n            if(tf_params.date_car_search){\r\n                if ($.trim($('.tf_pickup_date').val()) == '' || $.trim($('.tf_dropoff_date').val()) == '') {\r\n                    if ($('#tf-required').length === 0) {\r\n                        if($('.tf-driver-location').length === 1){\r\n                            $('.tf-driver-location').append('<span id=\"tf-required\" class=\"required\"><b>Select Pickup & Dropoff Date</b></span>');\r\n                        }else{\r\n                            $(\".tf_pickup_date\").trigger(\"click\");\r\n                        }\r\n                    }\r\n                    $('.tf-filter-cars').removeClass('tf-btn-loading');\r\n                    return;\r\n                } else {\r\n                    if ($('#tf-required').length === 1) {\r\n                        $('.tf-driver-location .required').remove();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if($(\".filter-reset-btn\").length>0){\r\n                $(\".filter-reset-btn\").show();\r\n            }\r\n\r\n            makeFilter();\r\n        });\r\n\r\n        /*\r\n        * Same Location Checkbox\r\n        * @author Jahid\r\n        */\r\n        $(document).on('click', '.tf-driver-location [name=\"same_location\"]', function (e) {\r\n            // Check if the checkbox is checked\r\n            if ($(this).is(':checked')) {\r\n                $('.tf-pick-drop-location').addClass('active');\r\n            } else {\r\n                $('.tf-pick-drop-location').removeClass('active');\r\n            }\r\n        });\r\n\r\n\r\n        /*\r\n        * Get term ids by field name\r\n        * @auther Foysal\r\n        */\r\n        const termIdsByFeildName = (fieldName) => {\r\n            let termIds = [];\r\n            $(`[name*=${fieldName}]`).each(function () {\r\n                if ($(this).is(':checked')) {\r\n                    termIds.push($(this).val());\r\n                }\r\n            });\r\n            return termIds.join();\r\n        }\r\n\r\n        /**\r\n         * Rating bar\r\n         */\r\n        $.fn.inViewport = function (cb) {\r\n            return this.each(function (i, el) {\r\n                function visPx() {\r\n                    var H = $(this).height(),\r\n                        r = el.getBoundingClientRect(), t = r.top, b = r.bottom;\r\n                    return cb.call(el, Math.max(0, t > 0 ? H - t : (b < H ? b : H)));\r\n                }\r\n\r\n                visPx();\r\n                $(win).on(\"resize scroll\", visPx);\r\n            });\r\n        };\r\n\r\n        $(window).on(\"load\", function () {\r\n            // Trigger Animation\r\n            jQuery('[data-width]').each(function () {\r\n                var $this = jQuery(this);\r\n                var width = $this.attr('data-width');\r\n\r\n                $this.inViewport(function (px) {\r\n                    if (px > 0) {\r\n                        $this.css('width', +width + '%');\r\n                    } else {\r\n                        $this.css('width', '0%');\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Full Width JS\r\n         */\r\n        function fullwidthInit(selector) {\r\n            function fullWidth(selector) {\r\n                $(selector).each(function () {\r\n                    $(this).width(\"100%\").css({marginLeft: \"-0px\"});\r\n\r\n                    var window_width = $(window).width();\r\n\r\n                    var left_margin = \"-\" + $(this).offset().left + \"px\";\r\n\r\n                    $(this).width(window_width).css({marginLeft: left_margin});\r\n                });\r\n            }\r\n\r\n            $(window).on(\"resize load\", function () {\r\n                fullWidth(selector);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Share buttons\r\n         */\r\n        // Toggle share buttons\r\n        $('.share-toggle[data-toggle=\"true\"]').on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            var target = $(this).attr('href');\r\n            $(target).slideToggle('fast');\r\n        });\r\n\r\n        // Copy button\r\n        $('button#share_link_button').on(\"click\", function () {\r\n            $(this).addClass('copied');\r\n            $(this).children('span').css('display', 'block');\r\n            setTimeout(function () {\r\n                $('button#share_link_button').removeClass('copied');\r\n                $('button#share_link_button').children('span').css('display', 'none');\r\n            }, 3000);\r\n            const inputElement = $(this).parent().find(\"#share_link_input\");\r\n            if (navigator.clipboard && navigator.clipboard.writeText) {\r\n                navigator.clipboard.writeText(inputElement.val()).then(() => {\r\n                    console.log(\"Copied to clipboard!\");\r\n                });\r\n            } else {\r\n                const tempInput = document.createElement(\"textarea\");\r\n                tempInput.value = inputElement.val();\r\n                document.body.appendChild(tempInput);\r\n                tempInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(tempInput);\r\n            }\r\n        });\r\n\r\n\r\n        /**\r\n         * Related Tour\r\n         *\r\n         * Slick\r\n         */\r\n        $('.tf-slider-items-wrapper,.tf-slider-activated').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            //autoplay: true,\r\n            autoplaySpeed: 2000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n\r\n        // Design 2 related tour\r\n        $('.tf-design-2-slider-items-wrapper, .tf-design-3-slider-items-wrapper').slick({\r\n            dots: false,\r\n            arrows: true,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplaySpeed: 2000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: false\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Customer Reviews\r\n         *\r\n         * Slick\r\n         */\r\n        $('.tf-review-items-wrapper').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: true,\r\n            autoplaySpeed: 2000,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Wishlist Functionality\r\n         */\r\n        /* get wishlist from localstorage  */\r\n        const wishKey = 'wishlist_item';\r\n        const getWish = () => {\r\n            let userLists = localStorage.getItem(wishKey);\r\n            // if list is null then init list else make array from json string\r\n            return (userLists === null) ? [] : JSON.parse(userLists);\r\n        }\r\n\r\n        /* store item in wishlist for loggedin and visitor */\r\n        const addWish = item => {\r\n            let userLists = getWish()\r\n            // Look if item is not already is in list\r\n            if (userLists.filter(i => i.post == item.post).length === 0) {\r\n                // push to list\r\n                userLists.push(item)\r\n                // save list\r\n                localStorage.setItem(wishKey, JSON.stringify(userLists));\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        /* get all wishlist items */\r\n        const getAllWish = () => {\r\n            let nodes = $('.tf-wishlist-holder');\r\n            $.each(nodes, function (index, element) {\r\n                let type = $(element).data('type');\r\n                type = type ? type.split(',') : undefined;\r\n                let userLists = getWish();\r\n                if (type !== undefined) userLists = userLists.filter(e => type.includes(e.type));\r\n                let ids = userLists.map(e => e.post);\r\n                let data = {\r\n                    nonce: $(element).data('nonce'),\r\n                    action: 'tf_generate_table',\r\n                    ids\r\n                }\r\n                $.post(tf_params.ajax_url, data,\r\n                    function (data) {\r\n                        if (data.success) {\r\n                            $(element).html(data.data);\r\n                        }\r\n                    },\r\n                );\r\n            });\r\n\r\n\r\n        }\r\n        /* delete item from wishlist */\r\n        const removeWish = id => {\r\n            let userLists = getWish()\r\n            let index = userLists.findIndex(x => x.post == id);\r\n\r\n            if (index >= 0) {\r\n                userLists.splice(index, 1)\r\n                localStorage.setItem(wishKey, JSON.stringify(userLists));\r\n                if (tf_params.single != '1') getAllWish()\r\n                return true;\r\n            } else return false;\r\n\r\n        }\r\n\r\n        /* toggle icon for the wish list */\r\n        const wishIconToggleForGuest = () => {\r\n            if (!$(document).hasClass('logged-in') && $(document).find('.add-wishlist')) {\r\n                let targetNode = $('.add-wishlist');\r\n                let id = targetNode.data('id');\r\n                let userLists = getWish()\r\n                var index = userLists.findIndex(x => x.post == id);\r\n                if (index >= 0) {\r\n                    wishIconFill(targetNode);\r\n                } else {\r\n                    wishIcon(targetNode);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* fill icon class */\r\n        const wishIconFill = targetNode => {\r\n            targetNode.addClass('remove-wishlist');\r\n            targetNode.addClass('fas fa-heart');\r\n            targetNode.addClass('tf-text-red');\r\n            targetNode.removeClass('far fa-heart-o');\r\n            targetNode.removeClass('add-wishlist');\r\n\r\n\r\n        }\r\n        /* blank icon */\r\n        const wishIcon = targetNode => {\r\n            targetNode.addClass('add-wishlist');\r\n            targetNode.addClass('far fa-heart-o');\r\n            targetNode.removeClass('fas fa-heart');\r\n            targetNode.removeClass('tf-text-red');\r\n            targetNode.removeClass('remove-wishlist');\r\n        }\r\n        /* send request to wp-admin for storing request */\r\n        $(document).on('click', '.add-wishlist', function () {\r\n\r\n            let targetNode = $('.add-wishlist');\r\n            let data = {\r\n                type: targetNode.data('type'),\r\n                post: targetNode.data('id'),\r\n            }\r\n            let wishPageTitle = targetNode.data('page-title');\r\n            let wishPageUrl = targetNode.data('page-url');\r\n            let wishlistpage = wishPageUrl !== undefined ? '<a class=\"wish-button\" href=\"' + wishPageUrl + '\">' + wishPageTitle + '</a>' : '';\r\n\r\n            /* For logged in user */\r\n            if ($('body').hasClass('logged-in')) {\r\n                data.action = 'tf_add_to_wishlists';\r\n                data.nonce = targetNode.data('nonce');\r\n                $.ajax({\r\n                    type: \"post\",\r\n                    url: tf_params.ajax_url,\r\n                    data: data,\r\n                    beforeSend: function (data) {\r\n                        notyf.success(tf_params.wishlist_add)\r\n                    },\r\n                    success: function (response) {\r\n                        if (response.success) {\r\n                            wishIconFill(targetNode);\r\n                            notyf.success({\r\n                                message: response.data,\r\n                                duration: 4e3\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                /* For guest */\r\n                if (addWish(data) === true) {\r\n                    notyf.success(tf_params.wishlist_add)\r\n                    wishIconFill(targetNode);\r\n                    notyf.success({\r\n                        message: tf_params.wishlist_added,\r\n                        duration: 4e3\r\n                    });\r\n                } else notyf.error(tf_params.wishlist_add_error);\r\n\r\n            }\r\n\r\n            return false;\r\n\r\n        });\r\n        /* populate wishlist table */\r\n        if ($('body').find('.tf-wishlist-holder').length) {\r\n            getAllWish()\r\n        }\r\n        /* trigger remove wish function */\r\n        $(document).on('click', '.remove-wishlist', function () {\r\n            let targetNode = $('.remove-wishlist');\r\n            let id = targetNode.data('id');\r\n            /* For logged in user */\r\n            if ($('body').hasClass('logged-in')) {\r\n                let tableNode = targetNode.closest('table');\r\n                let type = tableNode.data('type');\r\n                let data = {id, action: 'tf_remove_wishlist', type, nonce: targetNode.data('nonce')}\r\n                $.get(tf_params.ajax_url, data,\r\n                    function (data) {\r\n                        if (data.success) {\r\n                            if (tf_params.single != '1') {\r\n                                tableNode.closest('.tf-wishlists').html(data.data);\r\n                            }\r\n                            wishIcon(targetNode);\r\n                            notyf.success(tf_params.wishlist_removed);\r\n                        }\r\n                    }\r\n                );\r\n\r\n            } else {\r\n                /* For guest */\r\n                if (removeWish(id) == true) {\r\n                    wishIcon(targetNode);\r\n                    notyf.success(tf_params.wishlist_removed);\r\n                } else {\r\n                    notyf.error(tf_params.wishlist_remove_error);\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        /* toggle icon for guest */\r\n        wishIconToggleForGuest();\r\n\r\n        /*\r\n        * Trourfic autocomplete destination\r\n        */\r\n        function tourfic_autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n\r\n            // Executes when some one click in the search form location\r\n            inp.addEventListener(\"focus\", function () {\r\n                if (this.value == '' || !this.value) {\r\n                    // alert(\"Working....\")\r\n                    let a = document.createElement(\"DIV\");\r\n                    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                    a.classList.add(\"autocomplete-items\")\r\n                    this.parentNode.appendChild(a);\r\n                    for (const [key, value] of Object.entries(arr)) {\r\n                        let b = document.createElement(\"DIV\");\r\n                        b.innerHTML = value;\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                }\r\n            })\r\n\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n            inp.addEventListener(\"keyup\", function (e) {\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                var $notfound = [];\r\n                /*for each item in the array...*/\r\n                for (const [key, value] of Object.entries(arr)) {\r\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                        $notfound.push('found');\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += value.substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n\r\n                    } else {\r\n                        $notfound.push('notfound');\r\n                    }\r\n                }\r\n\r\n                if ($notfound.indexOf('found') == -1) {\r\n                    /*create a DIV element for each matching element:*/\r\n                    b = document.createElement(\"DIV\");\r\n                    /*make the matching letters bold:*/\r\n\r\n                    b.innerHTML += tf_params.no_found;\r\n                    /*insert a input field that will hold the current array item's value:*/\r\n                    b.innerHTML += \"<input type='hidden' value=''>\";\r\n                    /*execute a function when someone clicks on the item value (DIV element):*/\r\n                    b.addEventListener(\"click\", function (e) {\r\n                        /*insert the value for the autocomplete text field:*/\r\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                        /*close the list of autocompleted values,\r\n                        (or any other open lists of autocompleted values:*/\r\n                        closeAllLists();\r\n                    });\r\n                    a.appendChild(b);\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode == 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].trigger(\"click\");\r\n                    }\r\n                }\r\n            });\r\n\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt != x[i] && elmnt != inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                // closeAllLists(e.target);\r\n                if (e.target.id == \"content\" || e.target.id == \"\") {\r\n                    closeAllLists(e.target);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Open/close horizontal search form persons panel\r\n         */\r\n        // Adult, Child, Room Selection toggle\r\n        $(\".tf_selectperson-wrap .tf_input-inner,.tf_person-selection-wrap .tf_person-selection-inner\").on(\"click\", function () {\r\n            $('.tf_acrselection-wrap').slideToggle('fast');\r\n        });\r\n        // Close\r\n        document.addEventListener(\"click\", function (event) {\r\n            if (!$(event.target).closest(\".tf_selectperson-wrap, .tf_acrselection-wrap\").length) {\r\n                $(\".tf_acrselection-wrap, .tf_person-selection-wrap\").slideUp(\"fast\");\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Number/text change horizontal search form\r\n         */\r\n        // Number Increment\r\n        $('.acr-inc, .quanity-acr-inc').on('click', function (e) {\r\n            var input = $(this).parent().find('input');\r\n            var max = input.attr('max') ? input.attr('max') : 999;\r\n            var step = input.attr('step') ? input.attr('step') : 1;\r\n            if (!input.val()) {\r\n                input.val(0);\r\n            }\r\n            if (input.val() < max) {\r\n                input.val(parseInt(input.val()) + parseInt(step)).change();\r\n            }\r\n            // input focus disable\r\n            input.blur();\r\n        });\r\n\r\n        // Number Decrement\r\n        $('.acr-dec, .quanity-acr-dec').on('click', function (e) {\r\n\r\n            var input = $(this).parent().find('input');\r\n            var min = input.attr('min') ? input.attr('min') : 0;\r\n            var step = input.attr('step') ? input.attr('step') : 1;\r\n            if (!input.val()) {\r\n                input.val(0);\r\n            }\r\n            if (input.val() > min) {\r\n                input.val(input.val() - parseInt(step)).change();\r\n            }\r\n        });\r\n\r\n        // Adults change trigger\r\n        $(document).on('change', '#adults', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n\r\n            if (thisVal > 1) {\r\n                $('.tf_selectperson-wrap').find('.adults-text').text(thisVal + \" \" + tf_params.adult + 's');\r\n            } else {\r\n                $('.tf_selectperson-wrap').find('.adults-text').text(thisVal + \" \" + tf_params.adult);\r\n            }\r\n\r\n        });\r\n\r\n        // Children change trigger\r\n        $(document).on('change', '#children', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n\r\n            if (thisVal > 1) {\r\n                $('.tf_selectperson-wrap').find('.child-text').text(thisVal + \" \" + tf_params.children);\r\n            } else {\r\n                $('.tf_selectperson-wrap').find('.child-text').text(thisVal + \" \" + tf_params.children);\r\n            }\r\n\r\n        });\r\n\r\n        // Infant change trigger\r\n        $(document).on('change', '#infant', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n\r\n            if (thisVal > 1) {\r\n                $('.tf_selectperson-wrap').find('.infant-text').text(thisVal + \" \" + tf_params.infant);\r\n            } else {\r\n                $('.tf_selectperson-wrap').find('.infant-text').text(thisVal + \" \" + tf_params.infant);\r\n            }\r\n\r\n        });\r\n\r\n        // Shortcode Design 2 Adults change trigger\r\n        $(document).on('change', '.adults-style2', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n            let $this = $(this).closest('.tf_hotel-shortcode-design-2');\r\n            // Declare child outside the if block\r\n            let child = 0;\r\n\r\n            if (thisEml.parent().parent().siblings().find('.childs-style2').length > 0) {\r\n                child = parseInt(thisEml.parent().parent().siblings().find('.childs-style2').val());\r\n            } else {\r\n                child = parseInt(0);\r\n            }\r\n            // Declare intant outside the if block\r\n            let intant = 0;\r\n\r\n            if (thisEml.parent().parent().siblings().find('.infant-style2').length > 0) {\r\n                intant = parseInt(thisEml.parent().parent().siblings().find('.childs-style2').val());\r\n            } else {\r\n                intant = parseInt(0);\r\n            }\r\n            let total_people = child + intant + parseInt(thisVal);\r\n            if (total_people > 1) {\r\n                $this.find(\".tf_guest_number .guest\").text(total_people);\r\n            }\r\n        });\r\n        // Shortcode Design 2 Childs change trigger\r\n        $(document).on('change', '.childs-style2', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n            let $this = $(this).closest('.tf_hotel-shortcode-design-2');\r\n\r\n            // Declare adults outside the if block\r\n            let adults = 0;\r\n\r\n            if (thisEml.parent().parent().siblings().find('.adults-style2').length > 0) {\r\n                adults = parseInt(thisEml.parent().parent().siblings().find('.adults-style2').val());\r\n            } else {\r\n                adults = parseInt(0);\r\n            }\r\n            // Declare intant outside the if block\r\n            let intant = 0;\r\n\r\n            if (thisEml.parent().parent().siblings().find('.infant-style2').length > 0) {\r\n                intant = parseInt(thisEml.parent().parent().siblings().find('.infant-style2').val());\r\n            } else {\r\n                intant = parseInt(0);\r\n            }\r\n\r\n            let total_people = adults + intant + parseInt(thisVal);\r\n            if (total_people > 1) {\r\n                $this.find(\".tf_guest_number .guest\").text(total_people);\r\n            }\r\n        });\r\n        // Shortcode Design 2 Infants change trigger\r\n        $(document).on('change', '.infant-style2', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n            let $this = $(this).closest('.tf_hotel-shortcode-design-2');\r\n\r\n            // Declare adults outside the if block\r\n            let adults = 0;\r\n\r\n            if (thisEml.parent().parent().siblings().find('.adults-style2').length > 0) {\r\n                adults = parseInt(thisEml.parent().parent().siblings().find('.adults-style2').val());\r\n            } else {\r\n                adults = parseInt(0);\r\n            }\r\n\r\n            // Declare child outside the if block\r\n            let child = 0;\r\n\r\n            if (thisEml.parent().parent().siblings().find('.childs-style2').length > 0) {\r\n                child = parseInt(thisEml.parent().parent().siblings().find('.childs-style2').val());\r\n            } else {\r\n                child = parseInt(0);\r\n            }\r\n\r\n            let total_people = adults + child + parseInt(thisVal);\r\n            if (total_people > 1) {\r\n                $this.find(\".tf_guest_number .guest\").text(total_people);\r\n            }\r\n        });\r\n\r\n        // Room change trigger\r\n        $(document).on('change', '#room', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n\r\n            if (thisVal > 1) {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.room-text').text(thisVal + \" \" + tf_params.room);\r\n            } else {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.room-text').text(thisVal + \" \" + tf_params.room);\r\n            }\r\n        });\r\n\r\n        // Shortcode Design 2 Room change trigger\r\n        $(document).on('change', '.rooms-style2', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n            let total_room = parseInt(thisVal);\r\n            if (total_room > 1) {\r\n                $(\".tf_hotel-shortcode-design-2 .tf_guest_number .room\").text(total_room);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Review submit form toggle\r\n         */\r\n        $(document).on('click', '#reply-title', function () {\r\n            var $this = $(this);\r\n            $('#commentform').slideToggle('fast', 'swing', function () {\r\n                $this.parent().toggleClass('active');\r\n            });\r\n        });\r\n\r\n        // Ajax Ask question submit\r\n        $(document).on('submit', 'form#ask-question', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n\r\n            var formData = new FormData(this);\r\n            formData.append('action', 'tf_ask_question');\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n\r\n                    $this.find('.response').html(tf_params.sending_ques);\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status == 'sent') {\r\n                        $this.find('.response').html(response.msg);\r\n\r\n                        $this.find('[type=\"reset\"]').trigger('click');\r\n                    } else {\r\n                        $this.find('.response').html(response.msg);\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n\r\n        });\r\n\r\n        /**\r\n         * Change archive item\r\n         *\r\n         * Grid/List\r\n         */\r\n        $(document).on('click', '.change-view', function (e) {\r\n            e.preventDefault();\r\n            $('.change-view').removeClass('active');\r\n            $(this).addClass('active');\r\n\r\n            var dataid = $(this).data('id');\r\n            if (dataid == 'grid-view') {\r\n                $('.archive_ajax_result').addClass('tours-grid');\r\n            } else {\r\n                $('.archive_ajax_result').removeClass('tours-grid');\r\n            }\r\n\r\n        });\r\n\r\n        /**\r\n         * Design 1 archive item\r\n         *\r\n         * Grid/List\r\n         */\r\n        $(document).on('click', '.tf-grid-list-layout', function (e) {\r\n            e.preventDefault();\r\n            $('.tf-grid-list-layout').removeClass('active');\r\n            $(this).addClass('active');\r\n\r\n            var dataid = $(this).data('id');\r\n            if (dataid == 'grid-view') {\r\n                $('.tf-item-cards').addClass('tf-layout-grid');\r\n                $('.tf-item-cards').removeClass('tf-layout-list');\r\n            } else {\r\n                $('.tf-item-cards').addClass('tf-layout-list');\r\n                $('.tf-item-cards').removeClass('tf-layout-grid');\r\n            }\r\n\r\n        });\r\n\r\n        /**\r\n         * ajax tour load pagination\r\n         */\r\n        var flag = false;\r\n        var main_xhr;\r\n\r\n        var amPushAjax = function (url) {\r\n            if (main_xhr && main_xhr.readyState != 4) {\r\n                main_xhr.abort();\r\n            }\r\n\r\n            main_xhr = $.ajax({\r\n                url: url,\r\n                contentType: false, // Not to set any content header\r\n                processData: false, // Not to process data\r\n                asynch: true,\r\n                beforeSend: function () {\r\n\r\n                    $(document).find('.tf_posts_navigation').addClass('loading');\r\n                    $(document).find('.archive_ajax_result').addClass('loading');\r\n                    flag = true;\r\n                },\r\n                success: function (data) {\r\n                    $('.archive_ajax_result').html($('.archive_ajax_result', data).html());\r\n\r\n                    $('.tf_posts_navigation').html($('.tf_posts_navigation', data).html());\r\n\r\n                    //document.title = $(data).filter('title').text();\r\n\r\n                    flag = false;\r\n\r\n                    $(document).find('.tf_posts_navigation').removeClass('loading');\r\n                    $(document).find('.archive_ajax_result').removeClass('loading');\r\n\r\n                }\r\n            });\r\n        };\r\n\r\n        // Feed Ajax Trigger\r\n        $(document).on('click', '.tf_posts_page_navigation a.page-numbers', function (e) {\r\n            e.preventDefault();\r\n            var targetUrl = (e.target.href) ? e.target.href : $(this).context.href;\r\n            amPushAjax(targetUrl);\r\n            window.history.pushState({url: \"\" + targetUrl + \"\"}, \"\", targetUrl);\r\n        });\r\n        // End Feed Ajax Trigger\r\n\r\n        // Hotel and Tour Advance Search form\r\n\r\n        $(\".tf_selectdate-wrap.tf_more_info_selections .tf_input-inner\").on(\"click\", function () {\r\n            $('.tf-more-info').toggleClass('show');\r\n        });\r\n        $(document).on(\"click\", function (event) {\r\n            if (!$(event.target).closest(\".tf_selectdate-wrap.tf_more_info_selections .tf_input-inner, .tf-more-info\").length) {\r\n                $('.tf-more-info').removeClass('show');\r\n            }\r\n        });\r\n\r\n        // FAQ Accordion\r\n        $('.tf-faq-title').on(\"click\", function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-faq-desc\").slideUp(400);\r\n                $(\".tf-faq-title\").removeClass(\"active\");\r\n                $('.arrow').removeClass('arrow-animate');\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $this.next().slideToggle();\r\n            $('.arrow', this).toggleClass('arrow-animate');\r\n        });\r\n\r\n        /*\r\n        * New Template FAQ Accordion\r\n        * @author: Jahid\r\n        */\r\n        $('.tf-faq-collaps').on(\"click\", function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-faq-content\").slideUp(400);\r\n                $(\".tf-faq-collaps\").removeClass(\"active\");\r\n                $('.tf-faq-single').removeClass('active');\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $this.next().slideToggle();\r\n            $(this).closest('.tf-faq-single').toggleClass('active');\r\n        });\r\n\r\n\r\n        /*\r\n        * Booking Form select first tab on load\r\n        * @author: Foysal\r\n        */\r\n        $(window).on('load', function () {\r\n            if ($('.tf-tablinks').length > 0) {\r\n                $('.tf-tablinks').first().trigger('click').addClass('active');\r\n            }\r\n        });\r\n\r\n        // Form Tab click\r\n        $('.tf-tablinks').on('click', function (e) {\r\n            e.preventDefault();\r\n            let formId = $(this).data('form-id');\r\n            tfOpenForm(e, formId);\r\n        });\r\n\r\n        /*\r\n        * Booking Form tab mobile version\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('change', 'select[name=\"tf-booking-form-tab-select\"]', function () {\r\n            var tabId = $(this).val();\r\n            tfOpenForm(event, tabId);\r\n        });\r\n\r\n        /*\r\n         * Location Search\r\n         * @author: Foysal\r\n         */\r\n        $(document).on('keyup', '.tf-hotel-side-booking #tf-location, .tf-hotel-side-booking #tf-destination', function () {\r\n            let search = $(this).val();\r\n            $(this).next('input[name=place]').val(search);\r\n        })\r\n\r\n\r\n        /**\r\n         * Children age field add when children added in search field\r\n         * @since 2.8.6\r\n         * @author Abu Hena\r\n         */\r\n\r\n        if ($('.child-age-limited')[0]) {\r\n            $('.acr-select .child-inc').on('click', function () {\r\n                var first_element = $('div[id^=\"tf-age-field-0\"]');\r\n                var ch_element = $('div[id^=\"tf-age-field-\"]:last');\r\n                if (ch_element.length != 0) {\r\n                    var num = parseInt(ch_element.prop(\"id\").match(/\\d+/g), 10) + 1;\r\n                }\r\n                var elements = ch_element.clone().prop('id', 'tf-age-field-' + num);\r\n                elements.find(\"label\").html('Child age ' + num);\r\n                //elements.find(\"select\").attr('name','children_'+num+'_age');\r\n                elements.find(\"select\").attr('name', 'children_ages[]');\r\n                ch_element.after(elements);\r\n                elements.show();\r\n                first_element.hide();\r\n\r\n            })\r\n\r\n            $('.acr-select .child-dec').on('click', function () {\r\n                var total_age_input = $('.tf-children-age').length;\r\n                var ch_element = $('div[id^=\"tf-age-field-\"]:last');\r\n                if (total_age_input != 1) {\r\n                    ch_element.remove();\r\n                }\r\n            })\r\n        }\r\n        var postsCount = $('.tf-posts-count').html();\r\n        $('.tf-total-results').find('span').html(postsCount);\r\n\r\n        //Sidebar widget js\r\n        $('.tf-widget-title').on('click', function () {\r\n            $(this).find('i').toggleClass('collapsed');\r\n            $(this).siblings('.tf-filter').slideToggle('medium');\r\n        })\r\n\r\n        /* see more checkbox filter started */\r\n\r\n        $('a.see-more').on('click', function (e) {\r\n            var $this = $(this);\r\n            e.preventDefault();\r\n            $this.parent('.tf-filter').find('.tf-filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).removeClass(\"hidden\");\r\n            $this.hide();\r\n\r\n            $this.parent('.tf-filter').find('.see-less').show();\r\n        });\r\n\r\n        /* see less checkbox filter started */\r\n\r\n        $('a.see-less').on('click', function (e) {\r\n            var $this = $(this);\r\n            e.preventDefault();\r\n            $this.parent('.tf-filter').find('.tf-filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).addClass(\"hidden\");\r\n            $this.hide();\r\n            $this.parent('.tf-filter').find('.see-more').show();\r\n        });\r\n\r\n        $('.tf-filter').each(function () {\r\n\r\n            var len = $(this).find('ul').children().length;\r\n            $(this).find('.see-more').hide();\r\n            if (len > 4) {\r\n                $(this).find('.see-more').show();\r\n            }\r\n            //hide items if crossed showing limit\r\n            $(this).find('.tf-filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).addClass(\"hidden\");\r\n\r\n        });\r\n\r\n        $('.tf-category-lists').each(function () {\r\n\r\n            var len = $(this).find('ul').children().length;\r\n            $(this).find('.see-more').hide();\r\n            if (len > 4) {\r\n                $(this).find('.see-more').show();\r\n            }\r\n            //hide items if crossed showing limit\r\n            $(this).find('.tf-filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).addClass(\"hidden\");\r\n\r\n        });\r\n        /* see more checkbox filter started */\r\n\r\n        $('.tf-category-lists a.see-more').on('click', function (e) {\r\n            var $this = $(this);\r\n            e.preventDefault();\r\n            $this.parent('.tf-category-lists').find('.tf-filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).removeClass(\"hidden\");\r\n            $this.hide();\r\n\r\n            $this.parent('.tf-category-lists').find('.see-less').show();\r\n        });\r\n\r\n        /* see less checkbox filter started */\r\n\r\n        $('.tf-category-lists a.see-less').on('click', function (e) {\r\n            var $this = $(this);\r\n            e.preventDefault();\r\n            $this.parent('.tf-category-lists').find('.tf-filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).addClass(\"hidden\");\r\n            $this.hide();\r\n            $this.parent('.tf-category-lists').find('.see-more').show();\r\n        });\r\n\r\n\r\n        /* see more checkbox filter end */\r\n\r\n        //active checkbox bg\r\n        $('.tf_widget input').on('click', function () {\r\n            $(this).parent().parent().toggleClass('active');\r\n        });\r\n\r\n        /**\r\n         * Cart item remove from checkout page\r\n         * @since 2.9.7\r\n         * @author Foysal\r\n         */\r\n        $('form.checkout').on('click', '.cart_item a.remove', function (e) {\r\n            e.preventDefault();\r\n\r\n            var cart_item_key = $(this).attr(\"data-cart_item_key\");\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                url: tf_params.ajax_url,\r\n                data: {\r\n                    action: 'tf_checkout_cart_item_remove',\r\n                    _nonce: tf_params.nonce,\r\n                    cart_item_key: cart_item_key,\r\n                },\r\n                beforeSend: function () {\r\n                    $('body').trigger('update_checkout');\r\n                },\r\n                success: function (result) {\r\n                    $('body').trigger('update_checkout');\r\n                },\r\n                error: function (error) {\r\n\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n        * Without Payment Booking\r\n        * @since 2.9.26\r\n        * @author Jahid\r\n        */\r\n        let tf_hasErrorsFlag = false;\r\n        $(document).on('click', '.tf-traveller-error', function (e) {\r\n            let hasErrors = [];\r\n            let $this = $(this).closest('.tf-withoutpayment-booking');\r\n            $('.error-text').text(\"\");\r\n            $this.find('.tf-single-travel').each(function () {\r\n                $(this).find('input, select').each(function () {\r\n                    if ($(this).attr('data-required') && $(this).attr('data-required') == 1) {\r\n                        if ($(this).val() == \"\") {\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                $(this).find('input[type=\"radio\"], input[type=\"checkbox\"]').each(function () {\r\n                    if ($(this).attr('data-required')) {\r\n                        const radioName = $(this).attr('name');\r\n                        const isChecked = $('input[name=\"' + radioName + '\"]:checked').length > 0;\r\n\r\n                        if (!isChecked) {\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).parent().siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n            });\r\n            if (hasErrors.includes(true)) {\r\n                tf_hasErrorsFlag = true;\r\n                return false;\r\n            }\r\n            tf_hasErrorsFlag = false;\r\n        });\r\n\r\n        // Booking Confirmation Form Validation\r\n        $(document).on('click', '.tf-book-confirm-error, .tf-hotel-book-confirm-error', function (e) {\r\n            let hasErrors = [];\r\n            let $this = $(this).closest('.tf-withoutpayment-booking');\r\n            $('.error-text').text(\"\");\r\n            $this.find('.tf-confirm-fields').each(function () {\r\n                $(this).find('input, select').each(function () {\r\n                    if ($(this).attr('data-required') && $(this).attr('data-required') == 1 ) {\r\n                        if ($(this).val() == \"\") {\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                $(this).find('input[type=\"radio\"], input[type=\"checkbox\"]').each(function () {\r\n                    if ($(this).attr('data-required')) {\r\n                        const radioName = $(this).attr('name');\r\n                        const isChecked = $('input[name=\"' + radioName + '\"]:checked').length > 0;\r\n\r\n                        if (!isChecked) {\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).parent().siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            if (hasErrors.includes(true)) {\r\n                tf_hasErrorsFlag = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // Navigation Next\r\n        $(document).on('click', '.tf-tabs-control', function (e) {\r\n            e.preventDefault();\r\n            if (tf_hasErrorsFlag) {\r\n                return false;\r\n            }\r\n            let step = $(this).attr(\"data-step\");\r\n            if (step > 1) {\r\n                for (let i = 1; i <= step; i++) {\r\n                    $('.tf-booking-step-' + i).removeClass(\"active\");\r\n                    $('.tf-booking-step-' + (i - 1)).addClass(\"done\");\r\n                }\r\n                $('.tf-booking-step-' + step).addClass(\"active\");\r\n                $('.tf-booking-content').hide();\r\n                $('.tf-booking-content-' + step).fadeIn(300);\r\n\r\n                $('.tf-control-pagination').hide();\r\n                $('.tf-pagination-content-' + step).fadeIn(300);\r\n            }\r\n        });\r\n\r\n        // Navigation Back\r\n        $(document).on('click', '.tf-step-back', function (e) {\r\n            e.preventDefault();\r\n            let step = $(this).attr(\"data-step\");\r\n            if (step == 1) {\r\n                $('.tf-booking-step').removeClass(\"active\");\r\n                $('.tf-booking-step').removeClass(\"done\");\r\n                $('.tf-booking-step-' + step).addClass(\"active\");\r\n                $('.tf-booking-content').hide();\r\n                $('.tf-booking-content-' + step).fadeIn(300);\r\n\r\n                $('.tf-control-pagination').hide();\r\n                $('.tf-pagination-content-' + step).fadeIn(300);\r\n            }\r\n            if (step > 1) {\r\n                let next_step = parseInt(step) + 1;\r\n                $('.tf-booking-step-' + next_step).removeClass(\"active\");\r\n                $('.tf-booking-step-' + step).addClass(\"active\");\r\n                $('.tf-booking-step-' + step).removeClass(\"done\");\r\n                $('.tf-booking-step-' + next_step).removeClass(\"done\");\r\n\r\n                $('.tf-booking-content').hide();\r\n                $('.tf-booking-content-' + step).fadeIn(300);\r\n                $('.tf-control-pagination').hide();\r\n                $('.tf-pagination-content-' + step).fadeIn(300);\r\n            }\r\n        });\r\n\r\n        // Popup Open\r\n        const tourPopupBooking = () => {\r\n            var $this = $(this);\r\n            let check_in_date = $('#check-in-out-date').val();\r\n            let adults = $('#adults').val();\r\n            let children = $('#children').val();\r\n            let infant = $('#infant').val();\r\n            let post_id = $('input[name=post_id]').val();\r\n            let check_in_time = $('select[name=check-in-time] option').filter(':selected').val();\r\n            var deposit = $('input[name=deposit]').is(':checked');\r\n            var extras = [];\r\n            var quantity = [];\r\n\r\n            $('.tour-extra-single').each(function (e) {\r\n                let $this = $(this);\r\n\r\n                if ($this.find('input[name=\"tf-tour-extra\"]').is(':checked')) {\r\n\r\n                    let tour_extras = $this.find('input[name=\"tf-tour-extra\"]').val();\r\n                    extras.push(tour_extras);\r\n\r\n                    if ($this.find('.tf_quantity-acrselection').hasClass('quantity-active')) {\r\n                        let qty = $this.find('input[name=\"extra-quantity\"]').val();\r\n\r\n                        quantity.push(qty)\r\n                    } else {\r\n                        quantity.push(1)\r\n                    }\r\n                }\r\n            })\r\n\r\n            var extras = extras.join();\r\n            var quantities = quantity.join();\r\n            var data = {\r\n                action: 'tf_tour_booking_popup',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                adults: adults,\r\n                children: children,\r\n                infant: infant,\r\n                check_in_date: check_in_date,\r\n                check_in_time: check_in_time,\r\n                tour_extra: extras,\r\n                tour_extra_quantity: quantities,\r\n                deposit: deposit\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                beforeSend: function (data) {\r\n                    $('#tour_room_details_loader').show();\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status == 'error') {\r\n\r\n                        $('#tour_room_details_loader').hide();\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        return false;\r\n                    } else {\r\n                        $('#tour_room_details_loader').hide();\r\n                        if ($('.tf-traveller-info-box').length > 0) {\r\n                            if ($(\".tf-traveller-info-box\").html().trim() == \"\") {\r\n                                $('.tf-traveller-info-box').html(response.traveller_info);\r\n                            } else {\r\n                                $('.tf-traveller-info-box').html(response.traveller_info);\r\n                            }\r\n                        }\r\n                        if ($('.tf-booking-traveller-info').length > 0) {\r\n                            $('.tf-booking-traveller-info').html(response.traveller_summery);\r\n                        }\r\n                        $('.tf-withoutpayment-booking').addClass('show');\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        }\r\n        $('.tf-booking-popup-btn').on('click', function(e){\r\n            e.preventDefault();\r\n            $(\".tf-withoutpayment-booking input[type='text'], .tf-withoutpayment-booking input[type='email'], .tf-withoutpayment-booking input[type='date'], .tf-withoutpayment-booking select, .tf-withoutpayment-booking textarea\").val(\"\");\r\n\r\n            $('.tf-booking-content-extra input[type=\"checkbox\"]').each(function () {\r\n                if ($(this).prop('checked') == true) {\r\n                    $(this).prop('checked', false);\r\n                }\r\n            });\r\n            tourPopupBooking();\r\n        });\r\n\r\n        $(document).on('change', '[name*=tf-tour-extra], input[name=\"extra-quantity\"]', function () {\r\n            tourPopupBooking();\r\n        });\r\n        $(document).on('change', '[name=deposit]', function () {\r\n            tourPopupBooking();\r\n        });\r\n\r\n        // Popup Close\r\n        $('body').on('click touchstart', '.tf-booking-times span', function (e) {\r\n            e.preventDefault();\r\n            $('.tf-withoutpayment-booking').removeClass('show');\r\n            $('.tf-withoutpayment-booking-confirm').removeClass('show');\r\n            // Reset Tabs\r\n            $(\".tf-booking-tab-menu ul li\").removeClass(\"active\");\r\n            $(\".tf-booking-tab-menu ul li\").removeClass(\"done\");\r\n            $(\".tf-booking-tab-menu ul li:first-child\").addClass(\"active\");\r\n            // Reset Content\r\n            $(\".tf-booking-content\").hide();\r\n            $(\".tf-booking-content:first\").show();\r\n            // Reset Pagination\r\n            $(\".tf-control-pagination\").hide();\r\n            $(\".tf-control-pagination:first\").show();\r\n        });\r\n\r\n        /*\r\n        * Custom modal\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-modal-btn', function (e) {\r\n            e.preventDefault();\r\n            var dataTarget = $(this).attr('data-target');\r\n            $(dataTarget).addClass('tf-modal-show');\r\n            $('body').addClass('tf-modal-open');\r\n        });\r\n        $(document).on(\"click\", '.tf-modal-close', function () {\r\n            $('.tf-modal').removeClass('tf-modal-show');\r\n            $('body').removeClass('tf-modal-open');\r\n        });\r\n        $(document).on(\"click\", function (event) {\r\n            if(!$('.tf-map-modal').length) {\r\n                if (!$(event.target).closest(\".tf-modal-content,.tf-modal-btn\").length) {\r\n                    $(\"body\").removeClass(\"tf-modal-open\");\r\n                    $(\".tf-modal\").removeClass(\"tf-modal-show\");\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Hotel Details Popup\r\n         *\r\n         */\r\n        $(document).on('click', '.tf-room-detail-qv', function (e) {\r\n            e.preventDefault();\r\n            $(\"#tour_room_details_loader\").show();\r\n            var post_id = $(this).attr(\"data-hotel\");\r\n            var uniqid_id = $(this).attr(\"data-uniqid\");\r\n            var data = {\r\n                action: 'tf_tour_details_qv',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                uniqid_id: uniqid_id\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                success: function (response) {\r\n                    $(\"#tour_room_details_qv\").html(response);\r\n\r\n                    $(\"#tour_room_details_loader\").hide();\r\n                    $.fancybox.open({\r\n                        src: '#tour_room_details_qv',\r\n                        type: 'inline',\r\n                    });\r\n                }\r\n\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Design 2 Hotel Details Popup\r\n         *\r\n         */\r\n        $(document).on('click', '.tf-room-detail-popup', function (e) {\r\n            e.preventDefault();\r\n            $(\"#tour_room_details_loader\").show();\r\n            var post_id = $(this).attr(\"data-hotel\");\r\n            var uniqid_id = $(this).attr(\"data-uniqid\");\r\n            var data = {\r\n                action: 'tf_tour_details_qv',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                uniqid_id: uniqid_id\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                success: function (response) {\r\n                    $(\".tf-room-popup\").html(response);\r\n                    $(\".tf-room-popup\").addClass(\"tf-show\")\r\n                    $(\"#tour_room_details_loader\").hide();\r\n\r\n                }\r\n\r\n            });\r\n        });\r\n\r\n        // Design 3 Toggle share buttons\r\n        $('.tf-single-template__two .tf-share-toggle, .tf-single-template__three .tf-share-toggle').on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            $('.tf-share-toggle').toggleClass('actives');\r\n            $('.tf-off-canvas-share').toggleClass('show');\r\n        });\r\n\r\n        // Design 3 Wishlist buttons\r\n        $('.tf-single-template__two .add-wishlist, .tf-single-template__three .add-wishlist').on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            $(this).parents().find('.tf-wishlist-box').addClass('actives');\r\n        });\r\n        $('.tf-single-template__two .remove-wishlist, .tf-single-template__three .remove-wishlist').on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            $(this).parents().find('.tf-wishlist-box').removeClass('actives');\r\n        });\r\n\r\n        // Copy button\r\n        $('a#share_link_button').on(\"click\", function (e) {\r\n    \r\n            e.preventDefault();\r\n            $(this).addClass('copied');\r\n           \r\n            setTimeout(function () {\r\n                $('a#share_link_button').removeClass('copied');\r\n            }, 3000);\r\n           // Get the input element\r\n            const inputElement = $(this).parent().find(\"#share_link_input\");\r\n\r\n\r\n            if (navigator.clipboard && navigator.clipboard.writeText) {\r\n                navigator.clipboard.writeText(inputElement.val()).then(() => {\r\n                    console.log(\"Copied to clipboard!\");\r\n                });\r\n            } else {\r\n                const tempInput = document.createElement(\"textarea\");\r\n                tempInput.value = inputElement.val();\r\n                document.body.appendChild(tempInput);\r\n                tempInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(tempInput);\r\n            }\r\n       \r\n        });\r\n\r\n        /*\r\n        * Template 3 Script Start\r\n        * @author: Jahid\r\n        */\r\n        $('.tf-single-template__two .tf-reviews-slider').slick({\r\n            infinite: true,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n            prevArrow: '<button class=\"slide-arrow prev-arrow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"49\" height=\"24\" viewBox=\"0 0 49 24\" fill=\"none\"><path d=\"M8.32843 11.0009H44.5V13.0009H8.32843L13.6924 18.3648L12.2782 19.779L4.5 12.0009L12.2782 4.22266L13.6924 5.63687L8.32843 11.0009Z\" fill=\"#B58E53\"/></svg></button>',\r\n            nextArrow: '<button class=\"slide-arrow next-arrow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"49\" height=\"24\" viewBox=\"0 0 49 24\" fill=\"none\"><path d=\"M40.6716 11.0009H4.5V13.0009H40.6716L35.3076 18.3648L36.7218 19.779L44.5 12.0009L36.7218 4.22266L35.3076 5.63687L40.6716 11.0009Z\" fill=\"#B58E53\"/></svg></button>',\r\n            responsive: [\r\n                {\r\n                    breakpoint: 993,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1,\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        $(\".tf-single-template__two .tf-question\").on(\"click\", function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"tf-active\")) {\r\n                $(this).siblings().removeClass(\"tf-active\");\r\n                $(this).siblings().find('.tf-question-desc').slideUp();\r\n                $(this).parents(\".tf-questions-col\").siblings().find('.tf-question').removeClass(\"tf-active\");\r\n                $(this).parents(\".tf-questions-col\").siblings().find('.tf-question-desc').slideUp();\r\n            }\r\n            $(this).toggleClass(\"tf-active\");\r\n            $(this).find('.tf-question-desc').slideToggle();\r\n        });\r\n\r\n        $(\".tf-single-template__two .tf-hero-hotel.tf-popup-buttons\").on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            $(\"#tour_room_details_loader\").show();\r\n            setTimeout(function () {\r\n                $(\"#tour_room_details_loader\").hide();\r\n                $(\".tf-hotel-popup\").addClass(\"tf-show\");\r\n            }, 1000);\r\n        });\r\n\r\n        $(document).on('click', '.tf-single-template__two .tf-popup-close, .tf-archive-template__two .tf-popup-close', function () {\r\n            $(\".tf-popup-wrapper\").removeClass(\"tf-show\")\r\n        });\r\n\r\n        $(document).on('click', function (event) {\r\n            if (!$(event.target).closest(\".tf-popup-wrapper .tf-popup-inner\").length) {\r\n                $(\".tf-popup-wrapper\").removeClass('tf-show');\r\n            }\r\n        });\r\n\r\n        $('.tf-single-template__two .tf-details-menu a').on('click', function () {\r\n            $(this).addClass('tf-hashlink');\r\n            $(this).closest('li').siblings().find('a').removeClass('tf-hashlink');\r\n        });\r\n\r\n        //Room Filter Showing\r\n        $('.tf-single-template__two .tf-available-rooms-head .tf-filter, .tf-archive-template__two .tf-available-rooms-head .tf-filter, .tf-archive-template__three .tf-available-rooms-head .tf-filter').on('click', function () {\r\n            $('.tf-room-filter').toggleClass('tf-filter-show');\r\n        });\r\n\r\n        //Archive Filter Showing\r\n        $('.tf-archive-template__two .tf-archive-filter-showing').on('click', function () {\r\n            $('.tf-archive-right').toggleClass('tf-filter-show');\r\n        });\r\n\r\n        $(document).on('click touchstart', function (event) {\r\n            if (!$(event.target).closest(\".tf-archive-filter-showing, .tf-details-right\").length) {\r\n                $(\".tf-details-right\").removeClass('tf-filter-show');\r\n            }\r\n        });\r\n\r\n        //Search Form Showing\r\n        $('.tf-single-template__two .tf-modify-search-btn, .tf-archive-template__two .tf-modify-search-btn').on('click', function () {\r\n            $('.tf-booking-form-wrapper .tf-booking-form').slideDown(300);\r\n            $('.tf-single-template__two .tf-modify-search-btn, .tf-archive-template__two .tf-modify-search-btn').slideUp(300);\r\n        });\r\n\r\n        // Full Description Showing\r\n        $('.tf-single-template__two span.tf-see-description, .tf-archive-template__three span.tf-see-description, .single-tf_carrental .tf-single-template__one span.tf-see-description').on('click', function () {\r\n            $('.tf-short-description').slideUp();\r\n            $('.tf-full-description').slideDown();\r\n        });\r\n\r\n        // See Less Description Showing\r\n        $('.tf-single-template__two span.tf-see-less-description, .tf-single-template__three span.tf-see-less-description, .single-tf_carrental .tf-single-template__one span.tf-see-less-description').on('click', function () {\r\n            $('.tf-full-description').slideUp();\r\n            $('.tf-short-description').slideDown();\r\n        });\r\n\r\n        $('.tf-single-template__two .acr-inc, .tf-archive-template__two .acr-inc, .tf-single-template__two .acr-dec, .tf-archive-template__two .acr-dec').on('click', function () {\r\n\r\n            if ($('input#infant').length) {\r\n                var guest = Number($('input#adults').val() ? $('input#adults').val() : 0) + Number($('input#children').val() ? $('input#children').val() : 0) + Number($('input#infant').val() ? $('input#infant').val() : 0);\r\n            } else {\r\n                var guest = Number($('input#adults').val() ? $('input#adults').val() : 0) + Number($('input#children').val() ? $('input#children').val() : 0);\r\n            }\r\n            if (guest.toString().length < 2) {\r\n                guest = '0' + guest;\r\n            }\r\n            $('span.tf-guest').html(guest);\r\n            var room = Number($('input#room').val());\r\n            if (room.toString().length < 2) {\r\n                room = '0' + room;\r\n            }\r\n            $('span.tf-room').html(room);\r\n        })\r\n\r\n        $(document).ready(function () {\r\n            if ($('input#infant').length) {\r\n                var guest = Number($('input#adults').val() ? $('input#adults').val() : 0) + Number($('input#children').val() ? $('input#children').val() : 0) + Number($('input#infant').val() ? $('input#infant').val() : 0);\r\n            } else {\r\n                var guest = Number($('input#adults').val() ? $('input#adults').val() : 0) + Number($('input#children').val() ? $('input#children').val() : 0);\r\n                var adult = Number($('input#adults').val() ? $('input#adults').val() : 0);\r\n                var children = Number($('input#children').val() ? $('input#children').val() : 0);\r\n            }\r\n\r\n            if (guest.toString().length < 2) {\r\n                guest = '0' + guest;\r\n            }\r\n\r\n            $('span.tf-guest').html(guest);\r\n            $('span.tf-adult').html(adult);\r\n            $('span.tf-children').html(children);\r\n        })\r\n\r\n        $(document).on(\"mouseup\", function (e) {\r\n            var container = $(\".tf-single-template__two .tf_acrselection-wrap, .tf-archive-template__two .tf_acrselection-wrap\");\r\n            if (!container.is(e.target) && container.has(e.target).length === 0) {\r\n                $(\".tf-single-template__two .tf-booking-form-guest-and-room .tf_acrselection-wrap, .tf-archive-template__two .tf-booking-form-guest-and-room .tf_acrselection-wrap\").removeClass(\"tf-show\");\r\n            }\r\n        });\r\n        $(\".tf-single-template__two .tf-booking-form-guest-and-room, .tf-archive-template__two .tf-booking-form-guest-and-room\").on(\"click\", function () {\r\n            $(\".tf-single-template__two .tf-booking-form-guest-and-room .tf_acrselection-wrap, .tf-archive-template__two .tf-booking-form-guest-and-room .tf_acrselection-wrap\").addClass(\"tf-show\");\r\n        });\r\n\r\n        $(\".tf-single-template__two .tf-review-open\").on(\"click\", function () {\r\n            $(\".tf-single-template__two .tf-sitebar-widgets .tf-review-form-wrapper\").toggleClass(\"tf-review-show\");\r\n        });\r\n\r\n        /**\r\n         * Design 2 Archive Hotel Room Gallery & Archive Tour Gallery Popup\r\n         *\r\n         */\r\n        $(document).on('click', '.tf-hotel-room-popup', function (e) {\r\n            e.preventDefault();\r\n            $(\"#tour_room_details_loader\").show();\r\n            var post_id = $(this).attr(\"data-id\");\r\n            var post_type = $(this).attr(\"data-type\");\r\n            var data = {\r\n                action: 'tf_hotel_archive_popup_qv',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                post_type: post_type\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                success: function (response) {\r\n                    $(\".tf-popup-body\").html(response);\r\n                    $(\".tf-hotel-popup\").addClass(\"tf-show\")\r\n                    $(\"#tour_room_details_loader\").hide();\r\n\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n        * Template 2 Script End\r\n        * @author: Jahid\r\n        */\r\n\r\n        /*\r\n        * Template 4 Script Start\r\n        * @author: Foysal\r\n        */\r\n        $('.tf-archive-template__three .acr-inc , .tf-archive-template__three .acr-dec').on('click', function () {\r\n\r\n            if ($('input#infant').length) {\r\n                var guest = Number($('input#adults').val()) + Number($('input#children').val()) + Number($('input#infant').val());\r\n            } else {\r\n                var guest = Number($('input#adults').val()) + Number($('input#children').val());\r\n                var adult = Number($('input#adults').val());\r\n                var children = Number($('input#children').val());\r\n            }\r\n            if (guest.toString().length < 2) {\r\n                guest = '0' + guest;\r\n            }\r\n            $('span.tf-guest').html(guest);\r\n            $('span.tf-adult').html(adult);\r\n            $('span.tf-children').html(children);\r\n            var room = Number($('input#room').val());\r\n            if (room.toString().length < 2) {\r\n                room = '0' + room;\r\n            }\r\n            $('span.tf-room').html(room);\r\n        })\r\n\r\n        $(document).mouseup(function (e) {\r\n            var container = $(\".tf-archive-template__three .tf_acrselection-wrap\");\r\n            if (!container.is(e.target) && container.has(e.target).length === 0) {\r\n                $(\".tf-archive-template__three .tf-search-guest-and-room .tf_acrselection-wrap\").removeClass(\"tf-show\");\r\n            }\r\n        });\r\n        $(\".tf-archive-template__three .tf-search-guest-and-room\").click(function () {\r\n            $(\".tf-archive-template__three .tf-search-guest-and-room .tf_acrselection-wrap\").addClass(\"tf-show\");\r\n        });\r\n\r\n        /*\r\n         * Grid/List\r\n         */\r\n        $(document).on('click', '.tf-archive-view li.tf-archive-view-item', function (e) {\r\n            e.preventDefault();\r\n            $('.tf-archive-view li.tf-archive-view-item').removeClass('active');\r\n            $(this).addClass('active');\r\n\r\n            let dataId = $(this).data('id');\r\n            let hotelContainer = $('.tf-archive-hotels');\r\n\r\n            if (dataId === 'grid-view') {\r\n                hotelContainer.addClass('tf-layout-grid');\r\n                hotelContainer.removeClass('tf-layout-list');\r\n            } else {\r\n                hotelContainer.addClass('tf-layout-list');\r\n                hotelContainer.removeClass('tf-layout-grid');\r\n            }\r\n            adjustPadding();\r\n        });\r\n\r\n        /*\r\n        * Template 4 hotel, tour, apartment archive scrollbar\r\n        */\r\n        function adjustPadding() {\r\n            var hotelsContainer = $('.tf-archive-template__three .tf-archive-hotels, .tf-archive-details-wrap .tf-archive-hotels');\r\n        \r\n            if (window.innerWidth > 768) {\r\n                if (hotelsContainer[0].scrollHeight > hotelsContainer.height()) {\r\n                    hotelsContainer.css('padding-right', '16px');\r\n                } else {\r\n                    hotelsContainer.css('padding-right', '0px');\r\n                }\r\n            } else {\r\n                hotelsContainer.css('padding-right', '0px');\r\n            }\r\n        }\r\n        \r\n        if ($('.tf-archive-template__three .tf-archive-hotels').length) {\r\n            adjustPadding();\r\n            $(window).on('resize', adjustPadding);\r\n        }\r\n\r\n        function adjustSidebarPadding() {\r\n            var sidebar = $('.tf-archive-template__three #tf__booking_sidebar, #tf_map_popup_sidebar');\r\n\r\n            if (sidebar[0].scrollHeight > sidebar.height()) {\r\n                sidebar.css('padding-right', '16px');\r\n            } else {\r\n                sidebar.css('padding-right', '0px');\r\n            }\r\n        }\r\n\r\n        if($('.tf-archive-template__three #tf__booking_sidebar').length) {\r\n            adjustSidebarPadding();\r\n            $(window).on('resize', adjustSidebarPadding);\r\n        }\r\n\r\n        /*\r\n        * Filter btn\r\n        */\r\n        $(document).on('click', '.tf-archive-filter-btn', function () {\r\n            $('.tf-archive-filter-sidebar').toggleClass('tf-show');\r\n        });\r\n        $(document).click(function (event) {\r\n            if (!$(event.target).closest(\".tf-archive-filter-sidebar, .tf-archive-filter-btn\").length) {\r\n                $('.tf-archive-filter-sidebar').removeClass(\"tf-show\");\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Hotel single room gallery modal\r\n         */\r\n        $(document).on('click', '.tf-room-modal-btn', function (e) {\r\n            e.preventDefault();\r\n            $(\"#tour_room_details_loader\").show();\r\n            var post_id = $(this).attr(\"data-hotel\");\r\n            var uniqid_id = $(this).attr(\"data-uniqid\");\r\n            var data = {\r\n                action: 'tf_tour_details_qv',\r\n                _nonce: tf_params.nonce,\r\n                post_id: post_id,\r\n                uniqid_id: uniqid_id\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                success: function (response) {\r\n                    $(\".tf-room-modal .tf-modal-body\").html(response);\r\n                    $(\".tf-room-modal\").addClass(\"tf-modal-show\");\r\n                    $('body').addClass('tf-modal-open');\r\n                    $(\"#tour_room_details_loader\").hide();\r\n                }\r\n\r\n            });\r\n        });\r\n\r\n        // Template 4 section toggle\r\n        $('.tf-section-toggle-icon').on(\"click\", function () {\r\n            var $this = $(this);\r\n            var parent = $this.closest('.tf-template-section');\r\n            if (!$this.hasClass(\"active\")) {\r\n                parent.find(\".tf-section-toggle\").slideUp(500);\r\n                $this.removeClass(\"active\");\r\n                parent.find('.tf-toggle-icon-down').removeClass(\"active\");\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            parent.find(\".tf-section-toggle\").slideToggle();\r\n        });\r\n\r\n        function onePageNav( switchName ) {\r\n            const navSwitch = $(switchName);\r\n            const deductHeight = 60;\r\n            let navArr = [];\r\n\r\n            navSwitch.each(function(i){\r\n                let navSwitchHref = $(this).attr('href');\r\n                let tgtOff = $(navSwitchHref).offset().top - deductHeight;\r\n                navArr.push([]);\r\n                navArr[i].switch = $(this);\r\n                navArr[i].tgtOff = tgtOff;\r\n            });\r\n\r\n            $(window).scroll(function () {\r\n                for( let i = 0; i < navArr.length; i++ ){\r\n                    let scroll = $(window).scrollTop();\r\n                    let tgtKey = navArr[i];\r\n                    let tgtSwitch = tgtKey.switch;\r\n                    let tgtOff = tgtKey.tgtOff;\r\n                    if ( scroll >= tgtOff ) {\r\n                        navSwitch.removeClass('active');\r\n                        tgtSwitch.addClass('active');\r\n                    } else {\r\n                        tgtSwitch.removeClass('active');\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        $(window).on('load resize',function(){\r\n            onePageNav('.tf-details-menu-item');\r\n        });\r\n\r\n        var zoomLvl = 5;\r\n        var zoomChangeEnabled = false;\r\n        var centerLvl = new google.maps.LatLng(23.8697847, 90.4219536);\r\n        var markersById = {};\r\n        var markers = [];\r\n        var mapChanged = false;\r\n        var hotelMap;\r\n\r\n        const googleMapInit = (mapLocations, mapLat = 23.8697847, mapLng = 90.4219536) => {\r\n            // Clear existing markers\r\n            clearMarkers();\r\n\r\n            var locations = mapLocations ? JSON.parse(mapLocations) : [];\r\n\r\n            if(!hotelMap){\r\n                hotelMap = new google.maps.Map(document.getElementById(\"tf-hotel-archive-map\"), {\r\n                    zoom: zoomLvl,\r\n                    minZoom: 3,\r\n                    maxZoom: 18,\r\n                    center: new google.maps.LatLng(mapLat, mapLng),\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    styles: [\r\n                        {elementType: 'labels.text.fill', stylers: [{color: '#44348F'}]},\r\n                    ],\r\n                    fullscreenControl: false\r\n                });\r\n            }\r\n\r\n            var infowindow = new google.maps.InfoWindow({\r\n                maxWidth: 262,\r\n                disableAutoPan: true,\r\n            });\r\n\r\n            var bounds = new google.maps.LatLngBounds();\r\n            locations.map(function (location, i) {\r\n                var marker = new MarkerWithLabel({\r\n                    position: new google.maps.LatLng(location['lat'], location['lng']),\r\n                    map: hotelMap,\r\n                    icon: {\r\n                        url: document.getElementById('map-marker').dataset.marker,\r\n                        scaledSize: new google.maps.Size(tf_params.map_marker_width, tf_params.map_marker_height),\r\n                    },\r\n                    labelContent: '<div class=\"tf_price_inner\" data-post-id=\"' + location['id'] + '\">' + window.atob(location['price']) + '</div>',\r\n                    labelAnchor: new google.maps.Point(0, 0),\r\n                    labelClass: \"tf_map_price\",\r\n                });\r\n\r\n                markersById[location['id']] = marker;\r\n                markers.push(marker);\r\n                bounds.extend(marker.position);\r\n\r\n                // Define an OverlayView to use the projection for pixel calculation\r\n                const overlay = new google.maps.OverlayView();\r\n                overlay.draw = function () {};\r\n                overlay.setMap(hotelMap);\r\n\r\n                google.maps.event.addListener(marker, 'mouseover', function () {\r\n                    infowindow.setContent(window.atob(location['content']));\r\n\r\n                    // Convert LatLng to pixel coordinates\r\n                    const markerPosition = marker.getPosition();\r\n                    const markerProjection = overlay.getProjection();\r\n                    const markerPixel = markerProjection.fromLatLngToDivPixel(markerPosition);\r\n\r\n                    // Infowindow dimensions\r\n                    const infoWindowHeight = 265;\r\n                    const infoWindowWidth = 262;\r\n\r\n                    // Check each edge\r\n                    const isNearLeftEdge = markerPixel.x <= -120;\r\n                    const isNearRightEdge = markerPixel.x >= 120;\r\n                    const isNearTopEdge = (markerPixel.y - (infoWindowHeight+40)) <= -infoWindowHeight;\r\n\r\n                    let anchorX = 0.5;\r\n                    let anchorY = 0;\r\n\r\n                    if (isNearLeftEdge) {\r\n                        anchorX = 0.9;\r\n                    } else if (isNearRightEdge) {\r\n                        anchorX = 0.1;\r\n                    }\r\n\r\n                    if (isNearTopEdge) {\r\n                        anchorY = infoWindowHeight+90\r\n                    }\r\n\r\n                    infowindow.setOptions({\r\n                        pixelOffset: new google.maps.Size((anchorX - 0.5) * infoWindowWidth, anchorY)\r\n                    });\r\n\r\n                    infowindow.open(hotelMap, marker);\r\n                });\r\n\r\n                // Hide the infowindow on mouse leave\r\n                google.maps.event.addListener(marker, 'mouseout', function () {\r\n                    infowindow.close();\r\n                });\r\n\r\n                google.maps.event.addListener(marker, 'click', function () {\r\n                    window.open(location?.url, '_blank')\r\n                });\r\n            });\r\n\r\n            // Trigger filter on map drag\r\n            google.maps.event.addListener(hotelMap, \"dragend\", function () {\r\n                zoomLvl = hotelMap.getZoom();\r\n                centerLvl = hotelMap.getCenter();\r\n                mapChanged = true;\r\n\r\n                filterVisibleHotels(hotelMap);\r\n            });\r\n\r\n            google.maps.event.addListener(hotelMap, \"zoom_changed\", function () {\r\n                if (zoomChangeEnabled) return;\r\n\r\n                zoomLvl = hotelMap.getZoom();\r\n                centerLvl = hotelMap.getCenter();\r\n                mapChanged = true;\r\n\r\n                filterVisibleHotels(hotelMap);\r\n\r\n            });\r\n\r\n            var listener = google.maps.event.addListener(hotelMap, \"idle\", function() {\r\n                zoomChangeEnabled = true;\r\n                if (!mapChanged) {\r\n                    hotelMap.fitBounds(bounds);\r\n                    centerLvl = bounds.getCenter();\r\n                    hotelMap.setCenter(centerLvl);\r\n\r\n                } else {\r\n                    hotelMap.setZoom(zoomLvl);\r\n                    hotelMap.setCenter({lat: centerLvl.lat(), lng: centerLvl.lng()});\r\n                    google.maps.event.removeListener(listener);\r\n                }\r\n                zoomChangeEnabled = false;\r\n            });\r\n        }\r\n\r\n        function filterVisibleHotels(map) {\r\n            var bounds = map.getBounds();\r\n\r\n            if (bounds) {\r\n                var sw = bounds.getSouthWest();\r\n                var ne = bounds.getNorthEast();\r\n            }\r\n\r\n            makeFilter('', [sw.lat(), sw.lng(), ne.lat(), ne.lng()]);\r\n        }\r\n\r\n        function clearMarkers() {\r\n            markers.forEach(marker => marker.setMap(null)); // Remove each marker from the map\r\n            markers = []; // Clear the array to prevent duplication\r\n        }\r\n\r\n        // GOOGLE MAP INITIALIZE\r\n        var mapLocations = $('#map-datas').html();\r\n        if ($('#map-datas').length && mapLocations.length) {\r\n            googleMapInit(mapLocations);\r\n        }\r\n\r\n        /*\r\n        * Hotel hover effect on map marker\r\n        * */\r\n        $(document).on('mouseover', '.tf-archive-template__three .tf-archive-hotel', function () {\r\n            let id = $(this).data('id');\r\n            $('.tf_map_price .tf_price_inner[data-post-id=\"' + id + '\"]').addClass('active');\r\n\r\n            if (markersById[id]) {\r\n                markersById[id].setAnimation(google.maps.Animation.BOUNCE);\r\n            }\r\n        });\r\n        $(document).on('mouseleave', '.tf-archive-template__three .tf-archive-hotel', function () {\r\n            let id = $(this).data('id');\r\n            $('.tf_map_price .tf_price_inner[data-post-id=\"' + id + '\"]').removeClass('active');\r\n\r\n            if (markersById[id]) {\r\n                markersById[id].setAnimation(null);\r\n            }\r\n        });\r\n\r\n        /*\r\n        * Map toggle btn for mobile\r\n        */\r\n        $(document).on('click', '.tf-archive-template__three .tf-mobile-map-btn', function (e) {\r\n            e.preventDefault();\r\n            $('.tf-archive-template__three .tf-details-right').css('display', 'block');\r\n        });\r\n        $(document).on('click', '.tf-archive-template__three .tf-mobile-list-btn', function (e) {\r\n            e.preventDefault();\r\n            $('.tf-archive-template__three .tf-details-right').css('display', 'none');\r\n        });\r\n\r\n        /*\r\n        * Map Popup\r\n        * */\r\n        $(document).on('click', '.tf-map-modal-btn', function (e) {\r\n            e.preventDefault();\r\n\r\n            //template 4\r\n            if ($(\".tf-archive-filter-sidebar\").length > 0) {\r\n                $(\".tf-archive-filter-sidebar\").removeClass('tf-show');\r\n            }\r\n\r\n            $.fancybox.open({\r\n                src: '.tf-archive-details-wrap',\r\n                type: 'inline',\r\n                touch: false,\r\n                afterClose: function () {\r\n                    $('.tf_template_4_hotel_archive .tf-archive-details-wrap, .tf_template_4_tour_archive .tf-archive-details-wrap, .tf_template_4_apartment_archive .tf-archive-details-wrap').css('display', 'block');\r\n                },\r\n                afterShow: function(instance, current) {\r\n                    // Add a class to the parent fancybox container\r\n                    instance.$refs.container.addClass('tf-archive-details-fancy');\r\n\r\n                    if($('.tf-archive-details-wrap .tf-archive-hotels').length) {\r\n                        adjustPadding();\r\n                        $(window).on('resize', adjustPadding);\r\n                    }\r\n\r\n                    if($('#tf_map_popup_sidebar').length) {\r\n                        adjustSidebarPadding();\r\n                        $(window).on('resize', adjustSidebarPadding);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n})(jQuery, window);\r\n\r\n/**\r\n * Horizontal Search Form Tab Control\r\n */\r\nfunction tfOpenForm(evt, formName) {\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tf-tabcontent\");\r\n    for (i = 0; i < tabcontent.length; i++) {\r\n        tabcontent[i].style.display = \"none\";\r\n    }\r\n    tablinks = document.getElementsByClassName(\"tf-tablinks\");\r\n    for (i = 0; i < tablinks.length; i++) {\r\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n    }\r\n    document.getElementById(formName).style.display = \"block\";\r\n    document.getElementById(formName).style.transition = \"all 0.2s\";\r\n    evt.target.className += \" active\";\r\n}\r\n\r\n/**\r\n * Show review form on popup\r\n */\r\nfunction tf_load_rating() {\r\n    jQuery('#commentform').show();\r\n}\r\n\r\n\r\n/**\r\n * Update Max Width of Search Field\r\n */\r\nfunction updateMaxWidth(inputField) {\r\n    let inputValue = inputField.val().trim();\r\n    let characterCount = inputValue.length;\r\n\r\n    // Get the window width\r\n    let windowWidth = jQuery(window).width();\r\n    \r\n    // Adjust max width based on window width\r\n    let newMaxWidth;\r\n    if (windowWidth < 1025) {\r\n        newMaxWidth = 100 + (Math.max(characterCount - 1, 0) * 20); // Mobile: 100px + 20px per character\r\n    } else {\r\n        newMaxWidth = 132 + (Math.max(characterCount - 1, 0) * 40); // Desktop: 132px + 40px per character\r\n    }\r\n\r\n    // Apply the new max-width\r\n    inputField.closest(\".tf-search__form__field.tf-mx-width\").css(\"max-width\", newMaxWidth + \"px\");\r\n}\r\n\r\n// Input change\r\njQuery(\".tf-search__form__field__input\").on(\"input\", function() {\r\n    updateMaxWidth(jQuery(this));\r\n});\r\n\r\n// Increment button\r\njQuery(\".acr-inc\").on(\"click\", function() {\r\n    let inputField = jQuery(\".tf-search__form__field__input\");\r\n    inputField.trigger(\"input\");\r\n});\r\n\r\n// Decrement button\r\njQuery(\".acr-dec\").on(\"click\", function() {\r\n    let inputField = jQuery(\".tf-search__form__field__input\");\r\n    inputField.trigger(\"input\");\r\n});\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/tourfic.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./sass/app/js/free/apartment.js"]();
/******/ 	__webpack_modules__["./sass/app/js/free/car.js"]();
/******/ 	__webpack_modules__["./sass/app/js/free/hotel.js"]();
/******/ 	__webpack_modules__["./sass/app/js/free/tour.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./sass/app/js/free/tourfic.js"]();
/******/ 	
/******/ })()
;