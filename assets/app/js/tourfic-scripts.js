/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./sass/app/js/free/apartment.js":
/*!***************************************!*\
  !*** ./sass/app/js/free/apartment.js ***!
  \***************************************/
/***/ (() => {

eval("(function ($, win) {\n    $(document).ready(function () {\n\n        // Create an instance of Notyf\n        const notyf = new Notyf({\n            ripple: true,\n            duration: 3000,\n            dismissable: true,\n            position: {\n                x: 'right',\n                y: 'bottom',\n            },\n        });\n\n        // Apartment Location Autocomplete\n        function tourfic_autocomplete(inp, arr) {\n            var currentFocus;\n        \n            // Show autocomplete suggestions on focus\n            inp.addEventListener(\"focus\", function () {\n                closeAllLists();\n                let a = document.createElement(\"DIV\");\n                a.setAttribute(\"id\", this.id + \"-autocomplete-list\");\n                a.classList.add(\"autocomplete-items\");\n                this.parentNode.appendChild(a);\n        \n                for (const [key, value] of Object.entries(arr)) {\n                    let b = document.createElement(\"DIV\");\n                    b.innerHTML = value;\n                    b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\n                    b.addEventListener(\"click\", function () {\n                        console.log('clickeed');\n                        let source = this.getElementsByTagName(\"input\")[0];\n                        inp.value = source.value;\n                        inp.closest('input').nextElementSibling.value = source.dataset.slug;\n                        setTimeout(() => {\n                            closeAllLists();\n                        },100);\n                    });\n                    a.appendChild(b);\n                }\n            });\n        \n            // Filter suggestions on keyup\n            inp.addEventListener(\"keyup\", function (e) {\n                var val = this.value.toLowerCase();\n                closeAllLists();\n                currentFocus = -1;\n                \n                if (!val) return false;\n        \n                let a = document.createElement(\"DIV\");\n                a.setAttribute(\"id\", this.id + \"-autocomplete-list\");\n                a.setAttribute(\"class\", \"autocomplete-items\");\n                this.parentNode.appendChild(a);\n        \n                var found = false;\n                for (const [key, value] of Object.entries(arr)) {\n                    if (value.toLowerCase().startsWith(val)) {\n                        found = true;\n                        let b = document.createElement(\"DIV\");\n                        b.innerHTML = `<strong>${value.substr(0, val.length)}</strong>${value.substr(val.length)}`;\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug;\n                \n                            closeAllLists();\n                        });\n                        a.appendChild(b);\n                    }\n                }\n        \n                // If no match found, show \"No results found\"\n                if (!found) {\n                    let b = document.createElement(\"DIV\");\n                    b.innerHTML = `<span>${tf_params.no_found}</span>`;\n                    b.innerHTML += `<input type='hidden' value=\"\">`;\n                    b.addEventListener(\"click\", function () {\n                        inp.value = \"\";\n                        closeAllLists();\n                    });\n                    a.appendChild(b);\n                }\n            });\n        \n            // Handle keyboard navigation\n            inp.addEventListener(\"keydown\", function (e) {\n                var x = document.getElementById(this.id + \"-autocomplete-list\");\n                if (x) x = x.getElementsByTagName(\"div\");\n        \n                if (e.keyCode == 40) {\n                    // Arrow DOWN\n                    currentFocus++;\n                    addActive(x);\n                } else if (e.keyCode == 38) {\n                    // Arrow UP\n                    currentFocus--;\n                    addActive(x);\n                } else if (e.keyCode == 13) {\n                    // ENTER key\n                    e.preventDefault();\n                    if (currentFocus > -1 && x) {\n                        x[currentFocus].click();\n                    }\n                }\n            });\n        \n            function addActive(x) {\n                if (!x) return false;\n                removeActive(x);\n                if (currentFocus >= x.length) currentFocus = 0;\n                if (currentFocus < 0) currentFocus = x.length - 1;\n                x[currentFocus].classList.add(\"autocomplete-active\");\n            }\n        \n            function removeActive(x) {\n                for (var i = 0; i < x.length; i++) {\n                    x[i].classList.remove(\"autocomplete-active\");\n                }\n            }\n        \n            function closeAllLists(elmnt) {\n                var x = document.getElementsByClassName(\"autocomplete-items\");\n                for (var i = 0; i < x.length; i++) {\n                    if (elmnt !== x[i] && elmnt !== inp) {\n                        x[i].parentNode.removeChild(x[i]);\n                    }\n                }\n            }\n        \n            // Close when clicking outside\n            $(document).on('click', function (event) {\n                if (!$(event.target).closest(\"#tf-apartment-location\").length) {\n                    $(\"#tf-apartment-location-autocomplete-list\").hide();\n                }\n            });\n        }\n        \n\n        /**\n         * Ajax apartment booking\n         * @author Foysal\n         */\n        $(document).on('submit', 'form#tf-apartment-booking', function (e) {\n            e.preventDefault();\n\n            var $this = $(this);\n\n            var formData = new FormData(this);\n            formData.append('action', 'tf_apartment_booking');\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: formData,\n                processData: false,\n                contentType: false,\n                beforeSend: function (data) {\n                    $this.block({\n                        message: null,\n                        overlayCSS: {\n                            background: \"#fff\",\n                            opacity: .5\n                        }\n                    });\n\n                    $('.tf-notice-wrapper').html(\"\").hide();\n                },\n                complete: function (data) {\n                    $this.unblock();\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n\n                    if (response.status === 'error') {\n                        if (response.errors) {\n                            response.errors.forEach(function (text) {\n                                notyf.error(text);\n                            });\n                        }\n\n                        return false;\n                    } else {\n\n                        if (response.redirect_to) {\n                            window.location.replace(response.redirect_to);\n                        } else {\n                            jQuery(document.body).trigger('added_to_cart');\n                        }\n\n                    }\n                },\n                error: function (data) {\n                    console.log(data);\n                },\n\n            });\n        });\n\n\n        /*\n        * Apartment Search submit\n        * @since 2.9.7\n        * @author Jahid\n        */\n        $(document).on('submit', '#tf_apartment_booking', function (e) {\n            e.preventDefault();\n            let form = $(this),\n                submitBtn = form.find('.tf-submit'),\n                formData = new FormData(form[0]);\n\n            formData.append('action', 'tf_apartments_search');\n            formData.append('_nonce', tf_params.nonce);\n\n            if (formData.get('from') == null || formData.get('to') == null) {\n                formData.append('from', tf_params.tf_apartment_min_price);\n                formData.append('to', tf_params.tf_apartment_max_price);\n            }\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: formData,\n                contentType: false,\n                processData: false,\n                beforeSend: function () {\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\n                    submitBtn.addClass('tf-btn-loading');\n                },\n                success: function (response) {\n                    let obj = JSON.parse(response);\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\n                    submitBtn.removeClass('tf-btn-loading');\n                    if (obj.status === 'error') {\n                        notyf.error(obj.message);\n                    }\n                    if (obj.status === 'success') {\n                        //location redirect to form action url with query string\n                        location.href = form.attr('action') + '?' + obj.query_string;\n                    }\n                }\n            });\n        });\n\n        /*\n        * Apartment room quick view\n        * */\n        $(document).on('click', '.tf-apt-room-qv', function (e) {\n            e.preventDefault();\n            $(\"#tour_room_details_loader\").show();\n            let post_id = $(this).data(\"post-id\");\n            let id = $(this).data(\"id\");\n            let data = {\n                action: 'tf_apt_room_details_qv',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                id: id\n            };\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                success: function (response) {\n                    $(\"#tf_apt_room_details_qv\").html(response);\n\n                    $(\"#tour_room_details_loader\").hide();\n                    $.fancybox.open({\n                        src: '#tf_apt_room_details_qv',\n                        type: 'inline',\n                    });\n                }\n\n            });\n        });\n\n        /**\n         * Design 1 Apartment Room Popup\n         *\n         */\n        $(document).on('click', '.tf-apt-room-qv-desgin-1', function (e) {\n\n            e.preventDefault();\n            $(\"#tour_room_details_loader\").show();\n            let post_id = $(this).data(\"post-id\");\n            let id = $(this).data(\"id\");\n            let data = {\n                action: 'tf_apt_room_details_qv',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                id: id\n            };\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                success: function (response) {\n                    $(\".tf-room-popup\").html(response);\n                    $(\".tf-room-popup\").addClass(\"tf-show\")\n                    $(\"#tour_room_details_loader\").hide();\n                }\n\n            });\n        });\n\n\n        /**\n         * Apartment location autocomplete\n         * @author Foysal\n         */\n        var apartment_location_input = document.getElementById(\"tf-apartment-location\");\n        var apartment_locations = tf_params.apartment_locations;\n        if (apartment_location_input) {\n            tourfic_autocomplete(apartment_location_input, apartment_locations);\n        }\n       \n        /**\n         * Apartment Min and Max Range\n         * @author Foysal\n         */\n        if (tf_params.tf_apartment_min_price >= 0 && tf_params.tf_apartment_max_price > 0) {\n            $('.tf-apartment-filter-range').alRangeSlider({\n                range: {\n                    min: parseInt(tf_params.tf_apartment_min_price),\n                    max: parseInt(tf_params.tf_apartment_max_price),\n                    step: 1\n                },\n                initialSelectedValues: {\n                    from: parseInt(tf_params.tf_apartment_min_price),\n                    to: parseInt(tf_params.tf_apartment_max_price)\n                },\n                grid: false,\n                theme: \"dark\",\n            });\n        }\n\n        /**\n         * Apartment highlights slider\n         * @author Foysal\n         */\n        $('.tf-apt-highlights-slider').slick({\n            dots: true,\n            arrows: false,\n            infinite: true,\n            speed: 300,\n            autoplay: false,\n            autoplaySpeed: 3000,\n            slidesToShow: 3,\n            slidesToScroll: 1,\n            responsive: [\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1,\n                        infinite: true,\n                        dots: true\n                    }\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1\n                    }\n                },\n                {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        });\n\n        /**\n         * Apartment room slider\n         * @author Foysal\n         */\n        $('.tf-apartment-room-slider').slick({\n            dots: true,\n            arrows: false,\n            infinite: true,\n            speed: 300,\n            autoplay: false,\n            autoplaySpeed: 3000,\n            slidesToShow: 3,\n            slidesToScroll: 1,\n            responsive: [\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1,\n                        infinite: true,\n                        dots: true\n                    }\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1\n                    }\n                },\n                {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        });\n\n        // Design Default Room Slider\n\n        $('.tf-apartment-default-design-room-slider').slick({\n            arrows: true,\n            infinite: true,\n            speed: 300,\n            autoplay: false,\n            autoplaySpeed: 3000,\n            slidesToShow: 3,\n            slidesToScroll: 1,\n            prevArrow:\"<button type='button' class='slick-prev'><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\">\\n\" +\n                \"  <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M16.2071 5.29289C16.5976 5.68342 16.5976 6.31658 16.2071 6.70711L10.9142 12L16.2071 17.2929C16.5976 17.6834 16.5976 18.3166 16.2071 18.7071C15.8166 19.0976 15.1834 19.0976 14.7929 18.7071L8.79289 12.7071C8.40237 12.3166 8.40237 11.6834 8.79289 11.2929L14.7929 5.29289C15.1834 4.90237 15.8166 4.90237 16.2071 5.29289Z\\\" fill=\\\"#2A3343\\\"/>\\n\" +\n                \"</svg></button>\",\n            nextArrow:\"<button type='button' class='slick-next'><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\">\\n\" +\n                \"  <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M8.79289 5.29289C9.18342 4.90237 9.81658 4.90237 10.2071 5.29289L16.2071 11.2929C16.5976 11.6834 16.5976 12.3166 16.2071 12.7071L10.2071 18.7071C9.81658 19.0976 9.18342 19.0976 8.79289 18.7071C8.40237 18.3166 8.40237 17.6834 8.79289 17.2929L14.0858 12L8.79289 6.70711C8.40237 6.31658 8.40237 5.68342 8.79289 5.29289Z\\\" fill=\\\"#2A3343\\\"/>\\n\" +\n                \"</svg></button>\",\n\n            responsive: [\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1,\n                        infinite: true,\n                    }\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1\n                    }\n                },\n                {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        });\n\n        /**\n         * Related Apartment slider\n         * @author Foysal\n         */\n        $('.tf-related-apartment-slider').slick({\n            dots: true,\n            arrows: false,\n            infinite: true,\n            speed: 300,\n            autoplay: true,\n            autoplaySpeed: 3000,\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            responsive: [\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 3,\n                        slidesToScroll: 1,\n                        infinite: true,\n                        dots: true\n                    }\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1\n                    }\n                },\n                {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        });\n\n        /**\n         * Apartment 2 design Highlights sliers\n         *\n         * Slick\n         */\n        $('.tf-features-block-slides').slick({\n            dots: true,\n            arrows: false,\n            infinite: true,\n            speed: 300,\n            autoplay: false,\n            autoplaySpeed: 2000,\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            responsive: [\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1,\n                    }\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1\n                    }\n                },\n                {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        });\n\n        $(document).on('click', '.tf-apartment-show-more', function (e) {\n            if ($(this).siblings('.tf-full-description')) {\n                $(this).siblings('.tf-full-description').show();\n                $(this).siblings('.tf-description').hide();\n                $(this).text(\"Show Less\");\n                $(this).addClass('tf-apartment-show-less');\n            }\n        });\n        \n        $(document).on('click', '.tf-apartment-show-less', function (e) {\n            if ($(this).siblings('.tf-full-description')) {\n                $(this).siblings('.tf-full-description').hide();\n                $(this).siblings('.tf-description').show();\n                $(this).text(\"Show More\");\n                $(this).removeClass('tf-apartment-show-less');\n            }\n        });\n        \n        $('.tf-single-review.tf_apartment .tf-single-details').each(function (index, val) {\n            if (index > 1) {\n                $(this).hide();\n            }\n        });\n\n        $(\".tf-apaartment-show-all\").on('click', function (e) { \n            $('.tf-single-review.tf_apartment .tf-single-details').each(function (index, val) {\n                $(val).show();\n            });\n\n            $('.show-all-review-wrap').hide();\n        });\n\n    });\n\n})(jQuery, window);\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/apartment.js?");

/***/ }),

/***/ "./sass/app/js/free/car.js":
/*!*********************************!*\
  !*** ./sass/app/js/free/car.js ***!
  \*********************************/
/***/ (() => {

eval("(function ($, win) {\n    \n\n    $(document).ready(function () {\n       \n\n        \n\n        // Create an instance of Notyf\n        const notyf = new Notyf({\n            ripple: true,\n            duration: 3000,\n            dismissable: true,\n            position: {\n                x: 'right',\n                y: 'bottom',\n            },\n        });\n\n        \n        // FAQ Accordion\n        $('.tf-car-faq-section .tf-faq-head').on(\"click\", function () {\n            var $this = $(this);\n            if (!$this.hasClass(\"active\")) {\n                $(\".tf-question-desc\").slideUp(400);\n                $(\".tf-faq-head\").removeClass(\"active\");\n                $('.tf-faq-col').removeClass('active');\n            }\n            $this.toggleClass(\"active\");\n            $this.next().slideToggle();\n            $(this).closest('.tf-faq-col').toggleClass('active');\n        });\n\n        // Tabs Section\n        $('.tf-details-menu ul li').on(\"click\", function () {\n            var $this = $(this);\n            $currentmenu = $this.attr('data-menu');\n            $('.tf-details-menu ul li').removeClass('active');\n\n            $('.tf-details-menu ul li[data-menu=\"' + $currentmenu + '\"]').addClass('active');\n        });\n\n       \n        \n        \n        \n        // Car Location Autocomplete\n\n        function tourfic_car_autocomplete(inp, arr) {\n            /*the autocomplete function takes two arguments,\n            the text field element and an array of possible autocompleted values:*/\n\n            // Executes when some one click in the search form location\n            inp.addEventListener(\"focus\", function () {\n                    closeAllLists();\n                    let a = document.createElement(\"DIV\");\n                    a.setAttribute(\"id\", this.id + \"-autocomplete-list\");\n                    a.setAttribute(\"class\", \"autocomplete-items\");\n                    this.parentNode.appendChild(a);\n                    for (const [key, value] of Object.entries(arr)) {\n                        let b = document.createElement(\"DIV\");\n                        b.innerHTML = value;\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug;\n                            setTimeout(() => {\n                                closeAllLists();\n                            },100);\n                        });\n                        a.appendChild(b);\n                    }\n                // }\n            })\n\n            var currentFocus;\n            /*execute a function when someone writes in the text field:*/\n            inp.addEventListener(\"keyup\", function (e) {\n                var a, b, i, val = this.value;\n                /*close any already open lists of autocompleted values*/\n                closeAllLists();\n                currentFocus = -1;\n                /*create a DIV element that will contain the items (values):*/\n                a = document.createElement(\"DIV\");\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n                a.setAttribute(\"class\", \"autocomplete-items\");\n                /*append the DIV element as a child of the autocomplete container:*/\n                this.parentNode.appendChild(a);\n                var $notfound = [];\n                /*for each item in the array...*/\n                for (const [key, value] of Object.entries(arr)) {\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n                        $notfound.push('found');\n                        /*create a DIV element for each matching element:*/\n                        b = document.createElement(\"DIV\");\n                        /*make the matching letters bold:*/\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\n                        b.innerHTML += value.substr(val.length);\n                        /*insert a input field that will hold the current array item's value:*/\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\n                        /*execute a function when someone clicks on the item value (DIV element):*/\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            /*insert the value for the autocomplete text field:*/\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\n                            /*close the list of autocompleted values,\n                            (or any other open lists of autocompleted values:*/\n                            closeAllLists();\n                        });\n                        a.appendChild(b);\n\n                    } else {\n                        $notfound.push('notfound');\n                    }\n                }\n\n                if ($notfound.indexOf('found') == -1) {\n                    /*create a DIV element for each matching element:*/\n                    b = document.createElement(\"DIV\");\n                    /*make the matching letters bold:*/\n\n                    b.innerHTML += tf_params.no_found;\n                    /*insert a input field that will hold the current array item's value:*/\n                    b.innerHTML += \"<input type='hidden' value=''>\";\n                    /*execute a function when someone clicks on the item value (DIV element):*/\n                    b.addEventListener(\"click\", function (e) {\n                        /*insert the value for the autocomplete text field:*/\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\n                        /*close the list of autocompleted values,\n                        (or any other open lists of autocompleted values:*/\n                        closeAllLists();\n                    });\n                    a.appendChild(b);\n                }\n            });\n            /*execute a function presses a key on the keyboard:*/\n            inp.addEventListener(\"keydown\", function (e) {\n                var x = document.getElementById(this.id + \"autocomplete-list\");\n                if (x) x = x.getElementsByTagName(\"div\");\n                if (e.keyCode == 40) {\n                    /*If the arrow DOWN key is pressed,\n                    increase the currentFocus variable:*/\n                    currentFocus++;\n                    /*and and make the current item more visible:*/\n                    addActive(x);\n                } else if (e.keyCode == 38) { //up\n                    /*If the arrow UP key is pressed,\n                    decrease the currentFocus variable:*/\n                    currentFocus--;\n                    /*and and make the current item more visible:*/\n                    addActive(x);\n                } else if (e.keyCode == 13) {\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\n                    e.preventDefault();\n                    if (currentFocus > -1) {\n                        /*and simulate a click on the \"active\" item:*/\n                        if (x) x[currentFocus].trigger(\"click\");;\n                    }\n                }\n            });\n\n            function addActive(x) {\n                /*a function to classify an item as \"active\":*/\n                if (!x) return false;\n                /*start by removing the \"active\" class on all items:*/\n                removeActive(x);\n                if (currentFocus >= x.length) currentFocus = 0;\n                if (currentFocus < 0) currentFocus = (x.length - 1);\n                /*add class \"autocomplete-active\":*/\n                x[currentFocus].classList.add(\"autocomplete-active\");\n            }\n\n            function removeActive(x) {\n                /*a function to remove the \"active\" class from all autocomplete items:*/\n                for (var i = 0; i < x.length; i++) {\n                    x[i].classList.remove(\"autocomplete-active\");\n                }\n            }\n\n            function closeAllLists(elmnt) {\n                /*close all autocomplete lists in the document,\n                except the one passed as an argument:*/\n                var x = document.getElementsByClassName(\"autocomplete-items\");\n                for (var i = 0; i < x.length; i++) {\n                    if (elmnt != x[i] && elmnt != inp) {\n                        x[i].parentNode.removeChild(x[i]);\n                    }\n                }\n            }\n\n            /*execute a function when someone clicks in the document:*/\n            $(document).on('click', function (event) {\n                if (!$(event.target).closest(\"#tf_dropoff_location, #tf_pickup_location\").length) {\n                    $(\"#tf_pickup_location-autocomplete-list,#tf_dropoff_location-autocomplete-list\").hide();\n                }\n            });\n        }\n\n        // Car location autocomplete\n        var car_pickup_input = document.getElementById(\"tf_pickup_location\");\n        var car_locations = tf_params.car_locations;\n        if (car_pickup_input) {\n            tourfic_car_autocomplete(car_pickup_input, car_locations);\n        }\n\n        var car_dropoff_input = document.getElementById(\"tf_dropoff_location\");\n        if (car_dropoff_input) {\n            tourfic_car_autocomplete(car_dropoff_input, car_locations);\n        }\n\n        $(\".tf-booking-popup-header .tf-close-popup\").on(\"click\", function (e) {\n            e.preventDefault();\n            $('.tf-car-booking-popup').hide();\n        });\n\n\n        /*\n        * Car Booking Popup\n        * @author Jahid\n        */\n        $(\".tf-car-booking\").on('click', function (e) {\n            e.preventDefault();\n            $this = $(this);\n\n            $('.tf-booking-content-wraper').html(\"\");\n            var pickup = $('#tf_pickup_location').val();\n            let dropoff = $('#tf_dropoff_location').val();\n            let pickup_date = $('.tf_pickup_date').val();\n            let dropoff_date = $('.tf_dropoff_date').val();\n            let pickup_time = $('.tf_pickup_time').val();\n            let dropoff_time = $('.tf_dropoff_time').val();\n            let post_id = $('#post_id').val();\n\n            if( !pickup || !dropoff || !pickup_date || !dropoff_date || !pickup_time || !dropoff_time ){\n                $('.error-notice').show();\n                $('.error-notice').text('Fill up the all fields');\n                return;\n            }\n\n            if($this.attr('data-partial')){\n                $('#tf_partial_payment').val($this.attr('data-partial'));\n            }\n\n            var data = {\n                action: 'tf_car_booking_pupup',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                pickup_date: pickup_date,\n                pickup_time: pickup_time,\n                dropoff_date: dropoff_date,\n                dropoff_time: dropoff_time\n            };\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: data,\n                beforeSend: function () {\n                    $this.addClass('tf-btn-loading');\n                },\n                success: function (data) {\n                    $('.tf-booking-content-wraper').html(data);\n                    $('.error-notice').hide();\n                    $('.tf-car-booking-popup').css('display', 'flex');\n                    $this.removeClass('tf-btn-loading');\n                    if($(window).width() < 768){\n                        $(\".tf-date-select-box\").hide();\n                        $(\".tf-mobile-booking-btn\").hide();\n                    }\n                }\n            });\n\n        });\n\n        /*\n        * Car Archive Booking Popup\n        * @author Jahid\n        */\n        $(document).on('click', '.tf-car-quick-booking', function (e) {\n            e.preventDefault();\n            $this = $(this);\n            $('.tf-booking-content-wraper').html(\"\");\n            let post_id = $this.closest('.tf-booking-btn').find('#post_id').val();\n            let pickup_date = $this.closest('.tf-booking-btn').find('#pickup_date').val();\n            let dropoff_date = $this.closest('.tf-booking-btn').find('#dropoff_date').val();\n            let pickup_time = $this.closest('.tf-booking-btn').find('#pickup_time').val();\n            let dropoff_time = $this.closest('.tf-booking-btn').find('#dropoff_time').val();\n\n            var data = {\n                action: 'tf_car_booking_pupup',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                pickup_date: pickup_date,\n                pickup_time: pickup_time,\n                dropoff_date: dropoff_date,\n                dropoff_time: dropoff_time\n            };\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: data,\n                beforeSend: function () {\n                    $this.addClass('tf-btn-loading');\n                },\n                success: function (data) {\n                    $this.closest('.tf-booking-btn').find('.tf-booking-content-wraper').html(data);\n                    $this.closest('.tf-booking-btn').find('.tf-car-booking-popup').css('display', 'flex');\n                    $this.removeClass('tf-btn-loading');\n                }\n            });\n\n        });\n\n        $(document).on('click touchstart', '.tf-booking-content-wraper .booking-next', function (e) {\n            e.preventDefault();\n            let $this = $(this);\n\n            let protections = $('input[name=\"protections[]\"]');\n\n\n            let validationProtections = protectionValidation(protections);\n\n            if( validationProtections ){\n                return;\n            }else{\n                $('.tf-booking-tabs ul li').removeClass('active');\n                $('.tf-booking-tabs ul li.booking').addClass('active');\n\n                $('.tf-protection-content').hide();\n                $('.tf-booking-bar').hide();\n\n                $('.tf-booking-form-fields').show();\n            }\n        });\n\n        /*\n        * Car Booking\n        * @author Jahid\n        */\n\n        const BookingVallidation = (booking) => {\n            let hasErrors = [];\n            \n            $('.error-text').text(\"\");\n            booking.find('.tf-single-field').each(function () {\n                $(this).find('input, select').each(function () {\n                    if ($(this).attr('data-required')) {\n                        if ($(this).val() == \"\") {\n                            hasErrors.push(true);\n                            const errorContainer = $(this).siblings('.error-text');\n                            errorContainer.text('This field is required.');\n                            if (errorContainer.text() !== '') {\n                                errorContainer.addClass('error-visible');\n                            } else {\n                                errorContainer.removeClass('error-visible');\n                            }\n                        }\n                    }\n                });\n                $(this).find('input[type=\"radio\"], input[type=\"checkbox\"]').each(function () {\n                    if ($(this).attr('data-required')) {\n                        const radioName = $(this).attr('name');\n                        const isChecked = $('input[name=\"' + radioName + '\"]:checked').length > 0;\n\n                        if (!isChecked) {\n                            hasErrors.push(true);\n                            const errorContainer = $(this).parent().siblings('.error-text');\n                            errorContainer.text('This field is required.');\n                            if (errorContainer.text() !== '') {\n                                errorContainer.addClass('error-visible');\n                            } else {\n                                errorContainer.removeClass('error-visible');\n                            }\n                        }\n                    }\n                });\n            });\n            if (hasErrors.includes(true)) {\n                return true;\n            }\n        }\n\n        const protectionValidation = (protections) => {\n\n            var attrCount = 0;\n            var response = [];\n\n            $(protections).each(function() {\n                attrCount += Array.from(this.attributes).filter( function(a) {\n                    return a.nodeName.startsWith('data-required');\n                }).length\n            })\n            \n            protections.each(function (i, protection) {\n\n                if ( $(protection).data(\"required\") ) {\n                    \n                    if (! $(protection).is(':checked')) {\n                        response.push(true);\n                    } else {\n                       response.push(false);\n                    }\n                }\n            });\n\n            if( response.includes(true) ){\n                if( attrCount > 1 ){\n                    notyf.error('( * ) fields are required');\n                } else {\n                    notyf.error('( * ) field is required');\n                }\n                return true;\n            }\n        };\n        $(document).on('click touchstart', '.booking-process', function (e) {\n            \n            if (e.type === 'touchstart') {\n                $(this).off('click');\n            }\n            let $this = $(this);\n            \n            let extra_ids = $(\"input[name='selected_extra[]']\").map(function() {\n                return $(this).val();\n            }).get();\n\n            let extra_qty = $(\"input[name='selected_qty[]']\").map(function() {\n                return $(this).val();\n            }).get();\n\n            var travellerData = {};\n            if($this.hasClass('tf-offline-booking')){\n                let booking = $(this).closest('.tf-booking-form-fields');\n                let Validation_response = BookingVallidation(booking);\n                if(Validation_response){\n                    return;\n                }\n                // Text, email, date inputs\n                $(\"input[name^='traveller[']\").each(function() {\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\n                    travellerData[name] = $(this).val();\n                });\n\n                // Select dropdowns\n                $(\"select[name^='traveller[']\").each(function() {\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\n                    travellerData[name] = $(this).val();\n                });\n\n                // Checkbox and Radio buttons\n                $(\"input[type='checkbox'][name^='traveller[']:checked, input[type='radio'][name^='traveller[']:checked\").each(function() {\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\n                    if (!travellerData[name]) {\n                        travellerData[name] = [];\n                    }\n                    travellerData[name].push($(this).val());\n                });\n\n            }\n    \n            if($this.hasClass('tf-final-step')){\n                var pickup = $('#tf_pickup_location').val();\n                let dropoff = $('#tf_dropoff_location').val();\n                let pickup_date = $('.tf_pickup_date').val();\n                let dropoff_date = $('.tf_dropoff_date').val();\n                let pickup_time = $('.tf_pickup_time').val();\n                let dropoff_time = $('.tf_dropoff_time').val();\n\n                if( !pickup || !dropoff || !pickup_date || !dropoff_date || !pickup_time || !dropoff_time ){\n                    $('.error-notice').show();\n                    $('.error-notice').text('Fill up the all fields');\n                    return;\n                }\n            }\n\n            $('.error-notice').hide();\n\n            var pickup = $('#tf_pickup_location').val();\n            let dropoff = $('#tf_dropoff_location').val();\n            let pickup_date = $('.tf_pickup_date').val();\n            let dropoff_date = $('.tf_dropoff_date').val();\n            let pickup_time = $('.tf_pickup_time').val();\n            let dropoff_time = $('.tf_dropoff_time').val();\n            let post_id = $('#post_id').val();\n            var protection = $('input[name=\"protections[]\"]:checked').map(function() {\n                return $(this).val();  // Get the value of each checked checkbox\n            }).get();\n\n            let protections = $('input[name=\"protections[]\"]');\n\n            \n            let validationProtections = protectionValidation(protections);\n\n            if( validationProtections ){\n                return;\n            }\n\n            let partial_payment = $('#tf_partial_payment').val();\n\n            var data = {\n                action: 'tf_car_booking',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                pickup: pickup,\n                dropoff: dropoff,\n                pickup_date: pickup_date,\n                dropoff_date: dropoff_date,\n                pickup_time: pickup_time,\n                dropoff_time: dropoff_time,\n                protection: protection,\n                partial_payment: partial_payment,\n                extra_ids: extra_ids,\n                extra_qty: extra_qty,\n                travellerData: travellerData\n            };\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: data,\n                beforeSend: function () {\n                    $this.addClass('tf-btn-loading');\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n                    if (response.status == 'error') {\n\n                        if (response.errors) {\n                            response.errors.forEach(function (text) {\n                                notyf.error(text);\n                            });\n                        }\n\n                        $('.tf-car-booking-popup').hide();\n                        $this.removeClass('tf-btn-loading');\n                        if($('.tf-protection-content')){\n                            $('.tf-protection-content').show();\n                            $('.tf-booking-bar').show();\n                            $('.tf-booking-form-fields').hide();\n\n                            $('.tf-booking-tabs ul li').removeClass('active');\n                            $('.tf-booking-tabs ul li.protection').addClass('active');\n                        }else{\n                            $('.tf-booking-form-fields').show();\n                            $('.tf-booking-tabs ul li').removeClass('active');\n                            $('.tf-booking-tabs ul li.booking').addClass('active');\n                        }\n                        return false;\n                    } else {\n                        if (response.without_payment == 'false') {\n                            if (response.status == 'error') {\n\n                                if (response.errors) {\n                                    response.errors.forEach(function (text) {\n                                        notyf.error(text);\n                                    });\n                                }\n\n                                return false;\n                            } else {\n\n                                if (response.redirect_to) {\n                                    window.location.replace(response.redirect_to);\n                                } else {\n                                    jQuery(document.body).trigger('added_to_cart');\n                                }\n\n                            }\n                        }else{\n                            $('.tf-car-booking-popup').hide();\n                            $('.tf-withoutpayment-booking-confirm').addClass('show');\n                            $this.removeClass('tf-btn-loading');\n                            $('#tf_pickup_location').val('');\n                            $('#tf_dropoff_location').val('');\n                            $('.tf_pickup_date').val('');\n                            $('.tf_dropoff_date').val('');\n                            $('.tf_pickup_time').val('');\n                            $('.tf_dropoff_time').val('');\n                            if($('.tf-protection-content')){\n                                $('.tf-protection-content').show();\n                                $('.tf-booking-bar').show();\n                                $('.tf-booking-form-fields').hide();\n\n                                $('.tf-booking-tabs ul li').removeClass('active');\n                                $('.tf-booking-tabs ul li.protection').addClass('active');\n                            }else{\n                                $('.tf-booking-form-fields').show();\n                                $('.tf-booking-tabs ul li').removeClass('active');\n                                $('.tf-booking-tabs ul li.booking').addClass('active');\n                            }\n                        }\n                    }\n                }\n            });\n\n        });\n\n        /*\n        * Car Search submit\n        * @author Jahid\n        */\n        $(document).on('submit', '#tf_car_booking', function (e) {\n            e.preventDefault();\n            let form = $(this),\n                submitBtn = form.find('.tf-submit'),\n                formData = new FormData(form[0]);\n            \n            formData.append('action', 'tf_car_search');\n            formData.append('_nonce', tf_params.nonce);\n\n            if (formData.get('from') == null || formData.get('to') == null) {\n                formData.append('from', tf_params.tf_car_min_price);\n                formData.append('to', tf_params.tf_car_max_price);\n            }\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: formData,\n                contentType: false,\n                processData: false,\n                beforeSend: function () {\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\n                    submitBtn.addClass('tf-btn-loading');\n                },\n                success: function (response) {\n                    let obj = JSON.parse(response);\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\n                    submitBtn.removeClass('tf-btn-loading');\n                    if (obj.status === 'error') {\n                        notyf.error(obj.message);\n                    }\n                    if (obj.status === 'success') {\n                        //location redirect to form action url with query string\n                        location.href = form.attr('action') + '?' + obj.query_string;\n                    }\n                }\n            });\n        });\n\n        /*\n        * Car Quick Booking\n        * @author Jahid\n        */\n\n        $(\".quick-booking\").on('click', function (e) {\n            let $this = $(this);\n\n            var pickup = $('#tf_pickup_location').val();\n            let dropoff = $('#tf_dropoff_location').val();\n            let pickup_date = $this.closest('.tf-booking-btn').find('#pickup_date').val();\n            let dropoff_date = $this.closest('.tf-booking-btn').find('#dropoff_date').val();\n            let pickup_time = $this.closest('.tf-booking-btn').find('#pickup_time').val();\n            let dropoff_time = $this.closest('.tf-booking-btn').find('#dropoff_time').val();\n            let post_id = $this.closest('.tf-booking-btn').find('#post_id').val();\n\n            var data = {\n                action: 'tf_car_booking',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                pickup: pickup,\n                dropoff: dropoff,\n                pickup_date: pickup_date,\n                dropoff_date: dropoff_date,\n                pickup_time: pickup_time,\n                dropoff_time: dropoff_time\n            };\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: data,\n                beforeSend: function () {\n                    $this.addClass('tf-btn-loading');\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n                    if (response.without_payment == 'false') {\n                        if (response.status == 'error') {\n\n                            if (response.errors) {\n                                response.errors.forEach(function (text) {\n                                    notyf.error(text);\n                                });\n                            }\n\n                            return false;\n                        } else {\n\n                            if (response.redirect_to) {\n                                window.location.replace(response.redirect_to);\n                            } else {\n                                jQuery(document.body).trigger('added_to_cart');\n                            }\n\n                        }\n                    }\n                }\n            });\n\n        });\n\n        $(\".tf-booking-btn .booking-process\").on(\"click touchstart\", function (e) {\n            if(e.type === 'touchstart'){\n                $(this).off('click');\n            }\n            let $this = $(this);\n\n            var travellerData = {};\n            if($this.hasClass('tf-offline-booking')){\n                let booking = $(this).closest('.tf-booking-form-fields');\n                let Validation_response = BookingVallidation(booking);\n                if(Validation_response){\n                    return;\n                }\n                // Text, email, date inputs\n                $(\"input[name^='traveller[']\").each(function() {\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\n                    travellerData[name] = $(this).val();\n                });\n\n                // Select dropdowns\n                $(\"select[name^='traveller[']\").each(function() {\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\n                    travellerData[name] = $(this).val();\n                });\n\n                // Checkbox and Radio buttons\n                $(\"input[type='checkbox'][name^='traveller[']:checked, input[type='radio'][name^='traveller[']:checked\").each(function() {\n                    var name = $(this).attr('name').replace(/^traveller\\[(.*)\\]$/, '$1'); // Remove 'traveller_' prefix\n                    if (!travellerData[name]) {\n                        travellerData[name] = [];\n                    }\n                    travellerData[name].push($(this).val());\n                });\n            }\n    \n            var pickup = $('#tf_pickup_location').val();\n            let dropoff = $('#tf_dropoff_location').val();\n            let partial_payment = $('#tf_partial_payment').val();\n            let pickup_date = $this.closest('.tf-booking-btn').find('#pickup_date').val();\n            let dropoff_date = $this.closest('.tf-booking-btn').find('#dropoff_date').val();\n            let pickup_time = $this.closest('.tf-booking-btn').find('#pickup_time').val();\n            let dropoff_time = $this.closest('.tf-booking-btn').find('#dropoff_time').val();\n            let post_id = $this.closest('.tf-booking-btn').find('#post_id').val();\n\n            var protection = $('input[name=\"protections[]\"]:checked').map(function() {\n                return $(this).val();  // Get the value of each checked checkbox\n            }).get();\n\n            let protections = $('input[name=\"protections[]\"]');\n            \n            let validationProtections = protectionValidation(protections);\n\n            if( validationProtections ){\n                return;\n            }\n\n            var data = {\n                action: 'tf_car_booking',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                pickup: pickup,\n                dropoff: dropoff,\n                pickup_date: pickup_date,\n                dropoff_date: dropoff_date,\n                pickup_time: pickup_time,\n                dropoff_time: dropoff_time,\n                protection: protection,\n                partial_payment: partial_payment,\n                travellerData: travellerData\n            };\n            \n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: data,\n                beforeSend: function () {\n                    $this.addClass('tf-btn-loading');\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n                    if (response.status == 'error') {\n\n                        if (response.errors) {\n                            response.errors.forEach(function (text) {\n                                notyf.error(text);\n                            });\n                        }\n\n                        $('.tf-car-booking-popup').hide();\n                        $this.removeClass('tf-btn-loading');\n                        return false;\n                    } else {\n                        if (response.without_payment == 'false') {\n                            if (response.status == 'error') {\n\n                                if (response.errors) {\n                                    response.errors.forEach(function (text) {\n                                        notyf.error(text);\n                                    });\n                                }\n\n                                return false;\n                            } else {\n\n                                if (response.redirect_to) {\n                                    window.location.replace(response.redirect_to);\n                                } else {\n                                    jQuery(document.body).trigger('added_to_cart');\n                                }\n\n                            }\n                        }else{\n                            $('.tf-car-booking-popup').hide();\n                            $('.tf-withoutpayment-booking-confirm').addClass('show');\n                            $this.removeClass('tf-btn-loading');\n                        }\n                    }\n                }\n            });\n\n        });\n\n\n        /*\n        * Car Single Price Calculation\n        * @author Jahid\n        */\n\n        $(document).on('change', '.tf-car-booking-form .tf_pickup_date, .tf-car-booking-form .tf_pickup_time, .tf-car-booking-form .tf_dropoff_date, .tf-car-booking-form .tf_dropoff_time', function (e) {\n            \n            let extra_ids = $(\"input[name='selected_extra[]']\").map(function() {\n                return $(this).val();\n            }).get();\n\n            let extra_qty = $(\"input[name='selected_qty[]']\").map(function() {\n                return $(this).val();\n            }).get();\n\n            let pickup_date = $('.tf_pickup_date').val();\n            let dropoff_date = $('.tf_dropoff_date').val();\n            let pickup_time = $('.tf_pickup_time').val();\n            let dropoff_time = $('.tf_dropoff_time').val();\n            let post_id = $('#post_id').val();\n\n            if( !pickup_date || !dropoff_date || !pickup_time || !dropoff_time ){\n                return;\n            }\n            var data = {\n                action: 'tf_car_price_calculation',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                pickup_date: pickup_date,\n                dropoff_date: dropoff_date,\n                pickup_time: pickup_time,\n                dropoff_time: dropoff_time,\n                extra_ids: extra_ids,\n                extra_qty: extra_qty,\n            };\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: data,\n                beforeSend: function () {\n                    $('.tf-date-select-box').addClass('tf-box-loading');\n                },\n                success: function (response) {\n                    $('.tf-cancellation-box').html('');\n                    $('.tf-cancellation-box').hide();\n                    if(response){\n                        if(response.data.total_price){\n                            $('.tf-price-header h2').html(response.data.total_price);\n                        }\n                        if(response.data.cancellation){\n                            $('.tf-cancellation-box').html(response.data.cancellation);\n                            $('.tf-cancellation-box').show();\n                        }\n                        $('.tf-date-select-box').removeClass('tf-box-loading');\n                    }\n                }\n            });\n        });\n\n\n        /*\n        * Car Archive View\n        * @author Jahid\n        */\n         $(document).on('click', '.tf-archive-header .tf-archive-view ul li', function (e) {\n            $('.tf-archive-header .tf-archive-view ul li').removeClass('active');\n            let $this = $(this);\n            $this.addClass('active');\n            let view = $this.attr('data-view');\n            if(view=='grid'){\n                $('.tf-car-details-column .tf-car-archive-result .tf-car-result').removeClass('list-view');\n                $('.tf-car-details-column .tf-car-archive-result .tf-car-result').addClass('grid-view');\n            }else{\n                $('.tf-car-details-column .tf-car-archive-result .tf-car-result').addClass('list-view');\n                $('.tf-car-details-column .tf-car-archive-result .tf-car-result').removeClass('grid-view');\n            }\n        });\n\n        if($('.tf-single-car-details-warper .tf-details-menu').length){\n            // Booking Bar Show\n            $(window).scroll(function() {\n                // Check the position of the target div\n                var targetOffset = $('.tf-single-car-details-warper .tf-details-menu').offset().top;\n                var targetHeight = $('.tf-single-car-details-warper .tf-details-menu').outerHeight(); // Get the full height of the div including padding\n                var targetBottom = targetOffset + targetHeight;\n\n                var scrollPosition = $(window).scrollTop();\n        \n                // If the user has scrolled past the target div, show the other div\n                if (scrollPosition > targetBottom) {\n                    $('.tf-single-booking-bar').fadeIn(); // You can change this to show() or add animations\n                } else {\n                    $('.tf-single-booking-bar').fadeOut();\n                }\n            });\n        }\n\n        // Back to Booking Form\n        $(document).on('click', '.tf-back-to-booking', function (e) {\n            e.preventDefault(); \n            $('.tf-single-booking-bar').fadeOut();\n            var bookingBarHeight = $('.tf-single-booking-bar').outerHeight() || 0;\n            $('html, body').animate({\n                scrollTop: $('.tf-date-select-box').offset().top - bookingBarHeight\n            }); \n        });        \n\n        // Social Share\n        $('.single-tf_carrental .tf-single-template__one .tf-share-toggle').on(\"click\", function (e) {\n            e.preventDefault();\n            $('.tf-share-toggle').toggleClass('actives');\n            $('.share-car-content').toggleClass('show');\n        });\n\n        // Instructions showing\n        $(document).on('click', '.tf-instraction-showing', function (e) {\n            $('.tf-car-instraction-popup').css('display', 'flex');\n        });   \n\n        // Instructions Popup Close\n        $(\".tf-instraction-popup-header .tf-close-popup\").on(\"click touchstart\", function (e) {\n            e.preventDefault();\n            $('.tf-car-instraction-popup').hide();\n        });\n\n        $(\".tf-confirm-popup .tf-booking-times\").on(\"click touchstart\", function (e) {\n            e.preventDefault();\n            $('.tf-withoutpayment-booking-confirm').removeClass('show');\n        })\n\n        // Showing Total into a protections\n        $(document).on('change', '.protection-checkbox', function (e) {\n            let total_price = 0;\n            let prev_total = parseFloat($(\"#tf_total_proteciton_price\").val()) || 0; // Parse as float, default to 0 if empty\n            let single_price = parseFloat($(this).parent().parent().find('#tf_single_protection_price').val()) || 0; // Parse as float\n        \n            if ($(this).is(':checked')) {\n                total_price = prev_total + single_price;\n            } else {\n                total_price = prev_total - single_price;\n            }\n        \n            // Update total and display it\n            $('#tf_total_proteciton_price').val(total_price.toFixed(2)); // Format as float with 2 decimal places\n            $('#tf_proteciton_subtotal').text(total_price.toFixed(2)); // Display formatted total\n        });\n\n        /*\n        * Mobile Booking button\n        * @author Jahid\n        */\n        $(\".tf-mobile-booking-btn button\").on(\"click\", function (e) {\n            e.preventDefault();\n            var $button = $(this);\n\n            // Toggle the visibility of .tf-date-select-box\n            $('.tf-date-select-box').slideToggle( function () {\n                // Check visibility after the toggle animation completes\n                if ($(this).is(':visible')) {\n                    $button.text('Hide');\n                } else {\n                    $button.text('Book Now');\n                }\n            });\n        });\n\n    \n    });\n\n    \n     \n     \n   \n\n})(jQuery, window);\n\n\n\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/car.js?");

/***/ }),

/***/ "./sass/app/js/free/hotel.js":
/*!***********************************!*\
  !*** ./sass/app/js/free/hotel.js ***!
  \***********************************/
/***/ (() => {

eval("(function ($, win) {\n    $(document).ready(function () {\n\n        // Create an instance of Notyf\n        const notyf = new Notyf({\n            ripple: true,\n            duration: 3000,\n            dismissable: true,\n            position: {\n                x: 'right',\n                y: 'bottom',\n            },\n        });\n\n        /**\n         * Hotel room availability ajax filter\n         * @author Fida\n         */\n        const tfRoomFilter = () => {\n            // Child & Child Type\n            var adult_field_type = $(\"#adults\").attr('type');\n            var child_field_type = $(\"#children\").attr('type');\n            if ($.trim($('input[name=check-in-out-date]').val()) == '') {\n\n                if ($('#tf-required').length === 0) {\n                    if($('.tf_booking-dates .tf_label-row').length === 1){\n                        if(tf_params.hotel_single_template == 'design-3'){\n                            $('.tf_booking-dates .tf_label-row').addClass('tf-date-required');\n                            $('.tf-hotel-error-msg').show();\n                        } else {\n                            $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\"><b>' + tf_params.field_required + '</b></span>');\n                        }\n                    }else{\n                        $(\".tf-check-in-out-date\").trigger(\"click\");\n                    }\n                }\n                return;\n            } else {\n                if ($('#tf-required').length === 1) {\n                    if(tf_params.hotel_single_template == 'design-3'){\n                        $('.tf_booking-dates .tf_label-row').removeClass('tf-date-required');\n                        $('.tf-hotel-error-msg').hide();\n                    } else {\n                        $('.tf_booking-dates .tf_label-row .required').html('');\n                    }\n                }\n            }\n            //get the checked values of features\n            var features = [];\n            $('.tf-room-checkbox :checkbox:checked').each(function (i) {\n                features[i] = $(this).val();\n            });\n            var tf_room_avail_nonce = $(\"input[name=tf_room_avail_nonce]\").val();\n            var post_id = $('input[name=post_id]').val();\n            if (adult_field_type == \"number\" || adult_field_type == \"tel\") {\n                var adult = $('#adults').val();\n            } else {\n                var adult = $('select[name=adults] option').filter(':selected').val();\n            }\n            if (child_field_type == \"number\" || child_field_type == \"tel\") {\n                var child = $('#children').val();\n            } else {\n                var child = $('select[name=children] option').filter(':selected').val();\n            }\n            //var features = $('input[name=features]').filter(':checked').val();\n            var children_ages = $('input[name=children_ages]').val();\n            var check_in_out = $('input[name=check-in-out-date]').val();\n\n            var data = {\n                action: 'tf_room_availability',\n                tf_room_avail_nonce: tf_room_avail_nonce,\n                post_id: post_id,\n                adult: adult,\n                child: child,\n                features: features,\n                children_ages: children_ages,\n                check_in_out: check_in_out,\n            };\n\n            jQuery.ajax({\n                url: tf_params.ajax_url,\n                type: 'post',\n                data: data,\n                beforeSend: function () {\n                    $(\"#tf-single-hotel-avail .tf-submit\").addClass('tf-btn-loading');\n                },\n                success: function (data) {\n                    if( $(\"#rooms\").length > 0){\n                        $('html, body').animate({\n                            scrollTop: $(\"#rooms\").offset().top\n                        }, 500);\n                        $(\"#rooms\").html(data);\n                        $('.tf-room-filter').show();\n                        $(\"#tf-single-hotel-avail .tf-submit\").removeClass('tf-btn-loading');\n                     } else {\n                         notyf.error(tf_params.no_room_found);\n                         $(\"#tf-single-hotel-avail .tf-submit\").removeClass('tf-btn-loading');\n                     }\n                 },\n                error: function (data) {\n                    console.log(data);\n                }\n            });\n        }\n\n        $(document).on('change', 'input[name=check-in-out-date]', function () {\n            if(tf_params.hotel_single_template == 'design-3'){\n                if($.trim($('input[name=check-in-out-date]').val()) !== '') {\n                    $('.tf_booking-dates .tf_label-row').removeClass('tf-date-required');\n                    $('.tf-hotel-error-msg').hide();\n                } else {\n                    $('.tf_booking-dates .tf_label-row').addClass('tf-date-required');\n                    $('.tf-hotel-error-msg').show();\n                }\n            }\n        });\n\n        $('#tf-single-hotel-avail .tf-submit').on('click', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            tfRoomFilter();\n        });\n\n        $(document).on('change', '.tf-room-checkbox :checkbox', function () {\n            tfRoomFilter();\n        });\n        /**\n         * Click to go back to hotel availability form\n         */\n        $(document).on('click', '.hotel-room-availability', function (e) {\n            e.preventDefault();\n\n            $('html, body').animate({\n                scrollTop: $(\"#tf-single-hotel-avail\").offset().top\n            }, 500);\n        });\n\n        /**\n         * Ajax hotel booking\n         *\n         * tf_hotel_booking\n         */\n        $(document).on('click', '.hotel-room-book', function (e) {\n            e.preventDefault();\n\n            var $this = $(this);\n\n            var tf_room_booking_nonce = $(\"input[name=tf_room_booking_nonce]\").val();\n            var post_id = $('input[name=post_id]').val();\n            var unique_id = $this.closest('.tf-room').find('input[name=unique_id]').val();\n            var room_id = $this.closest('.tf-room').find('input[name=room_id]').val();\n            var option_id = $this.closest('.tf-room').find('input[name=option_id]').val();\n\n            var location = $('input[name=place]').val();\n            var adult = $('input[name=adult]').val();\n            var child = $('input[name=child]').val();\n            var children_ages = $('input[name=children_ages]').val();\n            var check_in_date = $('input[name=check_in_date]').val();\n            var check_out_date = $('input[name=check_out_date]').val();\n            if ($(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val()) {\n                var room = $(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val();\n                var deposit = $(this).closest('.tf-room').find('input[name=make_deposit]').is(':checked');\n            } else {\n                var room = $(\"#hotel_room_number\").val();\n                var deposit = $this.closest('.tf-room').find('input[name=make_deposit]').is(':checked');\n            }\n            var airport_service = $this.closest('.tf-withoutpayment-popup').find('[name=\"airport_service\"]').val();\n\n            let selectedExtras = [];\n            $($this.closest('.tf-withoutpayment-popup').find('input[name=\"extra_service\"]:checked')).each(function() {\n                selectedExtras.push($(this).val());\n            });\n            var data = {\n                action: 'tf_hotel_booking',\n                tf_room_booking_nonce: tf_room_booking_nonce,\n                post_id: post_id,\n                room_id: room_id,\n                unique_id: unique_id,\n                option_id: option_id,\n                location: location,\n                adult: adult,\n                child: child,\n                children_ages: children_ages,\n                check_in_date: check_in_date,\n                check_out_date: check_out_date,\n                room: room,\n                deposit: deposit,\n                airport_service: airport_service,\n                extra_service: selectedExtras\n            };\n            $this.closest(\".tf-booking-pagination\").siblings(\".tf-booking-content-summery\").find( '.traveller-single-info input' ).each(function (index, element) {\n                var element_name = $(element).attr(\"name\");\n                data[ element_name ] = $(element).val();\n           })\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                beforeSend: function (data) {\n                    $this.block({\n                        message: null,\n                        overlayCSS: {\n                            background: \"#fff\",\n                            opacity: .5\n                        }\n                    });\n\n                    $('.tf_notice_wrapper').html(\"\").hide();\n                },\n                complete: function (data) {\n                    $this.unblock();\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n\n                    if (response.status == 'error') {\n\n                        if (response.errors) {\n                            response.errors.forEach(function (text) {\n                                notyf.error(text);\n                            });\n                        }\n\n                        return false;\n                    } else {\n\n                        if (response.redirect_to) {\n                            window.location.replace(response.redirect_to);\n                        } else {\n                            jQuery(document.body).trigger('added_to_cart');\n                            $.fancybox.close();\n                        }\n\n                    }\n                },\n                error: function (data) {\n                    console.log(data);\n                },\n\n            });\n\n        });\n\n        /**\n         * Single Hotel Video\n         *\n         * Fancybox\n         */\n\n   \n        $('[data-fancybox=\"hotel-vide\"]').fancybox({\n            loop: true,\n            buttons: [\n                \"zoom\",\n                \"slideShow\",\n                \"fullScreen\",\n                \"close\"\n            ],\n            hash: false,\n        });\n\n        /**\n         * Single hotel Gallery\n         *\n         * Fancybox\n         */\n        $('[data-fancybox=\"hotel-gallery\"]').fancybox({\n            loop: true,\n            buttons: [\n                \"zoom\",\n                \"slideShow\",\n                \"fullScreen\",\n                \"close\"\n            ],\n            hash: false,\n        });\n\n        /**\n         * Single Map\n         *\n         * Fancybox\n         */\n        $('[data-fancybox=\"hotel-gallery\"]').fancybox({\n            loop: true,\n            touch: false\n        }); \n  \n\n        /**\n         * Hotel slider\n         *\n         * Slick\n         */\n\n        var sbp = $('.swiper-button-prev'),\n            sbn = $('.swiper-button-next');\n\n        $('.single-slider-wrapper .tf_slider-for').slick({\n            slide: '.slick-slide-item',\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            arrows: false,\n            fade: false,\n            dots: false,\n            centerMode: false,\n            variableWidth: false,\n            adaptiveHeight: true\n        });\n\n        sbp.on(\"click\", function () {\n            $(this).closest(\".single-slider-wrapper\").find('.tf_slider-for').slick('slickPrev');\n        });\n\n        sbn.on(\"click\", function () {\n            $(this).closest(\".single-slider-wrapper\").find('.tf_slider-for').slick('slickNext');\n        });\n\n        /**\n         * Scroll to room reserve table\n         */\n        $(\".reserve-button a\").on(\"click\", function () {\n            $('html, body').animate({\n                scrollTop: $(\"#rooms\").offset().top - 32\n            }, 1000);\n        });\n\n        /*\n        * Single Hotel Gallery\n        * @author Jahid\n        */\n        $(document).on('click', '#featured-gallery', function (e) {\n            e.preventDefault();\n            $(\"#tour-gallery\").trigger(\"click\");\n        });\n\n        /*\n        * Hotel Search submit\n        * @since 2.9.7\n        * @author Foysal\n        */\n        $(document).on('submit', '#tf_hotel_aval_check', function (e) {\n            e.preventDefault();\n            let form = $(this),\n                submitBtn = form.find('.tf-submit'),\n                formData = new FormData(form[0]);\n            \n            formData.append('action', 'tf_hotel_search');\n            formData.append('_nonce', tf_params.nonce);\n\n            if (formData.get('from') == null || formData.get('to') == null) {\n                formData.append('from', tf_params.tf_hotel_min_price);\n                formData.append('to', tf_params.tf_hotel_max_price);\n            }\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: formData,\n                contentType: false,\n                processData: false,\n                beforeSend: function () {\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\n                    submitBtn.addClass('tf-btn-loading');\n                },\n                success: function (response) {\n                    let obj = JSON.parse(response);\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\n                    submitBtn.removeClass('tf-btn-loading');\n                    if (obj.status === 'error') {\n                        notyf.error(obj.message);\n                    }\n                    if (obj.status === 'success') {\n                        //location redirect to form action url with query string\n                        location.href = form.attr('action') + '?' + obj.query_string;\n                    }\n                }\n            });\n        });\n\n        // Hotel Locations Autocomplete\n        function tourfic_autocomplete(inp, arr) {\n            /*the autocomplete function takes two arguments,\n            the text field element and an array of possible autocompleted values:*/\n\n            // Executes when some one click in the search form location\n            inp.addEventListener(\"focus\", function () {\n                // if (this.value == '' || !this.value) {\n                    // alert(\"Working....\")\n                    let a = document.createElement(\"DIV\");\n                    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n                    a.classList.add(\"autocomplete-items\")\n                    this.parentNode.appendChild(a);\n                    for (const [key, value] of Object.entries(arr)) {\n                        let b = document.createElement(\"DIV\");\n                        b.innerHTML = value;\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug\n                        });\n                        a.appendChild(b);\n                    }\n                // }\n            })\n\n            var currentFocus;\n            /*execute a function when someone writes in the text field:*/\n            inp.addEventListener(\"keyup\", function (e) {\n                var a, b, i, val = this.value;\n                /*close any already open lists of autocompleted values*/\n                closeAllLists();\n                currentFocus = -1;\n                /*create a DIV element that will contain the items (values):*/\n                a = document.createElement(\"DIV\");\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n                a.setAttribute(\"class\", \"autocomplete-items\");\n                /*append the DIV element as a child of the autocomplete container:*/\n                this.parentNode.appendChild(a);\n                var $notfound = [];\n                /*for each item in the array...*/\n                for (const [key, value] of Object.entries(arr)) {\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n                        $notfound.push('found');\n                        /*create a DIV element for each matching element:*/\n                        b = document.createElement(\"DIV\");\n                        /*make the matching letters bold:*/\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\n                        b.innerHTML += value.substr(val.length);\n                        /*insert a input field that will hold the current array item's value:*/\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\n                        /*execute a function when someone clicks on the item value (DIV element):*/\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            /*insert the value for the autocomplete text field:*/\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\n                            /*close the list of autocompleted values,\n                            (or any other open lists of autocompleted values:*/\n                            closeAllLists();\n                        });\n                        a.appendChild(b);\n\n                    } else {\n                        $notfound.push('notfound');\n                    }\n                }\n\n                if ($notfound.indexOf('found') == -1) {\n                    /*create a DIV element for each matching element:*/\n                    b = document.createElement(\"DIV\");\n                    /*make the matching letters bold:*/\n\n                    b.innerHTML += tf_params.no_found;\n                    /*insert a input field that will hold the current array item's value:*/\n                    b.innerHTML += \"<input type='hidden' value=''>\";\n                    /*execute a function when someone clicks on the item value (DIV element):*/\n                    b.addEventListener(\"click\", function (e) {\n                        /*insert the value for the autocomplete text field:*/\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\n                        /*close the list of autocompleted values,\n                        (or any other open lists of autocompleted values:*/\n                        closeAllLists();\n                    });\n                    a.appendChild(b);\n                }\n            });\n            /*execute a function presses a key on the keyboard:*/\n            inp.addEventListener(\"keydown\", function (e) {\n                var x = document.getElementById(this.id + \"autocomplete-list\");\n                if (x) x = x.getElementsByTagName(\"div\");\n                if (e.keyCode == 40) {\n                    /*If the arrow DOWN key is pressed,\n                    increase the currentFocus variable:*/\n                    currentFocus++;\n                    /*and and make the current item more visible:*/\n                    addActive(x);\n                } else if (e.keyCode == 38) { //up\n                    /*If the arrow UP key is pressed,\n                    decrease the currentFocus variable:*/\n                    currentFocus--;\n                    /*and and make the current item more visible:*/\n                    addActive(x);\n                } else if (e.keyCode == 13) {\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\n                    e.preventDefault();\n                    if (currentFocus > -1) {\n                        /*and simulate a click on the \"active\" item:*/\n                        if (x) x[currentFocus].trigger(\"click\");\n                    }\n                }\n            });\n\n            function addActive(x) {\n                /*a function to classify an item as \"active\":*/\n                if (!x) return false;\n                /*start by removing the \"active\" class on all items:*/\n                removeActive(x);\n                if (currentFocus >= x.length) currentFocus = 0;\n                if (currentFocus < 0) currentFocus = (x.length - 1);\n                /*add class \"autocomplete-active\":*/\n                x[currentFocus].classList.add(\"autocomplete-active\");\n            }\n\n            function removeActive(x) {\n                /*a function to remove the \"active\" class from all autocomplete items:*/\n                for (var i = 0; i < x.length; i++) {\n                    x[i].classList.remove(\"autocomplete-active\");\n                }\n            }\n\n            function closeAllLists(elmnt) {\n                /*close all autocomplete lists in the document,\n                except the one passed as an argument:*/\n                var x = document.getElementsByClassName(\"autocomplete-items\");\n                for (var i = 0; i < x.length; i++) {\n                    if (elmnt != x[i] && elmnt != inp) {\n                        x[i].parentNode.removeChild(x[i]);\n                    }\n                }\n            }\n\n            /*execute a function when someone clicks in the document:*/\n            document.addEventListener(\"click\", function (e) {\n                // closeAllLists(e.target);\n                if (e.target.id == \"content\" || e.target.id == \"\") {\n                    closeAllLists(e.target);\n                }\n            });\n        }\n\n            // Hotel Location\n\n            $('#tf-destination-adv').on(\"click\", function (e) {\n                $(\".tf-hotel-locations\").addClass('tf-locations-show');\n            });\n        \n            $('#tf-destination-adv').on(\"keyup\", function (e) {\n                var location = $(this).val();\n                $(\"#tf-place-destination\").val(location);\n            });\n        \n            $('#tf-location').on(\"keyup\", function (e) {\n                var tf_location = $(this).val();\n                $(\"#tf-search-hotel\").val(tf_location);\n            });\n    \n        \n            $('#ui-id-1').on(\"click\", \"li\", function (e) {\n        \n                var dest_name = $(this).attr(\"data-name\");\n                var dest_slug = $(this).attr(\"data-slug\");\n        \n                $(\".tf-preview-destination\").val(dest_name);\n                $(\"#tf-place-destination\").val(dest_slug);\n        \n                setTimeout(function () {\n                    $(\".tf-hotel-locations\").removeClass('tf-locations-show');\n                }, 100); \n            });\n            $(document).on('click', function (event) {\n                if (!$(event.target).closest(\"#tf-destination-adv, #ui-id-1\").length) {\n                    $(\".tf-hotel-locations\").removeClass('tf-locations-show');\n                }\n            });\n\n        // Hotel location autocomplete\n        var hotel_location_input = document.getElementById(\"tf-location\");\n        var hotel_locations = tf_params.locations;\n        if (hotel_location_input) {\n            tourfic_autocomplete(hotel_location_input, hotel_locations);\n        }\n\n        /*\n        * Hotel without payment booking\n        * @since 2.10.3\n        * @Author Foysal\n        */\n        const hotelPopupBooking = ($this) => {\n\n            var tf_room_booking_nonce = $(\"input[name=tf_room_booking_nonce]\").val();\n            var post_id = $('input[name=post_id]').val();\n            var roomnumber = $this.closest('.reserve').find('select[name=hotel_room_selected]').val();\n            var room_id = $this.closest('.tf-room').find('input[name=room_id]').val();\n            var unique_id = $this.closest('.tf-room').find('input[name=unique_id]').val();\n            var hotel_deposit = $this.closest('.tf-room').find('input[name=make_deposit]').is(':checked');\n            if (roomnumber == 0) {\n                $this.closest('.tf-room').find('.roomselectissue').html('<span style=\"color:red\">' + tf_pro_params.select_room + '</span>');\n            } else {\n                $this.closest('.tf-room').find('.roomselectissue').html('');\n                $(\"#hotel_room_number\").val(roomnumber);\n                $(\"#hotel_roomid\").val(room_id);\n                $(\"#hotel_room_uniqueid\").val(unique_id);\n                $this.closest('.tf-room').find(\"input[name=hotel_room_depo]\").val(hotel_deposit);\n            }\n\n            /*if ($(this).closest('.room-submit-wrap').find('input[name=room_id]').val()) {\n                var room_id = $(this).closest('.room-submit-wrap').find('input[name=room_id]').val();\n            } else {\n                var room_id = $(\"#hotel_roomid\").val();\n            }\n            if ($(this).closest('.room-submit-wrap').find('input[name=unique_id]').val()) {\n                var unique_id = $(this).closest('.room-submit-wrap').find('input[name=unique_id]').val();\n            } else {\n                var unique_id = $(\"#hotel_room_uniqueid\").val();\n            }*/\n            var location = $('input[name=place]').val();\n            var adult = $('input[name=adult]').val();\n            var child = $('input[name=child]').val();\n            var children_ages = $('input[name=children_ages]').val();\n            var check_in_date = $('input[name=check_in_date]').val();\n            var check_out_date = $('input[name=check_out_date]').val();\n            if ($this.closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val()) {\n                var room = $this.closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val();\n                var deposit = $this.closest('.tf-room').find('input[name=make_deposit]').is(':checked');\n            } else {\n                var room = $(\"#hotel_room_number\").val();\n                var deposit = $this.closest('.tf-room').find(\"input[name=hotel_room_depo]\").val();\n            }\n            var airport_service = $this.closest('.tf-room').find('[name=\"airport_service\"]').val();\n\n            let selectedExtras = [];\n            $($this.closest('.tf-room').find('input[name=\"extra_service\"]:checked')).each(function() {\n                selectedExtras.push($(this).val());\n            });\n            var data = {\n                action: 'tf_hotel_booking_popup',\n                tf_room_booking_nonce: tf_room_booking_nonce,\n                post_id: post_id,\n                room_id: room_id,\n                unique_id: unique_id,\n                location: location,\n                adult: adult,\n                child: child,\n                children_ages: children_ages,\n                check_in_date: check_in_date,\n                check_out_date: check_out_date,\n                room: room,\n                deposit: deposit,\n                airport_service: airport_service,\n                extras: selectedExtras\n            };\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                beforeSend: function (data) {\n                    $('#tour_room_details_loader').show();\n                },\n                complete: function (data) {\n                    $this.closest(\".room-submit-wrap\").siblings(\".tf-withoutpayment-booking\").find('.tf-hotel-booking-content').show()\n                    $this.unblock();\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n\n                    if (response.status == 'error') {\n\n                        $('#tour_room_details_loader').hide();\n                        if (response.errors) {\n                            response.errors.forEach(function (text) {\n                                notyf.error(text);\n                            });\n                        }\n\n                        return false;\n                    } else {\n                        $('#tour_room_details_loader').hide();\n                        if ($('.tf-traveller-info-box').length > 0) {\n                            if ($(\".tf-traveller-info-box\").html().trim() == \"\") {\n                                $('.tf-traveller-info-box').html(response.guest_info);\n                            } else {\n                                $('.tf-traveller-info-box').html(response.guest_info);\n                            }\n                        }\n                        if ($('.tf-booking-traveller-info').length > 0) {\n                            $('.tf-booking-traveller-info').html(response.hotel_booking_summery);\n                        }\n                        if( ! $this.closest('form.tf-room').find('.tf-withoutpayment-booking').hasClass('show') ){\n                            $this.closest('form.tf-room').find('.tf-withoutpayment-booking').addClass('show');\n                        }\n                        $this.closest(\".room-submit-wrap\").siblings(\".tf-withoutpayment-booking\").find('.tf-control-pagination:first-child').show()\n                    }\n                },\n                error: function (data) {\n                    console.log(data);\n                },\n\n            });\n        }\n        $(document).on('click', '.tf-hotel-booking-popup-btn', function (e) {\n            e.preventDefault();\n            var $this = $(this);\n\n            hotelPopupBooking($this);\n        });\n\n        $(document).on('submit', 'form.tf-room', function (e) {\n            e.preventDefault();\n\n            var $this = $(this);\n            var formData = new FormData(this);\n\n            // if ($(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val()) {\n            //     var room = $(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val();\n            //     var deposit = $(this).closest('.room-submit-wrap').find('input[name=make_deposit]').is(':checked');\n            // } else {\n            //     var room = $(\"#hotel_room_number\").val();\n            // }\n            var deposit = $this.find(\"input[name=hotel_room_depo]\").val();\n            var airport_service = $this.find('[name=\"airport_service\"]').val();\n\n            formData.append('action', 'tf_hotel_booking');\n            formData.append('_ajax_nonce', tf_params.nonce);\n            formData.append('deposit', deposit);\n            formData.append('airport_service', airport_service);\n\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: formData,\n                processData: false,\n                contentType: false,\n                beforeSend: function (data) {\n                    $this.block({\n                        message: null,\n                        overlayCSS: {\n                            background: \"#fff\",\n                            opacity: .5\n                        }\n                    });\n                    $('#tour_room_details_loader').show();\n                    $('.tf-notice-wrapper').html(\"\").hide();\n                },\n                error: function (data) {\n                    console.log(data);\n                },\n                complete: function (data) {\n                    $this.unblock()\n                    $('#tour_room_details_loader').hide();\n                    $('.tf-withoutpayment-booking').removeClass('show');\n                    $this.find('.tf-withoutpayment-booking-confirm').addClass('show');\n                },\n            })\n        });\n\n\n        $(document).on(\"change\", \"[name='airport_service'], [name='extra_service']\", function (e) {\n            var $this = $(this);\n\n            hotelPopupBooking($this);\n        });\n\n        // Design 1 - hotel Facilities\n        $('.tf-hotel-facilities-title-area').on(\"click\", function () {\n            var $this = $(this);\n            if (!$this.hasClass(\"active\")) {\n                $(\".tf-hotel-facilities-content-area\").slideUp(400);\n                $(\".tf-hotel-facilities-title-area\").removeClass(\"active\");\n                $('.hotel-facilities-icon-down').removeClass(\"active\");\n            }\n            $this.toggleClass(\"active\");\n            $(this).closest('.tf-hotel-facilities-content-area').toggleClass('active');\n            $(this).find('.hotel-facilities-icon-down').toggle();\n            $(this).find('.hotel-facilities-icon-up').toggleClass('active');\n            $this.next().slideToggle();\n        });\n    });\n\n})(jQuery, window);\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/hotel.js?");

/***/ }),

/***/ "./sass/app/js/free/tour.js":
/*!**********************************!*\
  !*** ./sass/app/js/free/tour.js ***!
  \**********************************/
/***/ (() => {

eval("(function ($, win) {\n    $(document).ready(function () {\n\n\n        function tf_flatpickr_locale() {\n            let locale = tf_params.tour_form_data.flatpickr_locale;\n            let allowed_locales = ['ar', 'bn_BD', 'de_DE', 'es_ES', 'fr_FR', 'hi_IN', 'it_IT', 'nl_NL', 'ru_RU', 'zh_CN' ];\n\n            if( jQuery.inArray(locale, allowed_locales) !== -1 ) {\n                \n                switch (locale) {\n                    case \"bn_BD\":\n                        locale = 'bn';\n                        break;\n                    case \"de_DE\":\n                        locale = 'de';\n                        break;\n                    case \"es_ES\":\n                        locale = 'es';\n                        break;\n                    case \"fr_FR\":\n                        locale = 'fr';\n                        break;\n                    case \"hi_IN\":\n                        locale = 'hi';\n                        break;\n                    case \"it_IT\":\n                        locale = 'it';\n                        break;\n                    case \"nl_NL\":\n                        locale = 'nl';\n                        break;\n                    case \"ru_RU\":\n                        locale = 'ru';\n                        break;\n                    case \"zh_CN\":\n                        locale = 'zh';\n                        break;\n                }\n            } else {\n                locale = 'default';\n            }\n\n            return locale;\n        }\n\n        // let locale_zone = tf_flatpickr_locale();\n\n        window.flatpickr.l10ns[tf_flatpickr_locale()].firstDayOfWeek = tf_params.tour_form_data.first_day_of_week;\n\n        // Create an instance of Notyf\n        const notyf = new Notyf({\n            ripple: true,\n            duration: 3000,\n            dismissable: true,\n            position: {\n                x: 'right',\n                y: 'bottom',\n            },\n        });\n\n        /**\n         * Ajax tour booking\n         *\n         * tf_tours_booking\n         */\n        $(document).on('submit', 'form.tf_tours_booking', function (e) {\n            e.preventDefault();\n\n            var $this = $(this);\n\n            var formData = new FormData(this);\n            formData.append('action', 'tf_tours_booking');\n            formData.append('_ajax_nonce', tf_params.nonce);\n\n\n            // Tour Extra\n            var tour_extra_total = [];\n            var tour_extra_quantity = [];\n\n            /*\n            jQuery('.tour-extra-single input:checkbox:checked').each(function () {\n                tour_extra_total.push(jQuery(this).val());\n\n                    if ($this.find('.tf_quantity-acrselection').hasClass('quantity-active')) {\n                        let qty = $this.find('input[name=\"extra-quantity\"]').val();\n\n                        tour_extra_quantity.push(qty)\n                    } else {\n                        tour_extra_quantity.push(1)\n                    }\n                }\n            });\n            */\n\n            jQuery('.tour-extra-single').each(function(e) {\n                let $this = jQuery(this);\n\n                if($this.find('input[name=\"tf-tour-extra\"]').is(':checked')){\n\n                   let tour_extras = $this.find('input[name=\"tf-tour-extra\"]').val();\n                   tour_extra_total.push(tour_extras);\n\n                   if($this.find('.tf_quantity-acrselection').hasClass('quantity-active')){\n                       let qty = $this.find('input[name=\"extra-quantity\"]').val();\n\n                       tour_extra_quantity.push(qty)\n                   }else{\n                    tour_extra_quantity.push(1)\n                   }\n               }\n           });\n\n            formData.append('tour_extra', tour_extra_total);\n            formData.append('tour_extra_quantity', tour_extra_quantity);\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: formData,\n                processData: false,\n                contentType: false,\n                beforeSend: function (data) {\n                    $this.block({\n                        message: null,\n                        overlayCSS: {\n                            background: \"#fff\",\n                            opacity: .5\n                        }\n                    });\n                    $('#tour_room_details_loader').show();\n                    $('.tf-notice-wrapper').html(\"\").hide();\n                },\n                complete: function (data) {\n                    $this.unblock();\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n\n                    if (response.without_payment == 'false') {\n                        if (response.status == 'error') {\n                            $.fancybox.close();\n                            if (response.errors) {\n                                response.errors.forEach(function (text) {\n                                    notyf.error(text);\n                                });\n                            }\n\n                            return false;\n                        } else {\n\n                            if (response.redirect_to) {\n                                window.location.replace(response.redirect_to);\n                            } else {\n                                jQuery(document.body).trigger('added_to_cart');\n                                $('#tour_room_details_loader').hide();\n                                $('.tf-withoutpayment-booking').removeClass('show');\n                            }\n\n                        }\n                    } else {\n                        $('#tour_room_details_loader').hide();\n                        $('.tf-withoutpayment-booking').removeClass('show');\n                        $('.tf-withoutpayment-booking-confirm').addClass('show');\n                    }\n                },\n                error: function (data) {\n                    console.log(data);\n                },\n\n            });\n        });\n\n        $('input[name=\"tf-tour-extra\"]').on(\"change\", function (e) {\n\n            let parent = $(this).parent().parent().parent()\n\n            if ($(this).is(':checked')) {\n\n                parent.find(\".tf_quantity-acrselection\").addClass('quantity-active')\n\n            } else {\n\n                parent.find(\".tf_quantity-acrselection\").removeClass('quantity-active')\n\n            }\n        })\n\n        $(\".tf-itinerary-single-meta li .fa-info-circle, .ininerary-other-info li .fa-info-circle\").on(\"click\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var id = $(this).parent().attr(\"id\");\n            $(\".tour-itinerary-sleep\").each(function () {\n                var elementId = $(this).attr(\"id\"); \n                if (id === elementId) {\n                    $(this).fadeIn();\n                } else {\n                    $(this).fadeOut();\n                }\n            });\n        });\n        \n    \n        // Hide when clicking outside\n        $(document).on(\"click\", function (e) {\n            if (!$(e.target).closest(\".tour-itinerary-sleep, .ininerary-other-info li .fa-info-circle, .tf-itinerary-single-meta li .fa-info-circle\").length) {\n                $(\".tour-itinerary-sleep\").fadeOut();\n            }\n        });\n\n\n        /**\n         * Single Tour Video\n         *\n         * Fancybox\n         */\n\n        $('[data-fancybox=\"tour-video\"]').fancybox({\n            loop: true,\n            buttons: [\n                \"zoom\",\n                \"slideShow\",\n                \"fullScreen\",\n                \"close\"\n            ],\n            hash: false,\n        });\n\n        /**\n         * Single Tour Gallery\n         *\n         * Fancybox\n         */\n        $('[data-fancybox=\"tour-gallery\"]').fancybox({\n            loop: true,\n            buttons: [\n                \"zoom\",\n                \"slideShow\",\n                \"fullScreen\",\n                \"close\"\n            ],\n            hash: false,\n        });\n\n        /**\n         * Itinerary gallery init\n         */\n        $('.tf-itinerary-gallery').fancybox({\n            buttons: [\n                \"zoom\",\n                \"slideShow\",\n                \"fullScreen\",\n                \"close\"\n            ]\n        });\n\n        /**\n         * Single Tour price change\n         *\n         * adult, child, infant\n         */\n        $(document).on('click', '.tf-single-tour-pricing .tf-price-tab li', function () {\n            var t = $(this).attr('id');\n\n            $(this).addClass('active').siblings().removeClass('active');\n            $('.tf-price').addClass('tf-d-n');\n            $('.' + t + '-price').removeClass('tf-d-n');\n        });\n        //first li click\n        $('.tf-single-tour-pricing .tf-price-tab li:first-child').trigger('click');\n\n        /**\n         * Single Tour price change Template 1\n         *\n         * adult, child, infant\n         */\n        $(document).on('click', '.tf-trip-person-info ul li', function () {\n            var t = $(this).attr('data');\n\n            $(this).addClass('active').siblings().removeClass('active');\n            $('.tf-trip-pricing').removeClass('active');\n            $('.tf-' + t).addClass('active');\n        });\n\n        /*\n        * Tour Search submit\n        * @since 2.9.7\n        * @author Foysal\n        */\n        $(document).on('submit', '#tf_tour_aval_check', function (e) {\n            e.preventDefault();\n            let form = $(this),\n                submitBtn = form.find('.tf-submit'),\n                formData = new FormData(form[0]);\n\n            formData.append('action', 'tf_tour_search');\n            formData.append('_nonce', tf_params.nonce);\n\n            if (formData.get('from') == null || formData.get('to') == null) {\n                formData.append('from', tf_params.tf_tour_min_price);\n                formData.append('to', tf_params.tf_tour_max_price);\n            }\n\n            $.ajax({\n                url: tf_params.ajax_url,\n                type: 'POST',\n                data: formData,\n                contentType: false,\n                processData: false,\n                beforeSend: function () {\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\n                    submitBtn.addClass('tf-btn-loading');\n                },\n                success: function (response) {\n                    let obj = JSON.parse(response);\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\n                    submitBtn.removeClass('tf-btn-loading');\n                    if (obj.status === 'error') {\n                        notyf.error(obj.message);\n                    }\n                    if (obj.status === 'success') {\n                        //location redirect to form action url with query string\n                        location.href = form.attr('action') + '?' + obj.query_string;\n                    }\n                }\n            });\n        });\n\n        // Tour destination Autocomplete\n\n        function tourfic_autocomplete(inp, arr) {\n            /*the autocomplete function takes two arguments,\n            the text field element and an array of possible autocompleted values:*/\n\n            // Executes when some one click in the search form location\n            inp.addEventListener(\"focus\", function () {\n                // if (this.value == '' || !this.value) {\n                    // alert(\"Working....\")\n                    let a = document.createElement(\"DIV\");\n                    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n                    a.classList.add(\"autocomplete-items\")\n                    this.parentNode.appendChild(a);\n                    for (const [key, value] of Object.entries(arr)) {\n                        let b = document.createElement(\"DIV\");\n                        b.innerHTML = value;\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug\n                        });\n                        a.appendChild(b);\n                    }\n                // }\n            })\n\n            var currentFocus;\n            /*execute a function when someone writes in the text field:*/\n            inp.addEventListener(\"keyup\", function (e) {\n                var a, b, i, val = this.value;\n                /*close any already open lists of autocompleted values*/\n                closeAllLists();\n                currentFocus = -1;\n                /*create a DIV element that will contain the items (values):*/\n                a = document.createElement(\"DIV\");\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n                a.setAttribute(\"class\", \"autocomplete-items\");\n                /*append the DIV element as a child of the autocomplete container:*/\n                this.parentNode.appendChild(a);\n                var $notfound = [];\n                /*for each item in the array...*/\n                for (const [key, value] of Object.entries(arr)) {\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n                        $notfound.push('found');\n                        /*create a DIV element for each matching element:*/\n                        b = document.createElement(\"DIV\");\n                        /*make the matching letters bold:*/\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\n                        b.innerHTML += value.substr(val.length);\n                        /*insert a input field that will hold the current array item's value:*/\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\n                        /*execute a function when someone clicks on the item value (DIV element):*/\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            /*insert the value for the autocomplete text field:*/\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\n                            /*close the list of autocompleted values,\n                            (or any other open lists of autocompleted values:*/\n                            closeAllLists();\n                        });\n                        a.appendChild(b);\n\n                    } else {\n                        $notfound.push('notfound');\n                    }\n                }\n\n                if ($notfound.indexOf('found') == -1) {\n                    /*create a DIV element for each matching element:*/\n                    b = document.createElement(\"DIV\");\n                    /*make the matching letters bold:*/\n\n                    b.innerHTML += tf_params.no_found;\n                    /*insert a input field that will hold the current array item's value:*/\n                    b.innerHTML += \"<input type='hidden' value=''>\";\n                    /*execute a function when someone clicks on the item value (DIV element):*/\n                    b.addEventListener(\"click\", function (e) {\n                        /*insert the value for the autocomplete text field:*/\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\n                        /*close the list of autocompleted values,\n                        (or any other open lists of autocompleted values:*/\n                        closeAllLists();\n                    });\n                    a.appendChild(b);\n                }\n            });\n            /*execute a function presses a key on the keyboard:*/\n            inp.addEventListener(\"keydown\", function (e) {\n                var x = document.getElementById(this.id + \"autocomplete-list\");\n                if (x) x = x.getElementsByTagName(\"div\");\n                if (e.keyCode == 40) {\n                    /*If the arrow DOWN key is pressed,\n                    increase the currentFocus variable:*/\n                    currentFocus++;\n                    /*and and make the current item more visible:*/\n                    addActive(x);\n                } else if (e.keyCode == 38) { //up\n                    /*If the arrow UP key is pressed,\n                    decrease the currentFocus variable:*/\n                    currentFocus--;\n                    /*and and make the current item more visible:*/\n                    addActive(x);\n                } else if (e.keyCode == 13) {\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\n                    e.preventDefault();\n                    if (currentFocus > -1) {\n                        /*and simulate a click on the \"active\" item:*/\n                        if (x) x[currentFocus].trigger(\"click\");;\n                    }\n                }\n            });\n\n            function addActive(x) {\n                /*a function to classify an item as \"active\":*/\n                if (!x) return false;\n                /*start by removing the \"active\" class on all items:*/\n                removeActive(x);\n                if (currentFocus >= x.length) currentFocus = 0;\n                if (currentFocus < 0) currentFocus = (x.length - 1);\n                /*add class \"autocomplete-active\":*/\n                x[currentFocus].classList.add(\"autocomplete-active\");\n            }\n\n            function removeActive(x) {\n                /*a function to remove the \"active\" class from all autocomplete items:*/\n                for (var i = 0; i < x.length; i++) {\n                    x[i].classList.remove(\"autocomplete-active\");\n                }\n            }\n\n            function closeAllLists(elmnt) {\n                /*close all autocomplete lists in the document,\n                except the one passed as an argument:*/\n                var x = document.getElementsByClassName(\"autocomplete-items\");\n                for (var i = 0; i < x.length; i++) {\n                    if (elmnt != x[i] && elmnt != inp) {\n                        x[i].parentNode.removeChild(x[i]);\n                    }\n                }\n            }\n\n            /*execute a function when someone clicks in the document:*/\n            document.addEventListener(\"click\", function (e) {\n                // closeAllLists(e.target);\n                if (e.target.id == \"content\" || e.target.id == \"\") {\n                    closeAllLists(e.target);\n                }\n            });\n        }\n\n        /*\n        * New Template Itinerary Accordion\n        * @author: Jahid\n        */\n        $('.tf-itinerary-title').on(\"click\", function () {\n            var $this = $(this);\n            if (!$this.hasClass(\"active\")) {\n                $(\".tf-itinerary-content-box\").slideUp(400);\n                $(\".tf-itinerary-title\").removeClass(\"active\");\n                $('.tf-single-itinerary-item').removeClass('active');\n            }\n            $this.toggleClass(\"active\");\n            $(this).closest('.tf-single-itinerary-item').toggleClass('active');\n            $this.next().slideToggle();\n        });\n\n        /*\n        * New Template Tour Extra\n        * @author: Jahid\n        */\n        $('.tf-form-title.tf-tour-extra').on(\"click\", function () {\n            var $this = $(this);\n            if (!$this.hasClass(\"active\")) {\n                $(\".tf-tour-extra-box\").slideUp(400);\n                $(\".tf-form-title.tf-tour-extra\").removeClass(\"active\");\n            }\n            $this.toggleClass(\"active\");\n            $this.next().slideToggle();\n        });\n\n        // Itinerary Accordion\n        $('.tf-accordion-head').on(\"click\", function () {\n            $(this).toggleClass('active');\n            $(this).parent().find('.arrow').toggleClass('arrow-animate');\n            $(this).parent().find('.tf-accordion-content').slideToggle();\n            //$(this).parents('#tf-accordion-wrapper').siblings().find('.tf-accordion-content').slideUp();\n            $(this).siblings().find('.ininerary-other-gallery').slick({\n                slidesToShow: 6,\n                slidesToScroll: 1,\n                arrows: true,\n                fade: false,\n                adaptiveHeight: true,\n                infinite: true,\n                useTransform: true,\n                speed: 400,\n                cssEase: 'cubic-bezier(0.77, 0, 0.18, 1)',\n                responsive: [{\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 4,\n                        slidesToScroll: 1,\n                    }\n                }, {\n                    breakpoint: 640,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1,\n                    }\n                }, {\n                    breakpoint: 420,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1,\n                    }\n                }]\n            });\n        });\n\n        // Tour Destination\n\n        $('#tf-tour-location-adv').on(\"click\", function (e) {\n            var location = $(this).val();\n            $(\".tf-tour-results\").addClass('tf-destination-show');\n        });\n        $('#tf-tour-location-adv').on(\"keyup\", function (e) {\n            var location = $(this).val();\n            $(\"#tf-tour-place\").val(location);\n        });\n        $('#tf-destination').on(\"keyup\", function (e) {\n            var tf_location = $(this).val();\n            $(\"#tf-search-tour\").val(tf_location);\n        });\n    \n        $('#ui-id-2 li').on(\"click\", function (e) {\n            var dest_name = $(this).attr(\"data-name\");\n            var dest_slug = $(this).attr(\"data-slug\");\n            $(\".tf-tour-preview-place\").val(dest_name);\n            $(\"#tf-tour-place\").val(dest_slug);\n            setTimeout(function () {\n                $(\".tf-tour-results\").removeClass('tf-destination-show');\n            }, 100);\n        });\n\n        $(document).on('click', function (event) {\n            if (!$(event.target).closest(\"#tf-tour-location-adv\").length) {\n                $(\".tf-tour-results\").removeClass('tf-destination-show');\n            }\n        });\n\n        // Tour destination autocomplete\n        var tour_destination_input = document.getElementById(\"tf-destination\");\n        var tour_destinations = tf_params.tour_destinations;\n        if (tour_destination_input) {\n            tourfic_autocomplete(tour_destination_input, tour_destinations);\n        }\n\n        /**\n         * Single tour sticky booking bar position fixed\n         */\n        $(window).on(\"scroll\", function () {\n            var sticky = $('.tf-tour-booking-wrap'),\n                scroll = $(window).scrollTop(),\n                footer = $('footer');\n        \n            if (footer.length === 0) {\n                return; \n            }\n        \n            var footerOffset = footer.offset().top,\n                windowHeight = $(window).height();\n        \n            if (scroll >= 800) {\n                if (scroll + windowHeight >= footerOffset) {\n                    sticky.removeClass('tf-tours-fixed'); \n                } else {\n                    sticky.addClass('tf-tours-fixed');\n                }\n            } else {\n                sticky.removeClass('tf-tours-fixed');\n            }\n        });\n\n        /**\n         * Single tour sticky booking bar - template 1\n         * @author Foysal\n         */\n        if ($('.tf-tour-booking-box').length > 0) {\n            $(window).on(\"scroll\", function () {\n                let bookingBox = $('.tf-tour-booking-box');\n                let bottomBar = $('.tf-bottom-booking-bar');\n                let footer = $('.footer');\n                if (footer.length === 0) {\n                    return; \n                }\n                let boxOffset = bookingBox.offset().top + bookingBox.outerHeight();\n                let footerOffset = footer.offset().top;\n                var scrollTop = $(window).scrollTop();\n                let windowHeight = $(window).height();\n\n                if (scrollTop > boxOffset && scrollTop + windowHeight < footerOffset) {\n                    bottomBar.addClass('active');\n                } else {\n                    bottomBar.removeClass('active');\n                }\n            });\n        }\n\n        $('.tf-booking-mobile-btn').on('click', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).closest('.tf-bottom-booking-bar').toggleClass('mobile-active');\n        });\n\n        //Template 3 Mobile Booking Btn\n        $('.tf-single-template__two .tf-mobile-booking-btn').on('click', function () {\n            $('.tf-bottom-booking-bar').addClass('tf-mobile-booking-form');\n            $('.tf-single-template__two .tf-mobile-booking-btn').slideUp(300);\n        });\n\n        $(document).on('click touchstart', function (e) {\n            if ($(window).width() <= 768) {\n                if (!$(e.target).closest('.tf-bottom-booking-bar, .tf-mobile-booking-btn, .flatpickr-calendar').length) {\n                    $('.tf-bottom-booking-bar').removeClass('tf-mobile-booking-form');\n                    $('.tf-single-template__two .tf-mobile-booking-btn').slideDown(300);\n                }\n            }\n        });\n\n        /**\n         * Single tour booking form\n         */\n        const allowed_times = tf_params.tour_form_data.allowed_times ? JSON.parse(tf_params.tour_form_data.allowed_times) : [];\n        const custom_avail = tf_params.tour_form_data.custom_avail;\n        if (custom_avail == false && Object.keys(allowed_times).length > 0) {\n            populateTimeSelect(allowed_times); // Pass the entire object, not just the values\n        }\n\n        // First Day of Week\n        //const first_day_of_week = tf_params.tour_form_data.flatpickr_locale;\n\n        function populateTimeSelect(times) {\n            let timeSelect = $('select[name=\"check-in-time\"]');\n            let timeSelectDiv = $(\".check-in-time-div\");\n            timeSelect.empty();\n\n            if (Object.keys(times).length > 0) {\n                timeSelect.append(`<option value=\"\" selected hidden>${tf_params.tour_form_data.select_time_text}</option>`);\n                // Use the keys and values from the object to populate the options\n                $.each(times, function (key, value) {\n                    timeSelect.append(`<option value=\"${key}\">${value}</option>`);\n                });\n                timeSelectDiv.css('display', 'flex');\n            } else timeSelectDiv.hide();\n        }\n\n        var tour_date_options = {\n            enableTime: false,\n            dateFormat: \"Y/m/d\",\n            altInput: true,\n            altFormat: tf_params.tour_form_data.date_format,\n            locale: tf_flatpickr_locale(),\n            \n            onReady: function (selectedDates, dateStr, instance) {\n                instance.element.value = dateStr.replace(/[a-z]+/g, '-');\n                instance.altInput.value = instance.altInput.value.replace(/[a-z]+/g, '-');\n            },\n\n            onChange: function (selectedDates, dateStr, instance) {\n\n                instance.altInput.value = instance.altInput.value.replace(/[a-z]+/g, '-');\n                $(\".tours-check-in-out\").val(instance.altInput.value);\n                $('.tours-check-in-out[type=\"hidden\"]').val(dateStr.replace(/[a-z]+/g, '-'));\n                if (custom_avail == true) {\n                    let times = Object.values(allowed_times).filter((v) => {\n                        let date_str = Date.parse(dateStr);\n                        let start_date = Date.parse(v.date.from);\n                        let end_date = Date.parse(v.date.to);\n                        return start_date <= date_str && end_date >= date_str;\n                    });\n                    times = times.length > 0 && times[0].times ? times[0].times : null;\n                    populateTimeSelect(times);\n                }\n                \n                if(tf_params.tour_form_data.tf_tour_selected_template === 'design-2') {\n                    dateSetToFields(selectedDates, instance);\n                }\n            },\n\n        };\n\n        if(tf_params.tour_form_data.tour_type == 'fixed'){\n            tour_date_options.defaultDate= tf_params.tour_form_data.defaultDate;\n            tour_date_options.enable= tf_params.tour_form_data.enable;\n        }\n\n        if(tf_params.tour_form_data.tour_type == 'continuous'){\n            tour_date_options.minDate = \"today\";\n            tour_date_options.disableMobile = \"true\";\n\n            if (custom_avail == true) {\n                tour_date_options.enable = Object.values(tf_params.tour_form_data.cont_custom_date).map((v) => {\n\n                    let today = new Date();\n                    let from_date = '';\n                    let formattedDate = today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate();\n\n                    if( tf_params.tour_form_data.disable_same_day ) {\n                        if (v.date.from == formattedDate) {\n                            let date = new Date( v.date.from );\n                            let nextDay = new Date(date.setDate(date.getDate() + 1));\n                            from_date = nextDay.getFullYear() + '/' + (nextDay.getMonth() + 1) + '/' + nextDay.getDate();\n                        }  else {\n                            from_date = v.date.from;\n                        }\n                    } else {\n                        from_date = v.date.from;\n                    }\n\n                    return {\n                        from: from_date,\n                        to: v.date.to\n                    }\n                });\n            }\n\n            if (custom_avail == false) {\n                if (tf_params.tour_form_data.disabled_day || tf_params.tour_form_data.disable_range || tf_params.tour_form_data.disable_specific || tf_params.tour_form_data.disable_same_day) {\n                    tour_date_options.disable = [];\n                    if (tf_params.tour_form_data.disabled_day) {\n                        var disabledDays = tf_params.tour_form_data.disabled_day.map(Number);\n                        tour_date_options.disable.push(\n                            function (date) {\n                            return (date.getDay() === 8 || disabledDays.includes(date.getDay()));\n                        }\n                        );\n                    }\n                    if (tf_params.tour_form_data.disable_range) {\n                        Object.values(tf_params.tour_form_data.disable_range).forEach((d_item) => {\n                            tour_date_options.disable.push({\n                                from: d_item.date.from,\n                                to: d_item.date.to\n                            });\n                        });\n                    }\n                    if (tf_params.tour_form_data.disable_same_day) {\n                        tour_date_options.disable.push(\"today\");\n                    }\n                    \n                    if (tf_params.tour_form_data.disable_specific) {\n                        var disable_specific_string = tf_params.tour_form_data.disable_specific.split(\", \");\n                        disable_specific_string.forEach(function(date) {\n                            tour_date_options.disable.push(date);\n                        });\n                    }\n                }\n            }\n        }\n        \n        // remove empty attributes from tour_date_options object\n        // tour_date_options = Object.fromEntries(Object.entries(tour_date_options).filter(([_, v]) => v != '' ));\n\n        if(tf_params.tour_form_data.tf_tour_selected_template === 'design-1') {\n            $(\".tours-check-in-out\").flatpickr(tour_date_options);\n\n            $(\"select[name='check-in-time']\").on(\"change\", function () {\n                var selectedTime = $(this).val();\n                $(\"select[name='check-in-time']\").not(this).val(selectedTime);\n            });\n\n            $(\".acr-select input[type='number']\").on(\"change\", function () {\n                var inputName = $(this).attr(\"name\");\n                var selectedValue = $(this).val();\n\n                // Update all inputs with the same name\n                $(\".acr-select input[type='number'][name='\" + inputName + \"']\").val(selectedValue)\n            });\n        }\n\n        if(tf_params.tour_form_data.tf_tour_selected_template === 'design-2') {\n            $(\".tours-check-in-out\").flatpickr(tour_date_options);\n            if(tour_date_options.defaultDate){\n                const monthNames = [\n                    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n                ];\n                const startDate = new Date(tour_date_options.defaultDate);\n                $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-date\").html(startDate.getDate());\n                $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-month span\").html(monthNames[startDate.getMonth()]);\n            }\n            function dateSetToFields(selectedDates, instance) {\n                if (selectedDates.length === 1) {\n                    const monthNames = [\n                        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n                    ];\n                    if(selectedDates[0]){\n                        const startDate = selectedDates[0];\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-date\").html(startDate.getDate());\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-month span\").html(monthNames[startDate.getMonth()]);\n                    }\n                }\n                if (selectedDates.length === 2) {\n                    const monthNames = [\n                        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n                    ];\n                    if(selectedDates[0]){\n                        const startDate = selectedDates[0];\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout  span.tf-booking-date\").html(startDate.getDate());\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-month span\").html(monthNames[startDate.getMonth()]);\n                    }\n                    if(selectedDates[1]){\n                        const endDate = selectedDates[1];\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout  span.tf-booking-date\").html(endDate.getDate());\n                        $(\".tf-single-template__two .tf-bottom-booking-bar .tf-booking-form-checkinout span.tf-booking-month span\").html(monthNames[endDate.getMonth()]);\n                    }\n                }\n            }\n\n            $(\"select[name='check-in-time']\").on(\"change\", function () {\n                var selectedTime = $(this).val();\n                $(\"select[name='check-in-time']\").not(this).val(selectedTime);\n            });\n\n            $(\".acr-select input[type='tel']\").on(\"change\", function () {\n                var inputName = $(this).attr(\"name\");\n                var selectedValue = $(this).val();\n\n                // Update all inputs with the same name\n                $(\".acr-select input[type='tel'][name='\" + inputName + \"']\").val(selectedValue)\n            });\n        }\n\n        if(tf_params.tour_form_data.tf_tour_selected_template === 'default') {\n            $(\"#check-in-out-date\").flatpickr(tour_date_options);\n        }\n\n        $(document).on('click', \"#tour-deposit > div > div.tf_button_group > button\", function (e) {\n            e.preventDefault();\n            var form = $(document).find('form.tf_tours_booking');\n            var has_deposit = $(this).data('deposit');\n            if (has_deposit === true) {\n                form.find('input[name=\"deposit\"]').val(1);\n            } else {\n                form.find('input[name=\"deposit\"]').val(0);\n            }\n            form.submit();\n        });\n\n    });\n\n})(jQuery, window);\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/tour.js?");

/***/ }),

/***/ "./sass/app/js/free/tourfic.js":
/*!*************************************!*\
  !*** ./sass/app/js/free/tourfic.js ***!
  \*************************************/
/***/ (() => {

eval("(function ($, win) {\n    $(document).ready(function () {\n\n        // Create an instance of Notyf\n        const notyf = new Notyf({\n            ripple: true,\n            duration: 3000,\n            dismissable: true,\n            position: {\n                x: 'right',\n                y: 'bottom',\n            },\n        });\n        \n        // Add the classes to the body element\n        if (tf_params.body_classes && tf_params.body_classes.length > 0) {\n            $.each(tf_params.body_classes, function(index, className) {\n                $('body').addClass(className);\n            });\n        }\n        \n\n        /*\n         * AJAX load for range filter to prevent performance issue.\n         * @author Sunvi\n        */\n       \n        if( $(\".widget_tf_price_filters\").length > 0 ){\n\n            const post_type = $(document).find('input[name=\"post_id\"]').attr(\"data-post-type\");\n            if( post_type == 'tf_hotel' || post_type == 'tf_tours' || post_type == 'tf_apartment' || post_type == 'tf_carrental' ){\n                $.ajax({\n                    type: 'POST',\n                    url: tf_params.ajax_url,\n                    data: {\n                        action: 'tf_get_min_max_price',\n                        _nonce: tf_params.nonce,\n                        post_type: post_type\n                    },\n                    success: function (response) {\n                        if (response.success) {\n                            if( post_type == 'tf_tours' ) {\n                                    let tf_tour_range_options = {\n                                        range: {\n                                            min: parseInt( response.data?.tf_tours?.min ),\n                                            max: parseInt( response.data?.tf_tours?.max ),\n                                            step: 1\n                                        },\n                                        initialSelectedValues: {\n                                            from: parseInt( response.data?.tf_tours?.min ),\n                                            to: parseInt( response.data?.tf_tours?.max )\n                                        },\n                                        grid: false,\n                                        theme: \"dark\",\n                                    };\n                                    if ( parseInt( response.data?.tf_tours?.min ) != 0 && parseInt( response.data?.tf_tours?.max ) != 0) {\n                                        $('.tf-tour-filter-range').alRangeSlider(tf_tour_range_options);\n                                    }\n                            \n                                    // Tours Min and Max Range in Search Result\n                                    var tf_search_page_params = new window.URLSearchParams(window.location.search);\n                                    let tf_tours_search_range = {\n                                        range: {\n                                            min: parseInt( response.data?.tf_tours?.min  ),\n                                            max: parseInt( response.data?.tf_tours?.max ),\n                                            step: 1\n                                        },\n                                        initialSelectedValues: {\n                                            from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_tours?.min ),\n                                            to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_tours?.max )\n                                        },\n                                        grid: false,\n                                        theme: \"dark\",\n                                        onFinish: function () {\n                                            makeFilter();\n                                        }\n                                    };\n                                    if ( parseInt( response.data?.tf_tours?.min ) != 0 && parseInt( response.data?.tf_tours?.max ) != 0) {\n                                        $('.tf-tour-result-price-range').alRangeSlider(tf_tours_search_range);\n                                    }\n                            } else if( post_type == 'tf_hotel' ) { \n                                        let tf_hotel_range_options = {\n                                            range: {\n                                                min: parseInt( response.data?.tf_hotel?.min ),\n                                                max: parseInt( response.data?.tf_hotel?.max ),\n                                                step: 1\n                                            },\n                                            initialSelectedValues: {\n                                                from: parseInt( response.data?.tf_hotel?.min ),\n                                                to: parseInt( response.data?.tf_hotel?.max )\n                                            },\n                                            grid: false,\n                                            theme: \"dark\",\n                                        };\n                                        if ( response.data?.tf_hotel?.min != 0 && response.data?.tf_hotel?.max != 0) {\n                                            $('.tf-hotel-filter-range').alRangeSlider(tf_hotel_range_options);\n                                        }\n                                \n                                        // Hotel Min and Max Range in Search Result\n                                        var tf_search_page_params = new window.URLSearchParams(window.location.search);\n                                        let tf_hotel_search_range = {\n                                            range: {\n                                                min: parseInt( response.data?.tf_hotel?.min ),\n                                                max: parseInt( response.data?.tf_hotel?.max ),\n                                                step: 1\n                                            },\n                                            initialSelectedValues: {\n                                                from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_hotel?.min ),\n                                                to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_hotel?.max )\n                                            },\n                                            grid: false,\n                                            theme: \"dark\",\n                                            onFinish: function () {\n                                                makeFilter();\n                                            }\n                                        };\n                                        if ( response.data?.tf_hotel?.min != 0 && response.data?.tf_hotel?.max != 0) {\n                                            $('.tf-hotel-result-price-range').alRangeSlider(tf_hotel_search_range);\n                                        }\n                            } else if( post_type == 'tf_apartment' ) {\n\n                                let tf_apartment_range_options = {\n                                    range: {\n                                        min: parseInt( response.data?.tf_apartment?.min ),\n                                        max: parseInt( response.data?.tf_apartment?.max ),\n                                        step: 1\n                                    },\n                                    initialSelectedValues: {\n                                        from: parseInt( response.data?.tf_apartment?.min ),\n                                        to: parseInt( response.data?.tf_apartment?.max )\n                                    },\n                                    grid: false,\n                                    theme: \"dark\",\n                                };\n\n                                if ( response.data?.tf_apartment?.min != 0 && response.data?.tf_apartment?.max != 0) {\n                                    $('.tf-apartment-filter-range').alRangeSlider(tf_apartment_range_options);\n                                }\n\n                                var tf_search_page_params = new window.URLSearchParams(window.location.search);\n                                let tf_apartment_search_range = {\n                                    range: {\n                                        min: parseInt( response.data?.tf_apartment?.min ),\n                                        max: parseInt( response.data?.tf_apartment?.max ),\n                                        step: 1\n                                    },\n                                    initialSelectedValues: {\n                                        from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_apartment?.min ),\n                                        to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_apartment?.max )\n                                    },\n                                    grid: false,\n                                    theme: \"dark\",\n                                    onFinish: function () {\n                                        makeFilter();\n                                    }\n                                };\n                                if ( parseInt(  response.data?.tf_apartment?.min ) != 0 && parseInt( response.data?.tf_apartment?.max ) != 0) {\n                                    $('.tf-apartment-result-price-range').alRangeSlider(tf_apartment_search_range);\n                                }\n                            } else if( post_type == 'tf_carrental' ) {\n                                var tf_search_page_params = new window.URLSearchParams(window.location.search);\n                                let tf_car_search_range = {\n                                    range: {\n                                        min: parseInt( response.data?.tf_carrental?.min ),\n                                        max: parseInt( response.data?.tf_carrental?.max ),\n                                        step: 1\n                                    },\n                                    initialSelectedValues: {\n                                        from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_carrental?.min ),\n                                        to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_carrental?.max )\n                                    },\n                                    grid: false,\n                                    theme: \"dark\",\n                                    onFinish: function () {\n                                        if($(\".tf-filter-reset-btn\").length>0){\n                                            $(\".tf-filter-reset-btn\").show();\n                                        }\n                                        makeFilter();\n                                    }\n                                };\n                                if ( parseInt( response.data?.tf_carrental?.min ) != 0 && parseInt( response.data?.tf_carrental?.max ) != 0) {\n                                    $('.tf-car-result-price-range').alRangeSlider(tf_car_search_range);\n                                }\n                \n                                var tf_search_page_params = new window.URLSearchParams(window.location.search);\n                                let tf_car_search_seat_range = {\n                                    range: {\n                                        min: parseInt( response.data?.tf_carrental?.min_seat ),\n                                        max: parseInt( response.data?.tf_carrental?.max_seat ),\n                                        step: 1\n                                    },\n                                    initialSelectedValues: {\n                                        from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt( response.data?.tf_carrental?.min_seat ),\n                                        to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt( response.data?.tf_carrental?.max_seat )\n                                    },\n                                    grid: false,\n                                    theme: \"dark\",\n                                    onFinish: function () {\n                                        if($(\".tf-filter-reset-btn\").length>0){\n                                            $(\".tf-filter-reset-btn\").show();\n                                        }\n                                        makeFilter();\n                                    }\n                                };\n                                if ( parseInt( response.data?.tf_carrental?.min_seat ) != 0 && parseInt( response.data?.tf_carrental?.max_seat ) != 0) {\n                                    $('.tf-car-result-seat-range').alRangeSlider(tf_car_search_seat_range);\n                                }\n                            } \n                        }\n                    }\n                })\n            }\n        }\n\n        /**\n         * Scroll to Review Section\n         */\n        $(\".tf-top-review a\").on(\"click\", function () {\n            $('html, body').animate({\n                scrollTop: $(\"#tf-review\").offset().top - 32\n            }, 1000);\n        });\n\n        /**\n         * Scroll to Map Section\n         */\n        $(\".tf-map-link a\").on(\"click\", function () {\n            $('html, body').animate({\n                scrollTop: $(\"#tour-map\").offset().top - 32\n            }, 1000);\n        });\n\n        /**\n         * Ajax Search Result\n         *\n         * by search form submit\n         *\n         * by feature filter\n         */\n\n        var filter_xhr;\n        // Creating a function for reuse this filter in any where we needs.\n        const makeFilter = (page = 1, mapCoordinates = []) => {\n            var dest = $('#tf-place').val();\n            var page = page;\n            var adults = $('#adults').val();\n            var room = $('#room').val();\n            var children = $('#children').val();\n            var infant = $('#infant').val();\n            var checked = $('#check-in-out-date').val();\n            var startprice = $('.widget_tf_price_filters input[name=\"from\"]').val();\n            var endprice = $('.widget_tf_price_filters input[name=\"to\"]').val();\n            var tf_author = $('#tf_author').val();\n            // split date range into dates\n            var checkedArr = checked ? checked.split(' - ') : '';\n            var checkin = checkedArr[0];\n            var checkout = checkedArr[1];\n            var posttype = $('.tf-post-type').val();\n\n            let filters = termIdsByFeildName('tf_filters');\n            let tfHotelTypes = termIdsByFeildName('tf_hotel_types');\n            let features = termIdsByFeildName('tf_features');\n            let tour_features = termIdsByFeildName('tour_features');\n            let attractions = termIdsByFeildName('tf_attractions');\n            let activities = termIdsByFeildName('tf_activities');\n            let tfTourTypes = termIdsByFeildName('tf_tour_types');\n            let tfApartmentFeatures = termIdsByFeildName('tf_apartment_features');\n            let tfApartmentTypes = termIdsByFeildName('tf_apartment_types');\n            let tf_ordering = $('#tf-orderby').find(\":selected\").val();\n\n            let category = termIdsByFeildName('car_category');\n            let fuel_type = termIdsByFeildName('car_fueltype');\n            let engine_year = termIdsByFeildName('car_engine_year');\n            let min_seat = $('.widget_tf_seat_filters input[name=\"from\"]').val();\n            let max_seat = $('.widget_tf_seat_filters input[name=\"to\"]').val();\n            let same_location = $('input[name=\"same_location\"]:checked').val();\n            let driver_age = $('input[name=\"driver_age\"]:checked').val();\n            let pickup_date = $('.tf_pickup_date').val();\n            let dropoff_date = $('.tf_dropoff_date').val();\n            let pickup_time = $('.tf_pickup_time').val();\n            let dropoff_time = $('.tf_dropoff_time').val();\n            let pickup_slug = $('#tf_pickup_location_id').val();\n            let dropoff_slug = $('#tf_dropoff_location_id').val();\n\n            var formData = new FormData();\n            formData.append('action', 'tf_trigger_filter');\n            formData.append('_nonce', tf_params.nonce);\n            formData.append('type', posttype);\n            formData.append('page', page);\n            formData.append('dest', dest);\n            formData.append('adults', adults );\n            formData.append('room', room);\n            formData.append('children', children ? children : 0);\n            formData.append('infant', infant ? infant : 0);\n            formData.append('checkin', checkin);\n            formData.append('checkout', checkout);\n            formData.append('filters', filters);\n            formData.append('features', features);\n            formData.append('tf_hotel_types', tfHotelTypes);\n            formData.append('tour_features', tour_features);\n            formData.append('attractions', attractions);\n            formData.append('activities', activities);\n            formData.append('tf_tour_types', tfTourTypes);\n            formData.append('tf_apartment_features', tfApartmentFeatures);\n            formData.append('tf_apartment_types', tfApartmentTypes);\n            formData.append('checked', checked);\n            formData.append('category', category);\n            formData.append('fuel_type', fuel_type);\n            formData.append('engine_year', engine_year);\n            formData.append('pickup', pickup_slug);\n            formData.append('dropoff', dropoff_slug);\n            formData.append('pickup_date', pickup_date);\n            formData.append('dropoff_date', dropoff_date);\n            formData.append('pickup_time', pickup_time);\n            formData.append('dropoff_time', dropoff_time);\n            formData.append('same_location', same_location);\n            formData.append('driver_age', driver_age);\n            formData.append('dropoff_time', dropoff_time);\n            formData.append(\"tf_ordering\", tf_ordering);\n            formData.append('page', page);\n\n            if (startprice) {\n                formData.append('startprice', startprice);\n            }\n            if (endprice) {\n                formData.append('endprice', endprice);\n            }\n            if (tf_author) {\n                formData.append('tf_author', tf_author);\n            }\n\n            if (min_seat) {\n                formData.append('min_seat', min_seat);\n            }\n            if (max_seat) {\n                formData.append('max_seat', max_seat);\n            }\n\n            if(mapCoordinates.length === 4){\n                formData.append('mapCoordinates', mapCoordinates.join(','));\n                formData.append('mapFilter', true);\n            }\n            // abort previous request\n            if (filter_xhr && filter_xhr.readyState != 4) {\n                filter_xhr.abort();\n            }\n\n            //var pagination_url = '/?place=' + dest + '&adults=' + adults + '&children=' + children + '&type=' + posttype;\n            //formData.append('pagination_url', pagination_url);\n            filter_xhr = $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: formData,\n                processData: false,\n                contentType: false,\n                beforeSend: function (data) {\n                    $('.archive_ajax_result').block({\n                        message: null,\n                        overlayCSS: {\n                            background: \"#fff\",\n                            opacity: .5\n                        }\n                    });\n                    $('#tf_ajax_searchresult_loader').show();\n                    if ($.trim(checkin) !== '') {\n                        $('.tf_booking-dates .tf_label-row').find('#tf-required').remove();\n                    }\n                },\n                complete: function (data) {\n                    $('.archive_ajax_result').unblock();\n                    $('#tf_ajax_searchresult_loader').hide();\n\n                    // total posts 0 if not found by @hena\n                    if ($('.tf-nothing-found')[0]) {\n                        $('.tf_posts_navigation').hide();\n                        var foundPosts = $('.tf-nothing-found').data('post-count');\n                        $('.tf-total-results').find('span').html(foundPosts);\n                    } else {\n                        $('.tf_posts_navigation').show();\n                        var postsCount = $('.tf-posts-count').html();\n                        var mapPostsCount = $('.tf-map-posts-count').html();\n                        $('.tf-total-results').find('span').html(postsCount);\n                        $('.tf-total-results').find('span.tf-map-item-count').html(mapPostsCount);\n                    }\n                },\n                success: function (data, e) {\n                    $('.archive_ajax_result').unblock();\n                    $('#tf_ajax_searchresult_loader').hide();\n                    $('.archive_ajax_result').html(data);\n                    // Filter Popup Removed\n                    if($('.tf-filter-cars')){\n                        $('.tf-filter-cars').removeClass('tf-btn-loading');\n                    }\n                    if ($('.tf-details-right').length > 0) {\n                        $('.tf-details-right').removeClass('tf-filter-show');\n                    }\n                    if($('#tf-hotel-archive-map').length) {\n\n                        // GOOGLE MAP INITIALIZE\n                        var mapLocations = $('#map-datas').html();\n                        if ($('#map-datas').length && mapLocations.length) {\n                            googleMapInit(mapLocations);\n                        } else {\n                            googleMapInit('');\n                        }\n                    }\n\n                    // @KK show notice in every success request\n                    if(!mapCoordinates.length) {\n                        notyf.success(tf_params.ajax_result_success);\n                    }\n                },\n                error: function (data) {\n                    console.log(data);\n                },\n\n            });\n        };\n\n        // Search Result Ajax page number\n        function tf_page_pagination_number(element) {\n            element.find('span').remove();\n            return parseInt(element.html());\n        }\n\n        // Search Result Ajax pagination\n        $(document).on('click', '.tf_search_ajax_pagination a.page-numbers', function (e) {\n            e.preventDefault();\n            page = tf_page_pagination_number($(this).clone());\n            makeFilter(page);\n        }); \n        \n\n        // Search Result Ajax pagination\n        $(document).on('click', 'tf_tax_posts_navigation a.page-numbers', function (e) {\n            e.preventDefault();\n            page = tf_page_pagination_number($(this).clone());\n            makeFilter(page);\n        });\n\n        // Look for submission and change on filter widgets\n        $(document).on('submit', '#tf-widget-booking-search', function (e) {\n            e.preventDefault();\n            makeFilter()\n        });\n        $(document).on('change', '.widget_tf_price_filters input[name=\"from\"], .widget_tf_price_filters input[name=\"to\"], [name*=tf_filters],[name*=tf_hotel_types],[name*=tf_features],[name*=tour_features],[name*=tf_attractions],[name*=tf_activities],[name*=tf_tour_types],[name*=tf_apartment_features],[name*=tf_apartment_types], [name*=car_category],[name*=car_fueltype],[name*=car_engine_year]', function () {\n            if ($(\".filter-reset-btn\").length > 0) {\n                $(\".filter-reset-btn\").show();\n            }\n            makeFilter();\n        })\n\n        // Archive Page Filter\n        $(document).on('submit', '.tf_archive_search_result', function (e) {\n            e.preventDefault();\n\n            checked = $('#check-in-out-date').val();\n            var checkedArr = checked.split(' - ');\n            var checkin = checkedArr[0];\n            var checkout = checkedArr[1];\n            var posttype = $('.tf-post-type').val();\n\n\n            if ($.trim(checkin) === '' && tf_params.date_hotel_search && posttype === 'tf_hotel') {\n\n                if ($('#tf-required').length === 0) {\n                    if($('.tf_booking-dates .tf_label-row').length === 1){\n                        $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\n                    }else{\n                        $(\"#check-in-out-date\").trigger(\"click\");\n                    }\n                }\n                return;\n            }\n\n            if ($.trim(checkin) === '' && tf_params.date_tour_search && posttype === 'tf_tours') {\n\n                if ($('#tf-required').length === 0) {\n                    if($('.tf_booking-dates .tf_label-row').length === 1){\n                        $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\n                    }else{\n                        $(\"#check-in-out-date\").trigger(\"click\");\n                    }\n                }\n                return;\n            }\n\n            if ($.trim(checkin) === '' && tf_params.date_apartment_search && posttype === 'tf_apartment') {\n\n                if ($('#tf-required').length === 0) {\n                    if($('.tf_booking-dates .tf_label-row').length === 1){\n                        $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\n                    }else{\n                        $(\"#check-in-out-date\").trigger(\"click\");\n                    }\n                }\n                return;\n            }\n\n            makeFilter()\n        });\n\n        // Archive Page Filter Reset\n        $(document).on('click', '.filter-reset-btn', function (e) {\n            e.preventDefault();\n            $('[name*=tf_filters],[name*=tf_hotel_types],[name*=tf_features],[name*=tour_features],[name*=tf_attractions],[name*=tf_activities],[name*=tf_tour_types],[name*=tf_apartment_features],[name*=tf_apartment_types], [name*=car_category],[name*=car_fueltype],[name*=car_engine_year]').prop('checked', false);\n            makeFilter();\n            $(\".filter-reset-btn\").hide();\n\n            //template 4\n            if ($(\".tf-archive-filter-sidebar\").length > 0) {\n                $(\".tf-archive-filter-sidebar\").removeClass('tf-show');\n            }\n        });\n\n        $(\".tf-archive-ordering\").on('change', 'select.tf-orderby', function (e) {\n            $(this).closest('form').trigger('submit');\n        });\n\n        $(\".tf-archive-ordering\").on('submit', function (e) {\n            e.preventDefault();\n            makeFilter();\n\n        });\n\n        /*\n        * Car Archive Filter\n        * @author Jahid\n        */\n        $(document).on('click', '.tf-filter-cars', function (e) {\n            let $this = $(this);\n            $this.addClass('tf-btn-loading');\n\n            if(tf_params.location_car_search){\n                let same_location = $('input[name=\"same_location\"]:checked').val();\n                if('on'==same_location){\n                    if ($.trim($('#tf_pickup_location').val()) == '') {\n                        if ($('#tf-required').length === 0) {\n                            if($('.tf-driver-location').length === 1){\n                                $('.tf-driver-location').append('<span id=\"tf-required\" class=\"required\"><b>Select Pickup & Dropoff Location</b></span>');\n                            }else{\n                                $(\"#tf_pickup_location\").trigger(\"click\");\n                            }\n                        }\n                        $('.tf-filter-cars').removeClass('tf-btn-loading');\n                        return;\n                    } else {\n                        if ($('#tf-required').length === 1) {\n                            $('.tf-driver-location .required').remove();\n                        }\n                    }\n                }else{\n                    if ($.trim($('#tf_pickup_location').val()) == '' || $.trim($('#tf_dropoff_location').val()) == '') {\n                        if ($('#tf-required').length === 0) {\n                            if($('.tf-driver-location').length === 1){\n                                $('.tf-driver-location').append('<span id=\"tf-required\" class=\"required\"><b>Select Pickup & Dropoff Location</b></span>');\n                            }else{\n                                $(\"#tf_pickup_location\").trigger(\"click\");\n                            }\n                        }\n                        $('.tf-filter-cars').removeClass('tf-btn-loading');\n                        return;\n                    } else {\n                        if ($('#tf-required').length === 1) {\n                            $('.tf-driver-location .required').remove();\n                        }\n                    }\n                }\n\n\n            }\n\n            if(tf_params.date_car_search){\n                if ($.trim($('.tf_pickup_date').val()) == '' || $.trim($('.tf_dropoff_date').val()) == '') {\n                    if ($('#tf-required').length === 0) {\n                        if($('.tf-driver-location').length === 1){\n                            $('.tf-driver-location').append('<span id=\"tf-required\" class=\"required\"><b>Select Pickup & Dropoff Date</b></span>');\n                        }else{\n                            $(\".tf_pickup_date\").trigger(\"click\");\n                        }\n                    }\n                    $('.tf-filter-cars').removeClass('tf-btn-loading');\n                    return;\n                } else {\n                    if ($('#tf-required').length === 1) {\n                        $('.tf-driver-location .required').remove();\n                    }\n                }\n            }\n\n            if($(\".filter-reset-btn\").length>0){\n                $(\".filter-reset-btn\").show();\n            }\n\n            makeFilter();\n        });\n\n        /*\n        * Same Location Checkbox\n        * @author Jahid\n        */\n        $(document).on('click', '.tf-driver-location [name=\"same_location\"]', function (e) {\n            // Check if the checkbox is checked\n            if ($(this).is(':checked')) {\n                $('.tf-pick-drop-location').addClass('active');\n            } else {\n                $('.tf-pick-drop-location').removeClass('active');\n            }\n        });\n\n\n        /*\n        * Get term ids by field name\n        * @auther Foysal\n        */\n        const termIdsByFeildName = (fieldName) => {\n            let termIds = [];\n            $(`[name*=${fieldName}]`).each(function () {\n                if ($(this).is(':checked')) {\n                    termIds.push($(this).val());\n                }\n            });\n            return termIds.join();\n        }\n\n        /**\n         * Rating bar\n         */\n        $.fn.inViewport = function (cb) {\n            return this.each(function (i, el) {\n                function visPx() {\n                    var H = $(this).height(),\n                        r = el.getBoundingClientRect(), t = r.top, b = r.bottom;\n                    return cb.call(el, Math.max(0, t > 0 ? H - t : (b < H ? b : H)));\n                }\n\n                visPx();\n                $(win).on(\"resize scroll\", visPx);\n            });\n        };\n\n        $(window).on(\"load\", function () {\n            // Trigger Animation\n            jQuery('[data-width]').each(function () {\n                var $this = jQuery(this);\n                var width = $this.attr('data-width');\n\n                $this.inViewport(function (px) {\n                    if (px > 0) {\n                        $this.css('width', +width + '%');\n                    } else {\n                        $this.css('width', '0%');\n                    }\n                });\n            });\n        });\n\n        /**\n         * Full Width JS\n         */\n        function fullwidthInit(selector) {\n            function fullWidth(selector) {\n                $(selector).each(function () {\n                    $(this).width(\"100%\").css({marginLeft: \"-0px\"});\n\n                    var window_width = $(window).width();\n\n                    var left_margin = \"-\" + $(this).offset().left + \"px\";\n\n                    $(this).width(window_width).css({marginLeft: left_margin});\n                });\n            }\n\n            $(window).on(\"resize load\", function () {\n                fullWidth(selector);\n            });\n        }\n\n        /**\n         * Share buttons\n         */\n        // Toggle share buttons\n        $('.share-toggle[data-toggle=\"true\"]').on(\"click\", function (e) {\n            e.preventDefault();\n            var target = $(this).attr('href');\n            $(target).slideToggle('fast');\n        });\n\n        // Copy button\n        $('button#share_link_button').on(\"click\", function () {\n            $(this).addClass('copied');\n            $(this).children('span').css('display', 'block');\n            setTimeout(function () {\n                $('button#share_link_button').removeClass('copied');\n                $('button#share_link_button').children('span').css('display', 'none');\n            }, 3000);\n            const inputElement = $(this).parent().find(\"#share_link_input\");\n            if (navigator.clipboard && navigator.clipboard.writeText) {\n                navigator.clipboard.writeText(inputElement.val()).then(() => {\n                    console.log(\"Copied to clipboard!\");\n                });\n            } else {\n                const tempInput = document.createElement(\"textarea\");\n                tempInput.value = inputElement.val();\n                document.body.appendChild(tempInput);\n                tempInput.select();\n                document.execCommand(\"copy\");\n                document.body.removeChild(tempInput);\n            }\n        });\n\n\n        /**\n         * Related Tour\n         *\n         * Slick\n         */\n        $('.tf-slider-items-wrapper,.tf-slider-activated').slick({\n            dots: true,\n            arrows: false,\n            infinite: true,\n            speed: 300,\n            //autoplay: true,\n            autoplaySpeed: 2000,\n            slidesToShow: 3,\n            slidesToScroll: 1,\n            responsive: [\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 3,\n                        slidesToScroll: 1,\n                        infinite: true,\n                        dots: true\n                    }\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1\n                    }\n                },\n                {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        });\n\n\n        // Design 2 related tour\n        $('.tf-design-2-slider-items-wrapper, .tf-design-3-slider-items-wrapper').slick({\n            dots: false,\n            arrows: true,\n            infinite: true,\n            speed: 300,\n            autoplaySpeed: 2000,\n            slidesToShow: 3,\n            slidesToScroll: 1,\n            responsive: [\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1,\n                        infinite: true,\n                        dots: false\n                    }\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                },\n                {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        });\n\n        /**\n         * Customer Reviews\n         *\n         * Slick\n         */\n        $('.tf-review-items-wrapper').slick({\n            dots: true,\n            arrows: false,\n            infinite: true,\n            speed: 300,\n            autoplay: true,\n            autoplaySpeed: 2000,\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            responsive: [\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 4,\n                        slidesToScroll: 1,\n                        infinite: true,\n                        dots: true\n                    }\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 3,\n                        slidesToScroll: 1\n                    }\n                },\n                {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        });\n\n        /**\n         * Wishlist Functionality\n         */\n        /* get wishlist from localstorage  */\n        const wishKey = 'wishlist_item';\n        const getWish = () => {\n            let userLists = localStorage.getItem(wishKey);\n            // if list is null then init list else make array from json string\n            return (userLists === null) ? [] : JSON.parse(userLists);\n        }\n\n        /* store item in wishlist for loggedin and visitor */\n        const addWish = item => {\n            let userLists = getWish()\n            // Look if item is not already is in list\n            if (userLists.filter(i => i.post == item.post).length === 0) {\n                // push to list\n                userLists.push(item)\n                // save list\n                localStorage.setItem(wishKey, JSON.stringify(userLists));\n                return true;\n            }\n            return false;\n        }\n        /* get all wishlist items */\n        const getAllWish = () => {\n            let nodes = $('.tf-wishlist-holder');\n            $.each(nodes, function (index, element) {\n                let type = $(element).data('type');\n                type = type ? type.split(',') : undefined;\n                let userLists = getWish();\n                if (type !== undefined) userLists = userLists.filter(e => type.includes(e.type));\n                let ids = userLists.map(e => e.post);\n                let data = {\n                    nonce: $(element).data('nonce'),\n                    action: 'tf_generate_table',\n                    ids\n                }\n                $.post(tf_params.ajax_url, data,\n                    function (data) {\n                        if (data.success) {\n                            $(element).html(data.data);\n                        }\n                    },\n                );\n            });\n\n\n        }\n        /* delete item from wishlist */\n        const removeWish = id => {\n            let userLists = getWish()\n            let index = userLists.findIndex(x => x.post == id);\n\n            if (index >= 0) {\n                userLists.splice(index, 1)\n                localStorage.setItem(wishKey, JSON.stringify(userLists));\n                if (tf_params.single != '1') getAllWish()\n                return true;\n            } else return false;\n\n        }\n\n        /* toggle icon for the wish list */\n        const wishIconToggleForGuest = () => {\n            if (!$(document).hasClass('logged-in') && $(document).find('.add-wishlist')) {\n                let targetNode = $('.add-wishlist');\n                let id = targetNode.data('id');\n                let userLists = getWish()\n                var index = userLists.findIndex(x => x.post == id);\n                if (index >= 0) {\n                    wishIconFill(targetNode);\n                } else {\n                    wishIcon(targetNode);\n                }\n            }\n        }\n\n        /* fill icon class */\n        const wishIconFill = targetNode => {\n            targetNode.addClass('remove-wishlist');\n            targetNode.addClass('fas fa-heart');\n            targetNode.addClass('tf-text-red');\n            targetNode.removeClass('far fa-heart-o');\n            targetNode.removeClass('add-wishlist');\n\n\n        }\n        /* blank icon */\n        const wishIcon = targetNode => {\n            targetNode.addClass('add-wishlist');\n            targetNode.addClass('far fa-heart-o');\n            targetNode.removeClass('fas fa-heart');\n            targetNode.removeClass('tf-text-red');\n            targetNode.removeClass('remove-wishlist');\n        }\n        /* send request to wp-admin for storing request */\n        $(document).on('click', '.add-wishlist', function () {\n\n            let targetNode = $('.add-wishlist');\n            let data = {\n                type: targetNode.data('type'),\n                post: targetNode.data('id'),\n            }\n            let wishPageTitle = targetNode.data('page-title');\n            let wishPageUrl = targetNode.data('page-url');\n            let wishlistpage = wishPageUrl !== undefined ? '<a class=\"wish-button\" href=\"' + wishPageUrl + '\">' + wishPageTitle + '</a>' : '';\n\n            /* For logged in user */\n            if ($('body').hasClass('logged-in')) {\n                data.action = 'tf_add_to_wishlists';\n                data.nonce = targetNode.data('nonce');\n                $.ajax({\n                    type: \"post\",\n                    url: tf_params.ajax_url,\n                    data: data,\n                    beforeSend: function (data) {\n                        notyf.success(tf_params.wishlist_add)\n                    },\n                    success: function (response) {\n                        if (response.success) {\n                            wishIconFill(targetNode);\n                            notyf.success({\n                                message: response.data,\n                                duration: 4e3\n                            });\n                        }\n                    }\n                });\n\n            } else {\n                /* For guest */\n                if (addWish(data) === true) {\n                    notyf.success(tf_params.wishlist_add)\n                    wishIconFill(targetNode);\n                    notyf.success({\n                        message: tf_params.wishlist_added,\n                        duration: 4e3\n                    });\n                } else notyf.error(tf_params.wishlist_add_error);\n\n            }\n\n            return false;\n\n        });\n        /* populate wishlist table */\n        if ($('body').find('.tf-wishlist-holder').length) {\n            getAllWish()\n        }\n        /* trigger remove wish function */\n        $(document).on('click', '.remove-wishlist', function () {\n            let targetNode = $('.remove-wishlist');\n            let id = targetNode.data('id');\n            /* For logged in user */\n            if ($('body').hasClass('logged-in')) {\n                let tableNode = targetNode.closest('table');\n                let type = tableNode.data('type');\n                let data = {id, action: 'tf_remove_wishlist', type, nonce: targetNode.data('nonce')}\n                $.get(tf_params.ajax_url, data,\n                    function (data) {\n                        if (data.success) {\n                            if (tf_params.single != '1') {\n                                tableNode.closest('.tf-wishlists').html(data.data);\n                            }\n                            wishIcon(targetNode);\n                            notyf.success(tf_params.wishlist_removed);\n                        }\n                    }\n                );\n\n            } else {\n                /* For guest */\n                if (removeWish(id) == true) {\n                    wishIcon(targetNode);\n                    notyf.success(tf_params.wishlist_removed);\n                } else {\n                    notyf.error(tf_params.wishlist_remove_error);\n                }\n            }\n\n        });\n\n        /* toggle icon for guest */\n        wishIconToggleForGuest();\n\n        /*\n        * Trourfic autocomplete destination\n        */\n        function tourfic_autocomplete(inp, arr) {\n            /*the autocomplete function takes two arguments,\n            the text field element and an array of possible autocompleted values:*/\n\n            // Executes when some one click in the search form location\n            inp.addEventListener(\"focus\", function () {\n                if (this.value == '' || !this.value) {\n                    // alert(\"Working....\")\n                    let a = document.createElement(\"DIV\");\n                    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n                    a.classList.add(\"autocomplete-items\")\n                    this.parentNode.appendChild(a);\n                    for (const [key, value] of Object.entries(arr)) {\n                        let b = document.createElement(\"DIV\");\n                        b.innerHTML = value;\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'>`;\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug\n                        });\n                        a.appendChild(b);\n                    }\n                }\n            })\n\n            var currentFocus;\n            /*execute a function when someone writes in the text field:*/\n            inp.addEventListener(\"keyup\", function (e) {\n                var a, b, i, val = this.value;\n                /*close any already open lists of autocompleted values*/\n                closeAllLists();\n                currentFocus = -1;\n                /*create a DIV element that will contain the items (values):*/\n                a = document.createElement(\"DIV\");\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n                a.setAttribute(\"class\", \"autocomplete-items\");\n                /*append the DIV element as a child of the autocomplete container:*/\n                this.parentNode.appendChild(a);\n                var $notfound = [];\n                /*for each item in the array...*/\n                for (const [key, value] of Object.entries(arr)) {\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n                        $notfound.push('found');\n                        /*create a DIV element for each matching element:*/\n                        b = document.createElement(\"DIV\");\n                        /*make the matching letters bold:*/\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\n                        b.innerHTML += value.substr(val.length);\n                        /*insert a input field that will hold the current array item's value:*/\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\n                        /*execute a function when someone clicks on the item value (DIV element):*/\n                        b.addEventListener(\"click\", function (e) {\n                            let source = this.getElementsByTagName(\"input\")[0];\n                            /*insert the value for the autocomplete text field:*/\n                            inp.value = source.value;\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\n                            /*close the list of autocompleted values,\n                            (or any other open lists of autocompleted values:*/\n                            closeAllLists();\n                        });\n                        a.appendChild(b);\n\n                    } else {\n                        $notfound.push('notfound');\n                    }\n                }\n\n                if ($notfound.indexOf('found') == -1) {\n                    /*create a DIV element for each matching element:*/\n                    b = document.createElement(\"DIV\");\n                    /*make the matching letters bold:*/\n\n                    b.innerHTML += tf_params.no_found;\n                    /*insert a input field that will hold the current array item's value:*/\n                    b.innerHTML += \"<input type='hidden' value=''>\";\n                    /*execute a function when someone clicks on the item value (DIV element):*/\n                    b.addEventListener(\"click\", function (e) {\n                        /*insert the value for the autocomplete text field:*/\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\n                        /*close the list of autocompleted values,\n                        (or any other open lists of autocompleted values:*/\n                        closeAllLists();\n                    });\n                    a.appendChild(b);\n                }\n            });\n            /*execute a function presses a key on the keyboard:*/\n            inp.addEventListener(\"keydown\", function (e) {\n                var x = document.getElementById(this.id + \"autocomplete-list\");\n                if (x) x = x.getElementsByTagName(\"div\");\n                if (e.keyCode == 40) {\n                    /*If the arrow DOWN key is pressed,\n                    increase the currentFocus variable:*/\n                    currentFocus++;\n                    /*and and make the current item more visible:*/\n                    addActive(x);\n                } else if (e.keyCode == 38) { //up\n                    /*If the arrow UP key is pressed,\n                    decrease the currentFocus variable:*/\n                    currentFocus--;\n                    /*and and make the current item more visible:*/\n                    addActive(x);\n                } else if (e.keyCode == 13) {\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\n                    e.preventDefault();\n                    if (currentFocus > -1) {\n                        /*and simulate a click on the \"active\" item:*/\n                        if (x) x[currentFocus].trigger(\"click\");\n                    }\n                }\n            });\n\n            function addActive(x) {\n                /*a function to classify an item as \"active\":*/\n                if (!x) return false;\n                /*start by removing the \"active\" class on all items:*/\n                removeActive(x);\n                if (currentFocus >= x.length) currentFocus = 0;\n                if (currentFocus < 0) currentFocus = (x.length - 1);\n                /*add class \"autocomplete-active\":*/\n                x[currentFocus].classList.add(\"autocomplete-active\");\n            }\n\n            function removeActive(x) {\n                /*a function to remove the \"active\" class from all autocomplete items:*/\n                for (var i = 0; i < x.length; i++) {\n                    x[i].classList.remove(\"autocomplete-active\");\n                }\n            }\n\n            function closeAllLists(elmnt) {\n                /*close all autocomplete lists in the document,\n                except the one passed as an argument:*/\n                var x = document.getElementsByClassName(\"autocomplete-items\");\n                for (var i = 0; i < x.length; i++) {\n                    if (elmnt != x[i] && elmnt != inp) {\n                        x[i].parentNode.removeChild(x[i]);\n                    }\n                }\n            }\n\n            /*execute a function when someone clicks in the document:*/\n            document.addEventListener(\"click\", function (e) {\n                // closeAllLists(e.target);\n                if (e.target.id == \"content\" || e.target.id == \"\") {\n                    closeAllLists(e.target);\n                }\n            });\n        }\n\n        /**\n         * Open/close horizontal search form persons panel\n         */\n        // Adult, Child, Room Selection toggle\n        $(\".tf_selectperson-wrap .tf_input-inner,.tf_person-selection-wrap .tf_person-selection-inner\").on(\"click\", function () {\n            $('.tf_acrselection-wrap').slideToggle('fast');\n        });\n        // Close\n        document.addEventListener(\"click\", function (event) {\n            if (!$(event.target).closest(\".tf_selectperson-wrap, .tf_acrselection-wrap\").length) {\n                $(\".tf_acrselection-wrap, .tf_person-selection-wrap\").slideUp(\"fast\");\n            }\n        });\n\n        /**\n         * Number/text change horizontal search form\n         */\n        // Number Increment\n        $('.acr-inc, .quanity-acr-inc').on('click', function (e) {\n            var input = $(this).parent().find('input');\n            var max = input.attr('max') ? input.attr('max') : 999;\n            var step = input.attr('step') ? input.attr('step') : 1;\n            if (!input.val()) {\n                input.val(0);\n            }\n            if (input.val() < max) {\n                input.val(parseInt(input.val()) + parseInt(step)).change();\n            }\n            // input focus disable\n            input.blur();\n        });\n\n        // Number Decrement\n        $('.acr-dec, .quanity-acr-dec').on('click', function (e) {\n\n            var input = $(this).parent().find('input');\n            var min = input.attr('min') ? input.attr('min') : 0;\n            var step = input.attr('step') ? input.attr('step') : 1;\n            if (!input.val()) {\n                input.val(0);\n            }\n            if (input.val() > min) {\n                input.val(input.val() - parseInt(step)).change();\n            }\n        });\n\n        // Adults change trigger\n        $(document).on('change', '#adults', function () {\n            let thisEml = $(this);\n            let thisVal = thisEml.val();\n\n            if (thisVal > 1) {\n                $('.tf_selectperson-wrap').find('.adults-text').text(thisVal + \" \" + tf_params.adult + 's');\n            } else {\n                $('.tf_selectperson-wrap').find('.adults-text').text(thisVal + \" \" + tf_params.adult);\n            }\n\n        });\n\n        // Children change trigger\n        $(document).on('change', '#children', function () {\n            let thisEml = $(this);\n            let thisVal = thisEml.val();\n\n            if (thisVal > 1) {\n                $('.tf_selectperson-wrap').find('.child-text').text(thisVal + \" \" + tf_params.children);\n            } else {\n                $('.tf_selectperson-wrap').find('.child-text').text(thisVal + \" \" + tf_params.children);\n            }\n\n        });\n\n        // Infant change trigger\n        $(document).on('change', '#infant', function () {\n            let thisEml = $(this);\n            let thisVal = thisEml.val();\n\n            if (thisVal > 1) {\n                $('.tf_selectperson-wrap').find('.infant-text').text(thisVal + \" \" + tf_params.infant);\n            } else {\n                $('.tf_selectperson-wrap').find('.infant-text').text(thisVal + \" \" + tf_params.infant);\n            }\n\n        });\n\n        // Shortcode Design 2 Adults change trigger\n        $(document).on('change', '.adults-style2', function () {\n            let thisEml = $(this);\n            let thisVal = thisEml.val();\n            let $this = $(this).closest('.tf_hotel-shortcode-design-2');\n            // Declare child outside the if block\n            let child = 0;\n\n            if (thisEml.parent().parent().siblings().find('.childs-style2').length > 0) {\n                child = parseInt(thisEml.parent().parent().siblings().find('.childs-style2').val());\n            } else {\n                child = parseInt(0);\n            }\n            // Declare intant outside the if block\n            let intant = 0;\n\n            if (thisEml.parent().parent().siblings().find('.infant-style2').length > 0) {\n                intant = parseInt(thisEml.parent().parent().siblings().find('.childs-style2').val());\n            } else {\n                intant = parseInt(0);\n            }\n            let total_people = child + intant + parseInt(thisVal);\n            if (total_people > 1) {\n                $this.find(\".tf_guest_number .guest\").text(total_people);\n            }\n        });\n        // Shortcode Design 2 Childs change trigger\n        $(document).on('change', '.childs-style2', function () {\n            let thisEml = $(this);\n            let thisVal = thisEml.val();\n            let $this = $(this).closest('.tf_hotel-shortcode-design-2');\n\n            // Declare adults outside the if block\n            let adults = 0;\n\n            if (thisEml.parent().parent().siblings().find('.adults-style2').length > 0) {\n                adults = parseInt(thisEml.parent().parent().siblings().find('.adults-style2').val());\n            } else {\n                adults = parseInt(0);\n            }\n            // Declare intant outside the if block\n            let intant = 0;\n\n            if (thisEml.parent().parent().siblings().find('.infant-style2').length > 0) {\n                intant = parseInt(thisEml.parent().parent().siblings().find('.infant-style2').val());\n            } else {\n                intant = parseInt(0);\n            }\n\n            let total_people = adults + intant + parseInt(thisVal);\n            if (total_people > 1) {\n                $this.find(\".tf_guest_number .guest\").text(total_people);\n            }\n        });\n        // Shortcode Design 2 Infants change trigger\n        $(document).on('change', '.infant-style2', function () {\n            let thisEml = $(this);\n            let thisVal = thisEml.val();\n            let $this = $(this).closest('.tf_hotel-shortcode-design-2');\n\n            // Declare adults outside the if block\n            let adults = 0;\n\n            if (thisEml.parent().parent().siblings().find('.adults-style2').length > 0) {\n                adults = parseInt(thisEml.parent().parent().siblings().find('.adults-style2').val());\n            } else {\n                adults = parseInt(0);\n            }\n\n            // Declare child outside the if block\n            let child = 0;\n\n            if (thisEml.parent().parent().siblings().find('.childs-style2').length > 0) {\n                child = parseInt(thisEml.parent().parent().siblings().find('.childs-style2').val());\n            } else {\n                child = parseInt(0);\n            }\n\n            let total_people = adults + child + parseInt(thisVal);\n            if (total_people > 1) {\n                $this.find(\".tf_guest_number .guest\").text(total_people);\n            }\n        });\n\n        // Room change trigger\n        $(document).on('change', '#room', function () {\n            let thisEml = $(this);\n            let thisVal = thisEml.val();\n\n            if (thisVal > 1) {\n                thisEml.closest('.tf_selectperson-wrap').find('.room-text').text(thisVal + \" \" + tf_params.room);\n            } else {\n                thisEml.closest('.tf_selectperson-wrap').find('.room-text').text(thisVal + \" \" + tf_params.room);\n            }\n        });\n\n        // Shortcode Design 2 Room change trigger\n        $(document).on('change', '.rooms-style2', function () {\n            let thisEml = $(this);\n            let thisVal = thisEml.val();\n            let total_room = parseInt(thisVal);\n            if (total_room > 1) {\n                $(\".tf_hotel-shortcode-design-2 .tf_guest_number .room\").text(total_room);\n            }\n        });\n\n        /**\n         * Review submit form toggle\n         */\n        $(document).on('click', '#reply-title', function () {\n            var $this = $(this);\n            $('#commentform').slideToggle('fast', 'swing', function () {\n                $this.parent().toggleClass('active');\n            });\n        });\n\n        // Ajax Ask question submit\n        $(document).on('submit', 'form#ask-question', function (e) {\n            e.preventDefault();\n\n            var $this = $(this);\n\n            var formData = new FormData(this);\n            formData.append('action', 'tf_ask_question');\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: formData,\n                processData: false,\n                contentType: false,\n                beforeSend: function (data) {\n                    $this.block({\n                        message: null,\n                        overlayCSS: {\n                            background: \"#fff\",\n                            opacity: .5\n                        }\n                    });\n\n                    $this.find('.response').html(tf_params.sending_ques);\n                },\n                complete: function (data) {\n                    $this.unblock();\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n\n                    if (response.status == 'sent') {\n                        $this.find('.response').html(response.msg);\n\n                        $this.find('[type=\"reset\"]').trigger('click');\n                    } else {\n                        $this.find('.response').html(response.msg);\n                    }\n                },\n                error: function (data) {\n                    console.log(data);\n                },\n\n            });\n\n        });\n\n        /**\n         * Change archive item\n         *\n         * Grid/List\n         */\n        $(document).on('click', '.change-view', function (e) {\n            e.preventDefault();\n            $('.change-view').removeClass('active');\n            $(this).addClass('active');\n\n            var dataid = $(this).data('id');\n            if (dataid == 'grid-view') {\n                $('.archive_ajax_result').addClass('tours-grid');\n            } else {\n                $('.archive_ajax_result').removeClass('tours-grid');\n            }\n\n        });\n\n        /**\n         * Design 1 archive item\n         *\n         * Grid/List\n         */\n        $(document).on('click', '.tf-grid-list-layout', function (e) {\n            e.preventDefault();\n            $('.tf-grid-list-layout').removeClass('active');\n            $(this).addClass('active');\n\n            var dataid = $(this).data('id');\n            if (dataid == 'grid-view') {\n                $('.tf-item-cards').addClass('tf-layout-grid');\n                $('.tf-item-cards').removeClass('tf-layout-list');\n            } else {\n                $('.tf-item-cards').addClass('tf-layout-list');\n                $('.tf-item-cards').removeClass('tf-layout-grid');\n            }\n\n        });\n\n        /**\n         * ajax tour load pagination\n         */\n        var flag = false;\n        var main_xhr;\n\n        var amPushAjax = function (url) {\n            if (main_xhr && main_xhr.readyState != 4) {\n                main_xhr.abort();\n            }\n\n            main_xhr = $.ajax({\n                url: url,\n                contentType: false, // Not to set any content header\n                processData: false, // Not to process data\n                asynch: true,\n                beforeSend: function () {\n\n                    $(document).find('.tf_posts_navigation').addClass('loading');\n                    $(document).find('.archive_ajax_result').addClass('loading');\n                    flag = true;\n                },\n                success: function (data) {\n                    $('.archive_ajax_result').html($('.archive_ajax_result', data).html());\n\n                    $('.tf_posts_navigation').html($('.tf_posts_navigation', data).html());\n\n                    //document.title = $(data).filter('title').text();\n\n                    flag = false;\n\n                    $(document).find('.tf_posts_navigation').removeClass('loading');\n                    $(document).find('.archive_ajax_result').removeClass('loading');\n\n                }\n            });\n        };\n\n        // Feed Ajax Trigger\n        $(document).on('click', '.tf_posts_page_navigation a.page-numbers', function (e) {\n            e.preventDefault();\n            var targetUrl = (e.target.href) ? e.target.href : $(this).context.href;\n            amPushAjax(targetUrl);\n            window.history.pushState({url: \"\" + targetUrl + \"\"}, \"\", targetUrl);\n        });\n        // End Feed Ajax Trigger\n\n        // Hotel and Tour Advance Search form\n\n        $(\".tf_selectdate-wrap.tf_more_info_selections .tf_input-inner\").on(\"click\", function () {\n            $('.tf-more-info').toggleClass('show');\n        });\n        $(document).on(\"click\", function (event) {\n            if (!$(event.target).closest(\".tf_selectdate-wrap.tf_more_info_selections .tf_input-inner, .tf-more-info\").length) {\n                $('.tf-more-info').removeClass('show');\n            }\n        });\n\n        // FAQ Accordion\n        $('.tf-faq-title').on(\"click\", function () {\n            var $this = $(this);\n            if (!$this.hasClass(\"active\")) {\n                $(\".tf-faq-desc\").slideUp(400);\n                $(\".tf-faq-title\").removeClass(\"active\");\n                $('.arrow').removeClass('arrow-animate');\n            }\n            $this.toggleClass(\"active\");\n            $this.next().slideToggle();\n            $('.arrow', this).toggleClass('arrow-animate');\n        });\n\n        /*\n        * New Template FAQ Accordion\n        * @author: Jahid\n        */\n        $('.tf-faq-collaps').on(\"click\", function () {\n            var $this = $(this);\n            if (!$this.hasClass(\"active\")) {\n                $(\".tf-faq-content\").slideUp(400);\n                $(\".tf-faq-collaps\").removeClass(\"active\");\n                $('.tf-faq-single').removeClass('active');\n            }\n            $this.toggleClass(\"active\");\n            $this.next().slideToggle();\n            $(this).closest('.tf-faq-single').toggleClass('active');\n        });\n\n\n        /*\n        * Booking Form select first tab on load\n        * @author: Foysal\n        */\n        $(window).on('load', function () {\n            if ($('.tf-tablinks').length > 0) {\n                $('.tf-tablinks').first().trigger('click').addClass('active');\n            }\n        });\n\n        // Form Tab click\n        $('.tf-tablinks').on('click', function (e) {\n            e.preventDefault();\n            let formId = $(this).data('form-id');\n            tfOpenForm(e, formId);\n        });\n\n        /*\n        * Booking Form tab mobile version\n        * @author: Foysal\n        */\n        $(document).on('change', 'select[name=\"tf-booking-form-tab-select\"]', function () {\n            var tabId = $(this).val();\n            tfOpenForm(event, tabId);\n        });\n\n        /*\n         * Location Search\n         * @author: Foysal\n         */\n        $(document).on('keyup', '.tf-hotel-side-booking #tf-location, .tf-hotel-side-booking #tf-destination', function () {\n            let search = $(this).val();\n            $(this).next('input[name=place]').val(search);\n        })\n\n\n        /**\n         * Children age field add when children added in search field\n         * @since 2.8.6\n         * @author Abu Hena\n         */\n\n        if ($('.child-age-limited')[0]) {\n            $('.acr-select .child-inc').on('click', function () {\n                var first_element = $('div[id^=\"tf-age-field-0\"]');\n                var ch_element = $('div[id^=\"tf-age-field-\"]:last');\n                if (ch_element.length != 0) {\n                    var num = parseInt(ch_element.prop(\"id\").match(/\\d+/g), 10) + 1;\n                }\n                var elements = ch_element.clone().prop('id', 'tf-age-field-' + num);\n                elements.find(\"label\").html('Child age ' + num);\n                //elements.find(\"select\").attr('name','children_'+num+'_age');\n                elements.find(\"select\").attr('name', 'children_ages[]');\n                ch_element.after(elements);\n                elements.show();\n                first_element.hide();\n\n            })\n\n            $('.acr-select .child-dec').on('click', function () {\n                var total_age_input = $('.tf-children-age').length;\n                var ch_element = $('div[id^=\"tf-age-field-\"]:last');\n                if (total_age_input != 1) {\n                    ch_element.remove();\n                }\n            })\n        }\n        var postsCount = $('.tf-posts-count').html();\n        $('.tf-total-results').find('span').html(postsCount);\n\n        //Sidebar widget js\n        $('.tf-widget-title').on('click', function () {\n            $(this).find('i').toggleClass('collapsed');\n            $(this).siblings('.tf-filter').slideToggle('medium');\n        })\n\n        /* see more checkbox filter started */\n\n        $('a.see-more').on('click', function (e) {\n            var $this = $(this);\n            e.preventDefault();\n            $this.parent('.tf-filter').find('.tf-filter-item').filter(function (index) {\n                return index > 3;\n            }).removeClass(\"hidden\");\n            $this.hide();\n\n            $this.parent('.tf-filter').find('.see-less').show();\n        });\n\n        /* see less checkbox filter started */\n\n        $('a.see-less').on('click', function (e) {\n            var $this = $(this);\n            e.preventDefault();\n            $this.parent('.tf-filter').find('.tf-filter-item').filter(function (index) {\n                return index > 3;\n            }).addClass(\"hidden\");\n            $this.hide();\n            $this.parent('.tf-filter').find('.see-more').show();\n        });\n\n        $('.tf-filter').each(function () {\n\n            var len = $(this).find('ul').children().length;\n            $(this).find('.see-more').hide();\n            if (len > 4) {\n                $(this).find('.see-more').show();\n            }\n            //hide items if crossed showing limit\n            $(this).find('.tf-filter-item').filter(function (index) {\n                return index > 3;\n            }).addClass(\"hidden\");\n\n        });\n\n        $('.tf-category-lists').each(function () {\n\n            var len = $(this).find('ul').children().length;\n            $(this).find('.see-more').hide();\n            if (len > 4) {\n                $(this).find('.see-more').show();\n            }\n            //hide items if crossed showing limit\n            $(this).find('.tf-filter-item').filter(function (index) {\n                return index > 3;\n            }).addClass(\"hidden\");\n\n        });\n        /* see more checkbox filter started */\n\n        $('.tf-category-lists a.see-more').on('click', function (e) {\n            var $this = $(this);\n            e.preventDefault();\n            $this.parent('.tf-category-lists').find('.tf-filter-item').filter(function (index) {\n                return index > 3;\n            }).removeClass(\"hidden\");\n            $this.hide();\n\n            $this.parent('.tf-category-lists').find('.see-less').show();\n        });\n\n        /* see less checkbox filter started */\n\n        $('.tf-category-lists a.see-less').on('click', function (e) {\n            var $this = $(this);\n            e.preventDefault();\n            $this.parent('.tf-category-lists').find('.tf-filter-item').filter(function (index) {\n                return index > 3;\n            }).addClass(\"hidden\");\n            $this.hide();\n            $this.parent('.tf-category-lists').find('.see-more').show();\n        });\n\n\n        /* see more checkbox filter end */\n\n        //active checkbox bg\n        $('.tf_widget input').on('click', function () {\n            $(this).parent().parent().toggleClass('active');\n        });\n\n        /**\n         * Cart item remove from checkout page\n         * @since 2.9.7\n         * @author Foysal\n         */\n        $('form.checkout').on('click', '.cart_item a.remove', function (e) {\n            e.preventDefault();\n\n            var cart_item_key = $(this).attr(\"data-cart_item_key\");\n\n            $.ajax({\n                type: 'POST',\n                url: tf_params.ajax_url,\n                data: {\n                    action: 'tf_checkout_cart_item_remove',\n                    _nonce: tf_params.nonce,\n                    cart_item_key: cart_item_key,\n                },\n                beforeSend: function () {\n                    $('body').trigger('update_checkout');\n                },\n                success: function (result) {\n                    $('body').trigger('update_checkout');\n                },\n                error: function (error) {\n\n                }\n            });\n        });\n\n        /*\n        * Without Payment Booking\n        * @since 2.9.26\n        * @author Jahid\n        */\n        let tf_hasErrorsFlag = false;\n        $(document).on('click', '.tf-traveller-error', function (e) {\n            let hasErrors = [];\n            let $this = $(this).closest('.tf-withoutpayment-booking');\n            $('.error-text').text(\"\");\n            $this.find('.tf-single-travel').each(function () {\n                $(this).find('input, select').each(function () {\n                    if ($(this).attr('data-required') && $(this).attr('data-required') == 1) {\n                        if ($(this).val() == \"\") {\n                            hasErrors.push(true);\n                            const errorContainer = $(this).siblings('.error-text');\n                            errorContainer.text('This field is required.');\n                            if (errorContainer.text() !== '') {\n                                errorContainer.addClass('error-visible');\n                            } else {\n                                errorContainer.removeClass('error-visible');\n                            }\n                        }\n                    }\n                });\n                $(this).find('input[type=\"radio\"], input[type=\"checkbox\"]').each(function () {\n                    if ($(this).attr('data-required')) {\n                        const radioName = $(this).attr('name');\n                        const isChecked = $('input[name=\"' + radioName + '\"]:checked').length > 0;\n\n                        if (!isChecked) {\n                            hasErrors.push(true);\n                            const errorContainer = $(this).parent().siblings('.error-text');\n                            errorContainer.text('This field is required.');\n                            if (errorContainer.text() !== '') {\n                                errorContainer.addClass('error-visible');\n                            } else {\n                                errorContainer.removeClass('error-visible');\n                            }\n                        }\n                    }\n                });\n\n            });\n            if (hasErrors.includes(true)) {\n                tf_hasErrorsFlag = true;\n                return false;\n            }\n            tf_hasErrorsFlag = false;\n        });\n\n        // Booking Confirmation Form Validation\n        $(document).on('click', '.tf-book-confirm-error, .tf-hotel-book-confirm-error', function (e) {\n            let hasErrors = [];\n            let $this = $(this).closest('.tf-withoutpayment-booking');\n            $('.error-text').text(\"\");\n            $this.find('.tf-confirm-fields').each(function () {\n                $(this).find('input, select').each(function () {\n                    if ($(this).attr('data-required') && $(this).attr('data-required') == 1 ) {\n                        if ($(this).val() == \"\") {\n                            hasErrors.push(true);\n                            const errorContainer = $(this).siblings('.error-text');\n                            errorContainer.text('This field is required.');\n                            if (errorContainer.text() !== '') {\n                                errorContainer.addClass('error-visible');\n                            } else {\n                                errorContainer.removeClass('error-visible');\n                            }\n                        }\n                    }\n                });\n                $(this).find('input[type=\"radio\"], input[type=\"checkbox\"]').each(function () {\n                    if ($(this).attr('data-required')) {\n                        const radioName = $(this).attr('name');\n                        const isChecked = $('input[name=\"' + radioName + '\"]:checked').length > 0;\n\n                        if (!isChecked) {\n                            hasErrors.push(true);\n                            const errorContainer = $(this).parent().siblings('.error-text');\n                            errorContainer.text('This field is required.');\n                            if (errorContainer.text() !== '') {\n                                errorContainer.addClass('error-visible');\n                            } else {\n                                errorContainer.removeClass('error-visible');\n                            }\n                        }\n                    }\n                });\n            });\n            if (hasErrors.includes(true)) {\n                tf_hasErrorsFlag = true;\n                return false;\n            }\n        });\n\n        // Navigation Next\n        $(document).on('click', '.tf-tabs-control', function (e) {\n            e.preventDefault();\n            if (tf_hasErrorsFlag) {\n                return false;\n            }\n            let step = $(this).attr(\"data-step\");\n            if (step > 1) {\n                for (let i = 1; i <= step; i++) {\n                    $('.tf-booking-step-' + i).removeClass(\"active\");\n                    $('.tf-booking-step-' + (i - 1)).addClass(\"done\");\n                }\n                $('.tf-booking-step-' + step).addClass(\"active\");\n                $('.tf-booking-content').hide();\n                $('.tf-booking-content-' + step).fadeIn(300);\n\n                $('.tf-control-pagination').hide();\n                $('.tf-pagination-content-' + step).fadeIn(300);\n            }\n        });\n\n        // Navigation Back\n        $(document).on('click', '.tf-step-back', function (e) {\n            e.preventDefault();\n            let step = $(this).attr(\"data-step\");\n            if (step == 1) {\n                $('.tf-booking-step').removeClass(\"active\");\n                $('.tf-booking-step').removeClass(\"done\");\n                $('.tf-booking-step-' + step).addClass(\"active\");\n                $('.tf-booking-content').hide();\n                $('.tf-booking-content-' + step).fadeIn(300);\n\n                $('.tf-control-pagination').hide();\n                $('.tf-pagination-content-' + step).fadeIn(300);\n            }\n            if (step > 1) {\n                let next_step = parseInt(step) + 1;\n                $('.tf-booking-step-' + next_step).removeClass(\"active\");\n                $('.tf-booking-step-' + step).addClass(\"active\");\n                $('.tf-booking-step-' + step).removeClass(\"done\");\n                $('.tf-booking-step-' + next_step).removeClass(\"done\");\n\n                $('.tf-booking-content').hide();\n                $('.tf-booking-content-' + step).fadeIn(300);\n                $('.tf-control-pagination').hide();\n                $('.tf-pagination-content-' + step).fadeIn(300);\n            }\n        });\n\n        // Popup Open\n        const tourPopupBooking = () => {\n            var $this = $(this);\n            let check_in_date = $('#check-in-out-date').val();\n            let adults = $('#adults').val();\n            let children = $('#children').val();\n            let infant = $('#infant').val();\n            let post_id = $('input[name=post_id]').val();\n            let check_in_time = $('select[name=check-in-time] option').filter(':selected').val();\n            var deposit = $('input[name=deposit]').is(':checked');\n            var extras = [];\n            var quantity = [];\n\n            $('.tour-extra-single').each(function (e) {\n                let $this = $(this);\n\n                if ($this.find('input[name=\"tf-tour-extra\"]').is(':checked')) {\n\n                    let tour_extras = $this.find('input[name=\"tf-tour-extra\"]').val();\n                    extras.push(tour_extras);\n\n                    if ($this.find('.tf_quantity-acrselection').hasClass('quantity-active')) {\n                        let qty = $this.find('input[name=\"extra-quantity\"]').val();\n\n                        quantity.push(qty)\n                    } else {\n                        quantity.push(1)\n                    }\n                }\n            })\n\n            var extras = extras.join();\n            var quantities = quantity.join();\n            var data = {\n                action: 'tf_tour_booking_popup',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                adults: adults,\n                children: children,\n                infant: infant,\n                check_in_date: check_in_date,\n                check_in_time: check_in_time,\n                tour_extra: extras,\n                tour_extra_quantity: quantities,\n                deposit: deposit\n            };\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                beforeSend: function (data) {\n                    $('#tour_room_details_loader').show();\n                },\n                complete: function (data) {\n                    $this.unblock();\n                },\n                success: function (data) {\n                    $this.unblock();\n\n                    var response = JSON.parse(data);\n\n                    if (response.status == 'error') {\n\n                        $('#tour_room_details_loader').hide();\n                        if (response.errors) {\n                            response.errors.forEach(function (text) {\n                                notyf.error(text);\n                            });\n                        }\n\n                        return false;\n                    } else {\n                        $('#tour_room_details_loader').hide();\n                        if ($('.tf-traveller-info-box').length > 0) {\n                            if ($(\".tf-traveller-info-box\").html().trim() == \"\") {\n                                $('.tf-traveller-info-box').html(response.traveller_info);\n                            } else {\n                                $('.tf-traveller-info-box').html(response.traveller_info);\n                            }\n                        }\n                        if ($('.tf-booking-traveller-info').length > 0) {\n                            $('.tf-booking-traveller-info').html(response.traveller_summery);\n                        }\n                        $('.tf-withoutpayment-booking').addClass('show');\n                    }\n                },\n                error: function (data) {\n                    console.log(data);\n                },\n\n            });\n        }\n        $('.tf-booking-popup-btn').on('click', function(e){\n            e.preventDefault();\n            $(\".tf-withoutpayment-booking input[type='text'], .tf-withoutpayment-booking input[type='email'], .tf-withoutpayment-booking input[type='date'], .tf-withoutpayment-booking select, .tf-withoutpayment-booking textarea\").val(\"\");\n\n            $('.tf-booking-content-extra input[type=\"checkbox\"]').each(function () {\n                if ($(this).prop('checked') == true) {\n                    $(this).prop('checked', false);\n                }\n            });\n            tourPopupBooking();\n        });\n\n        $(document).on('change', '[name*=tf-tour-extra], input[name=\"extra-quantity\"]', function () {\n            tourPopupBooking();\n        });\n        $(document).on('change', '[name=deposit]', function () {\n            tourPopupBooking();\n        });\n\n        // Popup Close\n        $('body').on('click touchstart', '.tf-booking-times span', function (e) {\n            e.preventDefault();\n            $('.tf-withoutpayment-booking').removeClass('show');\n            $('.tf-withoutpayment-booking-confirm').removeClass('show');\n            // Reset Tabs\n            $(\".tf-booking-tab-menu ul li\").removeClass(\"active\");\n            $(\".tf-booking-tab-menu ul li\").removeClass(\"done\");\n            $(\".tf-booking-tab-menu ul li:first-child\").addClass(\"active\");\n            // Reset Content\n            $(\".tf-booking-content\").hide();\n            $(\".tf-booking-content:first\").show();\n            // Reset Pagination\n            $(\".tf-control-pagination\").hide();\n            $(\".tf-control-pagination:first\").show();\n        });\n\n        /*\n        * Custom modal\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-modal-btn', function (e) {\n            e.preventDefault();\n            var dataTarget = $(this).attr('data-target');\n            $(dataTarget).addClass('tf-modal-show');\n            $('body').addClass('tf-modal-open');\n        });\n        $(document).on(\"click\", '.tf-modal-close', function () {\n            $('.tf-modal').removeClass('tf-modal-show');\n            $('body').removeClass('tf-modal-open');\n        });\n        $(document).on(\"click\", function (event) {\n            if(!$('.tf-map-modal').length) {\n                if (!$(event.target).closest(\".tf-modal-content,.tf-modal-btn\").length) {\n                    $(\"body\").removeClass(\"tf-modal-open\");\n                    $(\".tf-modal\").removeClass(\"tf-modal-show\");\n                }\n            }\n        });\n\n        /**\n         * Hotel Details Popup\n         *\n         */\n        $(document).on('click', '.tf-room-detail-qv', function (e) {\n            e.preventDefault();\n            $(\"#tour_room_details_loader\").show();\n            var post_id = $(this).attr(\"data-hotel\");\n            var uniqid_id = $(this).attr(\"data-uniqid\");\n            var data = {\n                action: 'tf_tour_details_qv',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                uniqid_id: uniqid_id\n            };\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                success: function (response) {\n                    $(\"#tour_room_details_qv\").html(response);\n\n                    $(\"#tour_room_details_loader\").hide();\n                    $.fancybox.open({\n                        src: '#tour_room_details_qv',\n                        type: 'inline',\n                    });\n                }\n\n            });\n        });\n\n        /**\n         * Design 2 Hotel Details Popup\n         *\n         */\n        $(document).on('click', '.tf-room-detail-popup', function (e) {\n            e.preventDefault();\n            $(\"#tour_room_details_loader\").show();\n            var post_id = $(this).attr(\"data-hotel\");\n            var uniqid_id = $(this).attr(\"data-uniqid\");\n            var data = {\n                action: 'tf_tour_details_qv',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                uniqid_id: uniqid_id\n            };\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                success: function (response) {\n                    $(\".tf-room-popup\").html(response);\n                    $(\".tf-room-popup\").addClass(\"tf-show\")\n                    $(\"#tour_room_details_loader\").hide();\n\n                }\n\n            });\n        });\n\n        // Design 3 Toggle share buttons\n        $('.tf-single-template__two .tf-share-toggle, .tf-single-template__three .tf-share-toggle').on(\"click\", function (e) {\n            e.preventDefault();\n            $('.tf-share-toggle').toggleClass('actives');\n            $('.tf-off-canvas-share').toggleClass('show');\n        });\n\n        // Design 3 Wishlist buttons\n        $('.tf-single-template__two .add-wishlist, .tf-single-template__three .add-wishlist').on(\"click\", function (e) {\n            e.preventDefault();\n            $(this).parents().find('.tf-wishlist-box').addClass('actives');\n        });\n        $('.tf-single-template__two .remove-wishlist, .tf-single-template__three .remove-wishlist').on(\"click\", function (e) {\n            e.preventDefault();\n            $(this).parents().find('.tf-wishlist-box').removeClass('actives');\n        });\n\n        // Copy button\n        $('a#share_link_button').on(\"click\", function (e) {\n    \n            e.preventDefault();\n            $(this).addClass('copied');\n           \n            setTimeout(function () {\n                $('a#share_link_button').removeClass('copied');\n            }, 3000);\n           // Get the input element\n            const inputElement = $(this).parent().find(\"#share_link_input\");\n\n\n            if (navigator.clipboard && navigator.clipboard.writeText) {\n                navigator.clipboard.writeText(inputElement.val()).then(() => {\n                    console.log(\"Copied to clipboard!\");\n                });\n            } else {\n                const tempInput = document.createElement(\"textarea\");\n                tempInput.value = inputElement.val();\n                document.body.appendChild(tempInput);\n                tempInput.select();\n                document.execCommand(\"copy\");\n                document.body.removeChild(tempInput);\n            }\n       \n        });\n\n        /*\n        * Template 3 Script Start\n        * @author: Jahid\n        */\n        $('.tf-single-template__two .tf-reviews-slider').slick({\n            infinite: true,\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            prevArrow: '<button class=\"slide-arrow prev-arrow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"49\" height=\"24\" viewBox=\"0 0 49 24\" fill=\"none\"><path d=\"M8.32843 11.0009H44.5V13.0009H8.32843L13.6924 18.3648L12.2782 19.779L4.5 12.0009L12.2782 4.22266L13.6924 5.63687L8.32843 11.0009Z\" fill=\"#B58E53\"/></svg></button>',\n            nextArrow: '<button class=\"slide-arrow next-arrow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"49\" height=\"24\" viewBox=\"0 0 49 24\" fill=\"none\"><path d=\"M40.6716 11.0009H4.5V13.0009H40.6716L35.3076 18.3648L36.7218 19.779L44.5 12.0009L36.7218 4.22266L35.3076 5.63687L40.6716 11.0009Z\" fill=\"#B58E53\"/></svg></button>',\n            responsive: [\n                {\n                    breakpoint: 993,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1,\n                    }\n                }\n            ]\n        });\n\n        $(\".tf-single-template__two .tf-question\").on(\"click\", function () {\n            var $this = $(this);\n            if (!$this.hasClass(\"tf-active\")) {\n                $(this).siblings().removeClass(\"tf-active\");\n                $(this).siblings().find('.tf-question-desc').slideUp();\n                $(this).parents(\".tf-questions-col\").siblings().find('.tf-question').removeClass(\"tf-active\");\n                $(this).parents(\".tf-questions-col\").siblings().find('.tf-question-desc').slideUp();\n            }\n            $(this).toggleClass(\"tf-active\");\n            $(this).find('.tf-question-desc').slideToggle();\n        });\n\n        $(\".tf-single-template__two .tf-hero-hotel.tf-popup-buttons\").on(\"click\", function (e) {\n            e.preventDefault();\n            $(\"#tour_room_details_loader\").show();\n            setTimeout(function () {\n                $(\"#tour_room_details_loader\").hide();\n                $(\".tf-hotel-popup\").addClass(\"tf-show\");\n            }, 1000);\n        });\n\n        $(document).on('click', '.tf-single-template__two .tf-popup-close, .tf-archive-template__two .tf-popup-close', function () {\n            $(\".tf-popup-wrapper\").removeClass(\"tf-show\")\n        });\n\n        $(document).on('click', function (event) {\n            if (!$(event.target).closest(\".tf-popup-wrapper .tf-popup-inner\").length) {\n                $(\".tf-popup-wrapper\").removeClass('tf-show');\n            }\n        });\n\n        $('.tf-single-template__two .tf-details-menu a').on('click', function () {\n            $(this).addClass('tf-hashlink');\n            $(this).closest('li').siblings().find('a').removeClass('tf-hashlink');\n        });\n\n        //Room Filter Showing\n        $('.tf-single-template__two .tf-available-rooms-head .tf-filter, .tf-archive-template__two .tf-available-rooms-head .tf-filter, .tf-archive-template__three .tf-available-rooms-head .tf-filter').on('click', function () {\n            $('.tf-room-filter').toggleClass('tf-filter-show');\n        });\n\n        //Archive Filter Showing\n        $('.tf-archive-template__two .tf-archive-filter-showing').on('click', function () {\n            $('.tf-archive-right').toggleClass('tf-filter-show');\n        });\n\n        $(document).on('click touchstart', function (event) {\n            if (!$(event.target).closest(\".tf-archive-filter-showing, .tf-details-right\").length) {\n                $(\".tf-details-right\").removeClass('tf-filter-show');\n            }\n        });\n\n        //Search Form Showing\n        $('.tf-single-template__two .tf-modify-search-btn, .tf-archive-template__two .tf-modify-search-btn').on('click', function () {\n            $('.tf-booking-form-wrapper .tf-booking-form').slideDown(300);\n            $('.tf-single-template__two .tf-modify-search-btn, .tf-archive-template__two .tf-modify-search-btn').slideUp(300);\n        });\n\n        // Full Description Showing\n        $('.tf-single-template__two span.tf-see-description, .tf-archive-template__three span.tf-see-description, .single-tf_carrental .tf-single-template__one span.tf-see-description').on('click', function () {\n            $('.tf-short-description').slideUp();\n            $('.tf-full-description').slideDown();\n        });\n\n        // See Less Description Showing\n        $('.tf-single-template__two span.tf-see-less-description, .tf-single-template__three span.tf-see-less-description, .single-tf_carrental .tf-single-template__one span.tf-see-less-description').on('click', function () {\n            $('.tf-full-description').slideUp();\n            $('.tf-short-description').slideDown();\n        });\n\n        $('.tf-single-template__two .acr-inc, .tf-archive-template__two .acr-inc, .tf-single-template__two .acr-dec, .tf-archive-template__two .acr-dec').on('click', function () {\n\n            if ($('input#infant').length) {\n                var guest = Number($('input#adults').val() ? $('input#adults').val() : 0) + Number($('input#children').val() ? $('input#children').val() : 0) + Number($('input#infant').val() ? $('input#infant').val() : 0);\n            } else {\n                var guest = Number($('input#adults').val() ? $('input#adults').val() : 0) + Number($('input#children').val() ? $('input#children').val() : 0);\n            }\n            if (guest.toString().length < 2) {\n                guest = '0' + guest;\n            }\n            $('span.tf-guest').html(guest);\n            var room = Number($('input#room').val());\n            if (room.toString().length < 2) {\n                room = '0' + room;\n            }\n            $('span.tf-room').html(room);\n        })\n\n        $(document).ready(function () {\n            if ($('input#infant').length) {\n                var guest = Number($('input#adults').val() ? $('input#adults').val() : 0) + Number($('input#children').val() ? $('input#children').val() : 0) + Number($('input#infant').val() ? $('input#infant').val() : 0);\n            } else {\n                var guest = Number($('input#adults').val() ? $('input#adults').val() : 0) + Number($('input#children').val() ? $('input#children').val() : 0);\n                var adult = Number($('input#adults').val() ? $('input#adults').val() : 0);\n                var children = Number($('input#children').val() ? $('input#children').val() : 0);\n            }\n\n            if (guest.toString().length < 2) {\n                guest = '0' + guest;\n            }\n\n            $('span.tf-guest').html(guest);\n            $('span.tf-adult').html(adult);\n            $('span.tf-children').html(children);\n        })\n\n        $(document).on(\"mouseup\", function (e) {\n            var container = $(\".tf-single-template__two .tf_acrselection-wrap, .tf-archive-template__two .tf_acrselection-wrap\");\n            if (!container.is(e.target) && container.has(e.target).length === 0) {\n                $(\".tf-single-template__two .tf-booking-form-guest-and-room .tf_acrselection-wrap, .tf-archive-template__two .tf-booking-form-guest-and-room .tf_acrselection-wrap\").removeClass(\"tf-show\");\n            }\n        });\n        $(\".tf-single-template__two .tf-booking-form-guest-and-room, .tf-archive-template__two .tf-booking-form-guest-and-room\").on(\"click\", function () {\n            $(\".tf-single-template__two .tf-booking-form-guest-and-room .tf_acrselection-wrap, .tf-archive-template__two .tf-booking-form-guest-and-room .tf_acrselection-wrap\").addClass(\"tf-show\");\n        });\n\n        $(\".tf-single-template__two .tf-review-open\").on(\"click\", function () {\n            $(\".tf-single-template__two .tf-sitebar-widgets .tf-review-form-wrapper\").toggleClass(\"tf-review-show\");\n        });\n\n        /**\n         * Design 2 Archive Hotel Room Gallery & Archive Tour Gallery Popup\n         *\n         */\n        $(document).on('click', '.tf-hotel-room-popup', function (e) {\n            e.preventDefault();\n            $(\"#tour_room_details_loader\").show();\n            var post_id = $(this).attr(\"data-id\");\n            var post_type = $(this).attr(\"data-type\");\n            var data = {\n                action: 'tf_hotel_archive_popup_qv',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                post_type: post_type\n            };\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                success: function (response) {\n                    $(\".tf-popup-body\").html(response);\n                    $(\".tf-hotel-popup\").addClass(\"tf-show\")\n                    $(\"#tour_room_details_loader\").hide();\n\n                }\n            });\n        });\n\n        /*\n        * Template 2 Script End\n        * @author: Jahid\n        */\n\n        /*\n        * Template 4 Script Start\n        * @author: Foysal\n        */\n        $('.tf-archive-template__three .acr-inc , .tf-archive-template__three .acr-dec').on('click', function () {\n\n            if ($('input#infant').length) {\n                var guest = Number($('input#adults').val()) + Number($('input#children').val()) + Number($('input#infant').val());\n            } else {\n                var guest = Number($('input#adults').val()) + Number($('input#children').val());\n                var adult = Number($('input#adults').val());\n                var children = Number($('input#children').val());\n            }\n            if (guest.toString().length < 2) {\n                guest = '0' + guest;\n            }\n            $('span.tf-guest').html(guest);\n            $('span.tf-adult').html(adult);\n            $('span.tf-children').html(children);\n            var room = Number($('input#room').val());\n            if (room.toString().length < 2) {\n                room = '0' + room;\n            }\n            $('span.tf-room').html(room);\n        })\n\n        $(document).mouseup(function (e) {\n            var container = $(\".tf-archive-template__three .tf_acrselection-wrap\");\n            if (!container.is(e.target) && container.has(e.target).length === 0) {\n                $(\".tf-archive-template__three .tf-search-guest-and-room .tf_acrselection-wrap\").removeClass(\"tf-show\");\n            }\n        });\n        $(\".tf-archive-template__three .tf-search-guest-and-room\").click(function () {\n            $(\".tf-archive-template__three .tf-search-guest-and-room .tf_acrselection-wrap\").addClass(\"tf-show\");\n        });\n\n        /*\n         * Grid/List\n         */\n        $(document).on('click', '.tf-archive-view li.tf-archive-view-item', function (e) {\n            e.preventDefault();\n            $('.tf-archive-view li.tf-archive-view-item').removeClass('active');\n            $(this).addClass('active');\n\n            let dataId = $(this).data('id');\n            let hotelContainer = $('.tf-archive-hotels');\n\n            if (dataId === 'grid-view') {\n                hotelContainer.addClass('tf-layout-grid');\n                hotelContainer.removeClass('tf-layout-list');\n            } else {\n                hotelContainer.addClass('tf-layout-list');\n                hotelContainer.removeClass('tf-layout-grid');\n            }\n            adjustPadding();\n        });\n\n        /*\n        * Template 4 hotel, tour, apartment archive scrollbar\n        */\n        function adjustPadding() {\n            var hotelsContainer = $('.tf-archive-template__three .tf-archive-hotels, .tf-archive-details-wrap .tf-archive-hotels');\n        \n            if (window.innerWidth > 768) {\n                if (hotelsContainer[0].scrollHeight > hotelsContainer.height()) {\n                    hotelsContainer.css('padding-right', '16px');\n                } else {\n                    hotelsContainer.css('padding-right', '0px');\n                }\n            } else {\n                hotelsContainer.css('padding-right', '0px');\n            }\n        }\n        \n        if ($('.tf-archive-template__three .tf-archive-hotels').length) {\n            adjustPadding();\n            $(window).on('resize', adjustPadding);\n        }\n\n        function adjustSidebarPadding() {\n            var sidebar = $('.tf-archive-template__three #tf__booking_sidebar, #tf_map_popup_sidebar');\n\n            if (sidebar[0].scrollHeight > sidebar.height()) {\n                sidebar.css('padding-right', '16px');\n            } else {\n                sidebar.css('padding-right', '0px');\n            }\n        }\n\n        if($('.tf-archive-template__three #tf__booking_sidebar').length) {\n            adjustSidebarPadding();\n            $(window).on('resize', adjustSidebarPadding);\n        }\n\n        /*\n        * Filter btn\n        */\n        $(document).on('click', '.tf-archive-filter-btn', function () {\n            $('.tf-archive-filter-sidebar').toggleClass('tf-show');\n        });\n        $(document).click(function (event) {\n            if (!$(event.target).closest(\".tf-archive-filter-sidebar, .tf-archive-filter-btn\").length) {\n                $('.tf-archive-filter-sidebar').removeClass(\"tf-show\");\n            }\n        });\n\n        /**\n         * Hotel single room gallery modal\n         */\n        $(document).on('click', '.tf-room-modal-btn', function (e) {\n            e.preventDefault();\n            $(\"#tour_room_details_loader\").show();\n            var post_id = $(this).attr(\"data-hotel\");\n            var uniqid_id = $(this).attr(\"data-uniqid\");\n            var data = {\n                action: 'tf_tour_details_qv',\n                _nonce: tf_params.nonce,\n                post_id: post_id,\n                uniqid_id: uniqid_id\n            };\n\n            $.ajax({\n                type: 'post',\n                url: tf_params.ajax_url,\n                data: data,\n                success: function (response) {\n                    $(\".tf-room-modal .tf-modal-body\").html(response);\n                    $(\".tf-room-modal\").addClass(\"tf-modal-show\");\n                    $('body').addClass('tf-modal-open');\n                    $(\"#tour_room_details_loader\").hide();\n                }\n\n            });\n        });\n\n        // Template 4 section toggle\n        $('.tf-section-toggle-icon').on(\"click\", function () {\n            var $this = $(this);\n            var parent = $this.closest('.tf-template-section');\n            if (!$this.hasClass(\"active\")) {\n                parent.find(\".tf-section-toggle\").slideUp(500);\n                $this.removeClass(\"active\");\n                parent.find('.tf-toggle-icon-down').removeClass(\"active\");\n            }\n            $this.toggleClass(\"active\");\n            parent.find(\".tf-section-toggle\").slideToggle();\n        });\n\n        function onePageNav( switchName ) {\n            const navSwitch = $(switchName);\n            const deductHeight = 60;\n            let navArr = [];\n\n            navSwitch.each(function(i){\n                let navSwitchHref = $(this).attr('href');\n                let tgtOff = $(navSwitchHref).offset().top - deductHeight;\n                navArr.push([]);\n                navArr[i].switch = $(this);\n                navArr[i].tgtOff = tgtOff;\n            });\n\n            $(window).scroll(function () {\n                for( let i = 0; i < navArr.length; i++ ){\n                    let scroll = $(window).scrollTop();\n                    let tgtKey = navArr[i];\n                    let tgtSwitch = tgtKey.switch;\n                    let tgtOff = tgtKey.tgtOff;\n                    if ( scroll >= tgtOff ) {\n                        navSwitch.removeClass('active');\n                        tgtSwitch.addClass('active');\n                    } else {\n                        tgtSwitch.removeClass('active');\n                    }\n                }\n            });\n        }\n        $(window).on('load resize',function(){\n            onePageNav('.tf-details-menu-item');\n        });\n\n        var zoomLvl = 5;\n        var zoomChangeEnabled = false;\n        var centerLvl = new google.maps.LatLng(23.8697847, 90.4219536);\n        var markersById = {};\n        var markers = [];\n        var mapChanged = false;\n        var hotelMap;\n\n        const googleMapInit = (mapLocations, mapLat = 23.8697847, mapLng = 90.4219536) => {\n            // Clear existing markers\n            clearMarkers();\n\n            var locations = mapLocations ? JSON.parse(mapLocations) : [];\n\n            if(!hotelMap){\n                hotelMap = new google.maps.Map(document.getElementById(\"tf-hotel-archive-map\"), {\n                    zoom: zoomLvl,\n                    minZoom: 3,\n                    maxZoom: 18,\n                    center: new google.maps.LatLng(mapLat, mapLng),\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    styles: [\n                        {elementType: 'labels.text.fill', stylers: [{color: '#44348F'}]},\n                    ],\n                    fullscreenControl: false\n                });\n            }\n\n            var infowindow = new google.maps.InfoWindow({\n                maxWidth: 262,\n                disableAutoPan: true,\n            });\n\n            var bounds = new google.maps.LatLngBounds();\n            locations.map(function (location, i) {\n                var marker = new MarkerWithLabel({\n                    position: new google.maps.LatLng(location['lat'], location['lng']),\n                    map: hotelMap,\n                    icon: {\n                        url: document.getElementById('map-marker').dataset.marker,\n                        scaledSize: new google.maps.Size(tf_params.map_marker_width, tf_params.map_marker_height),\n                    },\n                    labelContent: '<div class=\"tf_price_inner\" data-post-id=\"' + location['id'] + '\">' + window.atob(location['price']) + '</div>',\n                    labelAnchor: new google.maps.Point(0, 0),\n                    labelClass: \"tf_map_price\",\n                });\n\n                markersById[location['id']] = marker;\n                markers.push(marker);\n                bounds.extend(marker.position);\n\n                // Define an OverlayView to use the projection for pixel calculation\n                const overlay = new google.maps.OverlayView();\n                overlay.draw = function () {};\n                overlay.setMap(hotelMap);\n\n                google.maps.event.addListener(marker, 'mouseover', function () {\n                    infowindow.setContent(window.atob(location['content']));\n\n                    // Convert LatLng to pixel coordinates\n                    const markerPosition = marker.getPosition();\n                    const markerProjection = overlay.getProjection();\n                    const markerPixel = markerProjection.fromLatLngToDivPixel(markerPosition);\n\n                    // Infowindow dimensions\n                    const infoWindowHeight = 265;\n                    const infoWindowWidth = 262;\n\n                    // Check each edge\n                    const isNearLeftEdge = markerPixel.x <= -120;\n                    const isNearRightEdge = markerPixel.x >= 120;\n                    const isNearTopEdge = (markerPixel.y - (infoWindowHeight+40)) <= -infoWindowHeight;\n\n                    let anchorX = 0.5;\n                    let anchorY = 0;\n\n                    if (isNearLeftEdge) {\n                        anchorX = 0.9;\n                    } else if (isNearRightEdge) {\n                        anchorX = 0.1;\n                    }\n\n                    if (isNearTopEdge) {\n                        anchorY = infoWindowHeight+90\n                    }\n\n                    infowindow.setOptions({\n                        pixelOffset: new google.maps.Size((anchorX - 0.5) * infoWindowWidth, anchorY)\n                    });\n\n                    infowindow.open(hotelMap, marker);\n                });\n\n                // Hide the infowindow on mouse leave\n                google.maps.event.addListener(marker, 'mouseout', function () {\n                    infowindow.close();\n                });\n\n                google.maps.event.addListener(marker, 'click', function () {\n                    window.open(location?.url, '_blank')\n                });\n            });\n\n            // Trigger filter on map drag\n            google.maps.event.addListener(hotelMap, \"dragend\", function () {\n                zoomLvl = hotelMap.getZoom();\n                centerLvl = hotelMap.getCenter();\n                mapChanged = true;\n\n                filterVisibleHotels(hotelMap);\n            });\n\n            google.maps.event.addListener(hotelMap, \"zoom_changed\", function () {\n                if (zoomChangeEnabled) return;\n\n                zoomLvl = hotelMap.getZoom();\n                centerLvl = hotelMap.getCenter();\n                mapChanged = true;\n\n                filterVisibleHotels(hotelMap);\n\n            });\n\n            var listener = google.maps.event.addListener(hotelMap, \"idle\", function() {\n                zoomChangeEnabled = true;\n                if (!mapChanged) {\n                    hotelMap.fitBounds(bounds);\n                    centerLvl = bounds.getCenter();\n                    hotelMap.setCenter(centerLvl);\n\n                } else {\n                    hotelMap.setZoom(zoomLvl);\n                    hotelMap.setCenter({lat: centerLvl.lat(), lng: centerLvl.lng()});\n                    google.maps.event.removeListener(listener);\n                }\n                zoomChangeEnabled = false;\n            });\n        }\n\n        function filterVisibleHotels(map) {\n            var bounds = map.getBounds();\n\n            if (bounds) {\n                var sw = bounds.getSouthWest();\n                var ne = bounds.getNorthEast();\n            }\n\n            makeFilter('', [sw.lat(), sw.lng(), ne.lat(), ne.lng()]);\n        }\n\n        function clearMarkers() {\n            markers.forEach(marker => marker.setMap(null)); // Remove each marker from the map\n            markers = []; // Clear the array to prevent duplication\n        }\n\n        // GOOGLE MAP INITIALIZE\n        var mapLocations = $('#map-datas').html();\n        if ($('#map-datas').length && mapLocations.length) {\n            googleMapInit(mapLocations);\n        }\n\n        /*\n        * Hotel hover effect on map marker\n        * */\n        $(document).on('mouseover', '.tf-archive-template__three .tf-archive-hotel', function () {\n            let id = $(this).data('id');\n            $('.tf_map_price .tf_price_inner[data-post-id=\"' + id + '\"]').addClass('active');\n\n            if (markersById[id]) {\n                markersById[id].setAnimation(google.maps.Animation.BOUNCE);\n            }\n        });\n        $(document).on('mouseleave', '.tf-archive-template__three .tf-archive-hotel', function () {\n            let id = $(this).data('id');\n            $('.tf_map_price .tf_price_inner[data-post-id=\"' + id + '\"]').removeClass('active');\n\n            if (markersById[id]) {\n                markersById[id].setAnimation(null);\n            }\n        });\n\n        /*\n        * Map toggle btn for mobile\n        */\n        $(document).on('click', '.tf-archive-template__three .tf-mobile-map-btn', function (e) {\n            e.preventDefault();\n            $('.tf-archive-template__three .tf-details-right').css('display', 'block');\n        });\n        $(document).on('click', '.tf-archive-template__three .tf-mobile-list-btn', function (e) {\n            e.preventDefault();\n            $('.tf-archive-template__three .tf-details-right').css('display', 'none');\n        });\n\n        /*\n        * Map Popup\n        * */\n        $(document).on('click', '.tf-map-modal-btn', function (e) {\n            e.preventDefault();\n\n            //template 4\n            if ($(\".tf-archive-filter-sidebar\").length > 0) {\n                $(\".tf-archive-filter-sidebar\").removeClass('tf-show');\n            }\n\n            $.fancybox.open({\n                src: '.tf-archive-details-wrap',\n                type: 'inline',\n                touch: false,\n                afterClose: function () {\n                    $('.tf_template_4_hotel_archive .tf-archive-details-wrap, .tf_template_4_tour_archive .tf-archive-details-wrap, .tf_template_4_apartment_archive .tf-archive-details-wrap').css('display', 'block');\n                },\n                afterShow: function(instance, current) {\n                    // Add a class to the parent fancybox container\n                    instance.$refs.container.addClass('tf-archive-details-fancy');\n\n                    if($('.tf-archive-details-wrap .tf-archive-hotels').length) {\n                        adjustPadding();\n                        $(window).on('resize', adjustPadding);\n                    }\n\n                    if($('#tf_map_popup_sidebar').length) {\n                        adjustSidebarPadding();\n                        $(window).on('resize', adjustSidebarPadding);\n                    }\n                }\n            });\n        });\n    });\n\n})(jQuery, window);\n\n/**\n * Horizontal Search Form Tab Control\n */\nfunction tfOpenForm(evt, formName) {\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(\"tf-tabcontent\");\n    for (i = 0; i < tabcontent.length; i++) {\n        tabcontent[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(\"tf-tablinks\");\n    for (i = 0; i < tablinks.length; i++) {\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    document.getElementById(formName).style.display = \"block\";\n    document.getElementById(formName).style.transition = \"all 0.2s\";\n    evt.target.className += \" active\";\n}\n\n/**\n * Show review form on popup\n */\nfunction tf_load_rating() {\n    jQuery('#commentform').show();\n}\n\n\n/**\n * Update Max Width of Search Field\n */\nfunction updateMaxWidth(inputField) {\n    let inputValue = inputField.val().trim();\n    let characterCount = inputValue.length;\n\n    // Get the window width\n    let windowWidth = jQuery(window).width();\n    \n    // Adjust max width based on window width\n    let newMaxWidth;\n    if (windowWidth < 1025) {\n        newMaxWidth = 100 + (Math.max(characterCount - 1, 0) * 20); // Mobile: 100px + 20px per character\n    } else {\n        newMaxWidth = 132 + (Math.max(characterCount - 1, 0) * 40); // Desktop: 132px + 40px per character\n    }\n\n    // Apply the new max-width\n    inputField.closest(\".tf-search__form__field.tf-mx-width\").css(\"max-width\", newMaxWidth + \"px\");\n}\n\n// Input change\njQuery(\".tf-search__form__field__input\").on(\"input\", function() {\n    updateMaxWidth(jQuery(this));\n});\n\n// Increment button\njQuery(\".acr-inc\").on(\"click\", function() {\n    let inputField = jQuery(\".tf-search__form__field__input\");\n    inputField.trigger(\"input\");\n});\n\n// Decrement button\njQuery(\".acr-dec\").on(\"click\", function() {\n    let inputField = jQuery(\".tf-search__form__field__input\");\n    inputField.trigger(\"input\");\n});\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/tourfic.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./sass/app/js/free/apartment.js"]();
/******/ 	__webpack_modules__["./sass/app/js/free/car.js"]();
/******/ 	__webpack_modules__["./sass/app/js/free/hotel.js"]();
/******/ 	__webpack_modules__["./sass/app/js/free/tour.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./sass/app/js/free/tourfic.js"]();
/******/ 	
/******/ })()
;