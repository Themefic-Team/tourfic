/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./sass/app/js/free/tourfic.js":
/*!*************************************!*\
  !*** ./sass/app/js/free/tourfic.js ***!
  \*************************************/
/***/ (() => {

eval("(function ($, win) {\r\n    $(document).ready(function () {\r\n\r\n        // Create an instance of Notyf\r\n        const notyf = new Notyf({\r\n            ripple: true,\r\n            duration: 3000,\r\n            dismissable: true,\r\n            position: {\r\n                x: 'right',\r\n                y: 'bottom',\r\n            },\r\n        });\r\n\r\n        //###############################\r\n        //         Hotel                #\r\n        //###############################\r\n\r\n        /**\r\n         * Hotel room availability\r\n         *\r\n         * Ajax room filter\r\n         */\r\n        const tfRoomFilter = () => {\r\n            // Child & Child Type\r\n            var adult_field_type = $(\"#adults\").attr('type');\r\n            var child_field_type = $(\"#children\").attr('type');\r\n\r\n            if ($.trim($('input[name=check-in-out-date]').val()) == '') {\r\n\r\n                if ($('#tf-required').length === 0) {\r\n                    $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\"><b>' + tf_params.field_required + '</b></span>');\r\n                }\r\n                return;\r\n            } else {\r\n                if ($('#tf-required').length === 1) {\r\n                    $('.tf_booking-dates .tf_label-row .required').html('');\r\n                }\r\n            }\r\n            //get the checked values of features\r\n            var features = [];\r\n            $('.tf-room-checkbox :checkbox:checked').each(function (i) {\r\n                features[i] = $(this).val();\r\n            });\r\n            var tf_room_avail_nonce = $(\"input[name=tf_room_avail_nonce]\").val();\r\n            var post_id = $('input[name=post_id]').val();\r\n            if (adult_field_type == \"number\") {\r\n                var adult = $('#adults').val();\r\n            } else {\r\n                var adult = $('select[name=adults] option').filter(':selected').val();\r\n            }\r\n            if (child_field_type == \"number\") {\r\n                var child = $('#children').val();\r\n            } else {\r\n                var child = $('select[name=children] option').filter(':selected').val();\r\n            }\r\n            //var features = $('input[name=features]').filter(':checked').val();\r\n            var children_ages = $('input[name=children_ages]').val();\r\n            var check_in_out = $('input[name=check-in-out-date]').val();\r\n\r\n            var data = {\r\n                action: 'tf_room_availability',\r\n                tf_room_avail_nonce: tf_room_avail_nonce,\r\n                post_id: post_id,\r\n                adult: adult,\r\n                child: child,\r\n                features: features,\r\n                children_ages: children_ages,\r\n                check_in_out: check_in_out,\r\n            };\r\n\r\n            jQuery.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'post',\r\n                data: data,\r\n                beforeSend: function () {\r\n                    $(\"#tf-single-hotel-avail .btn-primary.tf-submit\").addClass('tf-btn-booking-loading');\r\n                },\r\n                success: function (data) {\r\n                    $('html, body').animate({\r\n                        scrollTop: $(\"#rooms\").offset().top\r\n                    }, 500);\r\n                    $(\"#rooms\").html(data);\r\n                    $('.tf-room-filter').show();\r\n                    $(\"#tf-single-hotel-avail .btn-primary.tf-submit\").removeClass('tf-btn-booking-loading');\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                }\r\n            });\r\n        }\r\n\r\n        $(document).on('click', '#tf-single-hotel-avail .tf-submit', function (e) {\r\n            e.preventDefault();\r\n            tfRoomFilter();\r\n\r\n        });\r\n\r\n        $(document).on('change', '.tf-room-checkbox :checkbox', function () {\r\n            tfRoomFilter();\r\n        });\r\n        /**\r\n         * Click to go back to hotel availability form\r\n         */\r\n        $(document).on('click', '.hotel-room-availability', function (e) {\r\n            e.preventDefault();\r\n\r\n            $('html, body').animate({\r\n                scrollTop: $(\"#tf-single-hotel-avail\").offset().top\r\n            }, 500);\r\n        });\r\n\r\n        /**\r\n         * Ajax hotel booking\r\n         *\r\n         * tf_hotel_booking\r\n         */\r\n        $(document).on('click', '.hotel-room-book', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n\r\n            var tf_room_booking_nonce = $(\"input[name=tf_room_booking_nonce]\").val();\r\n            var post_id = $('input[name=post_id]').val();\r\n            if ($(this).closest('.room-submit-wrap').find('input[name=room_id]').val()) {\r\n                var room_id = $(this).closest('.room-submit-wrap').find('input[name=room_id]').val();\r\n            } else {\r\n                var room_id = $(\"#hotel_roomid\").val();\r\n            }\r\n            if ($(this).closest('.room-submit-wrap').find('input[name=unique_id]').val()) {\r\n                var unique_id = $(this).closest('.room-submit-wrap').find('input[name=unique_id]').val();\r\n            } else {\r\n                var unique_id = $(\"#hotel_room_uniqueid\").val();\r\n            }\r\n            var location = $('input[name=place]').val();\r\n            var adult = $('input[name=adult]').val();\r\n            var child = $('input[name=child]').val();\r\n            var children_ages = $('input[name=children_ages]').val();\r\n            var check_in_date = $('input[name=check_in_date]').val();\r\n            var check_out_date = $('input[name=check_out_date]').val();\r\n            if ($(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val()) {\r\n                var room = $(this).closest('.reserve').find('select[name=hotel_room_selected] option').filter(':selected').val();\r\n                var deposit = $(this).closest('.room-submit-wrap').find('input[name=make_deposit]').is(':checked');\r\n            } else {\r\n                var room = $(\"#hotel_room_number\").val();\r\n                var deposit = $(\"#hotel_room_depo\").val();\r\n            }\r\n            var airport_service = $('.fancybox-slide #airport-service').val();\r\n\r\n            var data = {\r\n                action: 'tf_hotel_booking',\r\n                tf_room_booking_nonce: tf_room_booking_nonce,\r\n                post_id: post_id,\r\n                room_id: room_id,\r\n                unique_id: unique_id,\r\n                location: location,\r\n                adult: adult,\r\n                child: child,\r\n                children_ages: children_ages,\r\n                check_in_date: check_in_date,\r\n                check_out_date: check_out_date,\r\n                room: room,\r\n                deposit: deposit,\r\n                airport_service: airport_service\r\n            };\r\n\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n\r\n                    $('.tf_notice_wrapper').html(\"\").hide();\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status == 'error') {\r\n\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        return false;\r\n                    } else {\r\n\r\n                        if (response.redirect_to) {\r\n                            window.location.replace(response.redirect_to);\r\n                        } else {\r\n                            jQuery(document.body).trigger('added_to_cart');\r\n                        }\r\n\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n\r\n        });\r\n\r\n        /**\r\n         * Single hotel Gallery\r\n         *\r\n         * Fancybox\r\n         */\r\n        $('[data-fancybox=\"hotel-gallery\"]').fancybox({\r\n            loop: true,\r\n            buttons: [\r\n                \"zoom\",\r\n                \"slideShow\",\r\n                \"fullScreen\",\r\n                \"close\"\r\n            ],\r\n            hash: false,\r\n        });\r\n\r\n        /**\r\n         * Hotel slider\r\n         *\r\n         * Slick\r\n         */\r\n\r\n        var sbp = $('.swiper-button-prev'),\r\n            sbn = $('.swiper-button-next');\r\n\r\n        $('.single-slider-wrapper .tf_slider-for').slick({\r\n            slide: '.slick-slide-item',\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            arrows: false,\r\n            fade: false,\r\n            dots: false,\r\n            centerMode: false,\r\n            variableWidth: false,\r\n            adaptiveHeight: true\r\n        });\r\n\r\n        sbp.on(\"click\", function () {\r\n            $(this).closest(\".single-slider-wrapper\").find('.tf_slider-for').slick('slickPrev');\r\n        });\r\n\r\n        sbn.on(\"click\", function () {\r\n            $(this).closest(\".single-slider-wrapper\").find('.tf_slider-for').slick('slickNext');\r\n        });\r\n\r\n        /**\r\n         * Recent Hotel - Tour\r\n         *\r\n         * Slick\r\n         */\r\n\r\n\r\n        /**\r\n         * Scroll to room reserve table\r\n         */\r\n        $(\".reserve-button a\").click(function () {\r\n            $('html, body').animate({\r\n                scrollTop: $(\"#rooms\").offset().top - 32\r\n            }, 1000);\r\n        });\r\n\r\n        //###############################\r\n        //         Tour                 #\r\n        //###############################\r\n\r\n        /**\r\n         * Scroll to Tour Review Section\r\n         */\r\n        $(\".tf-top-review a\").click(function () {\r\n            $('html, body').animate({\r\n                scrollTop: $(\"#tf-review\").offset().top - 32\r\n            }, 1000);\r\n        });\r\n\r\n        /**\r\n         * Scroll to Map Section\r\n         */\r\n        $(\".tf-map-link a\").click(function () {\r\n            $('html, body').animate({\r\n                scrollTop: $(\"#tour-map\").offset().top - 32\r\n            }, 1000);\r\n        });\r\n\r\n        /**\r\n         * Ajax tour booking\r\n         *\r\n         * tf_tours_booking\r\n         */\r\n        $(document).on('submit', 'form.tf_tours_booking', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n\r\n            var formData = new FormData(this);\r\n            formData.append('action', 'tf_tours_booking');\r\n\r\n\r\n            // Tour Extra\r\n            var tour_extra_total = [];\r\n            jQuery('.tour-extra-single input:checkbox:checked').each(function () {\r\n                tour_extra_total.push(jQuery(this).val());\r\n            });\r\n            formData.append('tour_extra', tour_extra_total);\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n                    $('#tour_room_details_loader').show();\r\n                    $('.tf-notice-wrapper').html(\"\").hide();\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if(response.without_payment == 'false'){\r\n                        if (response.status == 'error') {\r\n                            $.fancybox.close();\r\n                            if (response.errors) {\r\n                                response.errors.forEach(function (text) {\r\n                                    notyf.error(text);\r\n                                });\r\n                            }\r\n\r\n                            return false;\r\n                        } else {\r\n\r\n                            if (response.redirect_to) {\r\n                                window.location.replace(response.redirect_to);\r\n                            } else {\r\n                                jQuery(document.body).trigger('added_to_cart');\r\n                            }\r\n\r\n                        }\r\n                    }else{\r\n                        $('#tour_room_details_loader').hide();\r\n                        $('.tf-withoutpayment-booking').removeClass('show');\r\n                        $('.tf-withoutpayment-booking-confirm').addClass('show');\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Single Tour Gallery\r\n         *\r\n         * Fancybox\r\n         */\r\n        $('[data-fancybox=\"tour-gallery\"]').fancybox({\r\n            loop: true,\r\n            buttons: [\r\n                \"zoom\",\r\n                \"slideShow\",\r\n                \"fullScreen\",\r\n                \"close\"\r\n            ],\r\n            hash: false,\r\n        });\r\n\r\n        /**\r\n         * Itinerary gallery init\r\n         */\r\n        $('.tf-itinerary-gallery').fancybox({\r\n            buttons: [\r\n                \"zoom\",\r\n                \"slideShow\",\r\n                \"fullScreen\",\r\n                \"close\"\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Single Tour price change\r\n         *\r\n         * adult, child, infant\r\n         */\r\n        $(document).on('click', '.tf-single-tour-pricing .tf-price-tab li', function () {\r\n            var t = $(this).attr('id');\r\n\r\n            $(this).addClass('active').siblings().removeClass('active');\r\n            $('.tf-price').addClass('tf-d-n');\r\n            $('.' + t + '-price').removeClass('tf-d-n');\r\n        });\r\n        //first li click\r\n        $('.tf-single-tour-pricing .tf-price-tab li:first-child').trigger('click');\r\n\r\n        /**\r\n         * Single Tour price change Template 1\r\n         *\r\n         * adult, child, infant\r\n         */\r\n        $(document).on('click', '.tf-trip-person-info ul li', function () {\r\n            var t = $(this).attr('data');\r\n\r\n            $(this).addClass('active').siblings().removeClass('active');\r\n            $('.tf-trip-pricing').removeClass('active');\r\n            $('.tf-' + t).addClass('active');\r\n        });\r\n\r\n        //###############################\r\n        //     Apartment                #\r\n        //###############################\r\n\r\n        /**\r\n         * Ajax apartment booking\r\n         * @author Foysal\r\n         */\r\n        $(document).on('submit', 'form#tf-apartment-booking', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n\r\n            var formData = new FormData(this);\r\n            formData.append('action', 'tf_apartment_booking');\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n\r\n                    $('.tf-notice-wrapper').html(\"\").hide();\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status === 'error') {\r\n                        $.fancybox.close();\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        return false;\r\n                    } else {\r\n\r\n                        if (response.redirect_to) {\r\n                            window.location.replace(response.redirect_to);\r\n                        } else {\r\n                            jQuery(document.body).trigger('added_to_cart');\r\n                        }\r\n\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Apartment location autocomplete\r\n         * @author Foysal\r\n         */\r\n        var apartment_location_input = document.getElementById(\"tf-apartment-location\");\r\n        var apartment_locations = tf_params.apartment_locations;\r\n        if (apartment_location_input) {\r\n            tourfic_autocomplete(apartment_location_input, apartment_locations);\r\n        }\r\n\r\n        /**\r\n         * Apartment Min and Max Range\r\n         * @author Foysal\r\n         */\r\n        if (tf_params.tf_apartment_min_price >= 0 && tf_params.tf_apartment_max_price > 0) {\r\n            $('.tf-apartment-filter-range').alRangeSlider({\r\n                range: {\r\n                    min: parseInt(tf_params.tf_apartment_min_price),\r\n                    max: parseInt(tf_params.tf_apartment_max_price),\r\n                    step: 1\r\n                },\r\n                initialSelectedValues: {\r\n                    from: parseInt(tf_params.tf_apartment_min_price),\r\n                    to: parseInt(tf_params.tf_apartment_max_price)\r\n                },\r\n                grid: false,\r\n                theme: \"dark\",\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Apartment highlights slider\r\n         * @author Foysal\r\n         */\r\n        $('.tf-apt-highlights-slider').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: false,\r\n            autoplaySpeed: 3000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Apartment room slider\r\n         * @author Foysal\r\n         */\r\n        $('.tf-apartment-room-slider').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: false,\r\n            autoplaySpeed: 3000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Related Apartment slider\r\n         * @author Foysal\r\n         */\r\n        $('.tf-related-apartment-slider').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: true,\r\n            autoplaySpeed: 3000,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        //###############################\r\n        //        Search                #\r\n        //###############################\r\n\r\n        /**\r\n         * Ajax Search Result\r\n         *\r\n         * by search form submit\r\n         *\r\n         * by feature filter\r\n         */\r\n\r\n        var filter_xhr;\r\n        // Creating a function for reuse this filter in any where we needs.\r\n        const makeFilter = () => {\r\n            var dest = $('#tf-place').val();\r\n            var adults = $('#adults').val();\r\n            var room = $('#room').val();\r\n            var children = $('#children').val();\r\n            var infant = $('#infant').val();\r\n            var checked = $('#check-in-out-date').val();\r\n            var startprice = $('.widget_tf_price_filters input[name=\"from\"]').val();\r\n            var endprice = $('.widget_tf_price_filters input[name=\"to\"]').val();\r\n            var tf_author = $('#tf_author').val();\r\n            // split date range into dates\r\n            var checkedArr = checked.split(' - ');\r\n            var checkin = checkedArr[0];\r\n            var checkout = checkedArr[1];\r\n            var posttype = $('.tf-post-type').val();\r\n\r\n            if ($.trim(checkin) === '' && tf_params.date_hotel_search && posttype === 'tf_hotel') {\r\n\r\n                if ($('#tf-required').length === 0) {\r\n                    $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if ($.trim(checkin) === '' && tf_params.date_tour_search && posttype === 'tf_tours') {\r\n\r\n                if ($('#tf-required').length === 0) {\r\n                    $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if ($.trim(checkin) === '' && tf_params.date_apartment_search && posttype === 'tf_apartment') {\r\n\r\n                if ($('#tf-required').length === 0) {\r\n                    $('.tf_booking-dates .tf_label-row').append('<span id=\"tf-required\" class=\"required\" style=\"color:white;\"><b>' + tf_params.field_required + '</b></span>');\r\n                }\r\n                return;\r\n            }\r\n\r\n            let filters = termIdsByFeildName('tf_filters');\r\n            let tfHotelTypes = termIdsByFeildName('tf_hotel_types');\r\n            let features = termIdsByFeildName('tf_features');\r\n            let tour_features = termIdsByFeildName('tour_features');\r\n            let attractions = termIdsByFeildName('tf_attractions');\r\n            let activities = termIdsByFeildName('tf_activities');\r\n            let tfTourTypes = termIdsByFeildName('tf_tour_types');\r\n            let tfApartmentFeatures = termIdsByFeildName('tf_apartment_features');\r\n            let tfApartmentTypes = termIdsByFeildName('tf_apartment_types');\r\n\r\n            var formData = new FormData();\r\n            formData.append('action', 'tf_trigger_filter');\r\n            formData.append('type', posttype);\r\n            formData.append('dest', dest);\r\n            formData.append('adults', adults);\r\n            formData.append('room', room);\r\n            formData.append('children', children);\r\n            formData.append('infant', infant);\r\n            formData.append('checkin', checkin);\r\n            formData.append('checkout', checkout);\r\n            formData.append('filters', filters);\r\n            formData.append('features', features);\r\n            formData.append('tf_hotel_types', tfHotelTypes);\r\n            formData.append('tour_features', tour_features);\r\n            formData.append('attractions', attractions);\r\n            formData.append('activities', activities);\r\n            formData.append('tf_tour_types', tfTourTypes);\r\n            formData.append('tf_apartment_features', tfApartmentFeatures);\r\n            formData.append('tf_apartment_types', tfApartmentTypes);\r\n            formData.append('checked', checked);\r\n            if (startprice) {\r\n                formData.append('startprice', startprice);\r\n            }\r\n            if (endprice) {\r\n                formData.append('endprice', endprice);\r\n            }\r\n            if (tf_author) {\r\n                formData.append('tf_author', tf_author);\r\n            }\r\n            // abort previous request\r\n            if (filter_xhr && filter_xhr.readyState != 4) {\r\n                filter_xhr.abort();\r\n            }\r\n\r\n\r\n            //var pagination_url = '/?place=' + dest + '&adults=' + adults + '&children=' + children + '&type=' + posttype;\r\n            //formData.append('pagination_url', pagination_url);\r\n            filter_xhr = $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $('.archive_ajax_result').block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n                    $('#tf_ajax_searchresult_loader').show();\r\n                    if ($.trim(checkin) !== '') {\r\n                        $('.tf_booking-dates .tf_label-row').find('#tf-required').remove();\r\n                    }\r\n                },\r\n                complete: function (data) {\r\n                    $('.archive_ajax_result').unblock();\r\n                    $('#tf_ajax_searchresult_loader').hide();\r\n\r\n                    // total posts 0 if not found by @hena\r\n                    if ($('.tf-nothing-found')[0]) {\r\n                        $('.tf_posts_navigation').hide();\r\n                        var foundPosts = $('.tf-nothing-found').data('post-count');\r\n                        $('.tf-total-results').find('span').html(foundPosts);\r\n                    } else {\r\n                        $('.tf_posts_navigation').show();\r\n                        var postsCount = $('.tf-posts-count').html();\r\n                        $('.tf-total-results').find('span').html(postsCount);\r\n                    }\r\n\r\n                },\r\n                success: function (data, e) {\r\n                    $('.archive_ajax_result').unblock();\r\n                    $('#tf_ajax_searchresult_loader').hide();\r\n                    $('.archive_ajax_result').html(data);\r\n                    // @KK show notice in every success request\r\n                    notyf.success(tf_params.ajax_result_success);\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        };\r\n\r\n        // Search Result Ajax page number\r\n        function tf_page_pagination_number(element) {\r\n            element.find('span').remove();\r\n            return parseInt(element.html());\r\n        }\r\n\r\n        // Search Result Ajax pagination\r\n        $(document).on('click', '.tf_posts_ajax_navigation a.page-numbers', function (e) {\r\n            e.preventDefault();\r\n            page = tf_page_pagination_number($(this).clone());\r\n            PaginationmakeFilter(page);\r\n        });\r\n\r\n        // Creating a function for reuse this filter in any where we needs.\r\n        const PaginationmakeFilter = (page) => {\r\n            var dest = $('#tf-place').val();\r\n            var page = page;\r\n            var adults = $('#adults').val();\r\n            var room = $('#room').val();\r\n            var children = $('#children').val();\r\n            var checked = $('#check-in-out-date').val();\r\n            var startprice = $('.widget_tf_price_filters input[name=\"from\"]').val();\r\n            var endprice = $('.widget_tf_price_filters input[name=\"to\"]').val();\r\n            var tf_author = $('#tf_author').val();\r\n            // split date range into dates\r\n            var checkedArr = checked.split(' - ');\r\n            var checkin = checkedArr[0];\r\n            var checkout = checkedArr[1];\r\n            var posttype = $('.tf-post-type').val();\r\n\r\n            let filters = termIdsByFeildName('tf_filters');\r\n            let tfHotelTypes = termIdsByFeildName('tf_hotel_types');\r\n            let features = termIdsByFeildName('tf_features');\r\n            let tour_features = termIdsByFeildName('tour_features');\r\n            let attractions = termIdsByFeildName('tf_attractions');\r\n            let activities = termIdsByFeildName('tf_activities');\r\n            let tfTourTypes = termIdsByFeildName('tf_tour_types');\r\n            let tfApartmentFeatures = termIdsByFeildName('tf_apartment_features');\r\n            let tfApartmentTypes = termIdsByFeildName('tf_apartment_types');\r\n\r\n            var formData = new FormData();\r\n            formData.append('action', 'tf_trigger_filter');\r\n            formData.append('type', posttype);\r\n            formData.append('page', page);\r\n            formData.append('dest', dest);\r\n            formData.append('adults', adults);\r\n            formData.append('room', room);\r\n            formData.append('children', children);\r\n            formData.append('checkin', checkin);\r\n            formData.append('checkout', checkout);\r\n            formData.append('filters', filters);\r\n            formData.append('tf_hotel_types', tfHotelTypes);\r\n            formData.append('features', features);\r\n            formData.append('tour_features', tour_features);\r\n            formData.append('attractions', attractions);\r\n            formData.append('activities', activities);\r\n            formData.append('tf_tour_types', tfTourTypes);\r\n            formData.append('tf_apartment_features', tfApartmentFeatures);\r\n            formData.append('tf_apartment_types', tfApartmentTypes);\r\n            formData.append('checked', checked);\r\n            if (startprice) {\r\n                formData.append('startprice', startprice);\r\n            }\r\n            if (endprice) {\r\n                formData.append('endprice', endprice);\r\n            }\r\n            if (tf_author) {\r\n                formData.append('tf_author', tf_author);\r\n            }\r\n            // abort previous request\r\n            if (filter_xhr && filter_xhr.readyState != 4) {\r\n                filter_xhr.abort();\r\n            }\r\n\r\n            filter_xhr = $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $('.archive_ajax_result').block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n\r\n                    if ($.trim(checkin) !== '') {\r\n                        $('.tf_booking-dates .tf_label-row').find('#tf-required').remove();\r\n                    }\r\n                },\r\n                complete: function (data) {\r\n                    $('.archive_ajax_result').unblock();\r\n\r\n                    // total posts 0 if not found by @hena\r\n                    if ($('.tf-nothing-found')[0]) {\r\n                        $('.tf_posts_navigation').hide();\r\n                        var foundPosts = $('.tf-nothing-found').data('post-count');\r\n                        $('.tf-total-results').find('span').html(foundPosts);\r\n                    } else {\r\n                        $('.tf_posts_navigation').show();\r\n                        var postsCount = $('.tf-posts-count').html();\r\n                        $('.tf-total-results').find('span').html(postsCount);\r\n                    }\r\n\r\n                },\r\n                success: function (data, e) {\r\n                    $('.archive_ajax_result').unblock();\r\n                    $('.archive_ajax_result').html(data);\r\n                    // @KK show notice in every success request\r\n                    notyf.success(tf_params.ajax_result_success);\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        };\r\n\r\n        // Look for submission and change on filter widgets\r\n        $(document).on('submit', '#tf-widget-booking-search', function (e) {\r\n            e.preventDefault();\r\n            makeFilter()\r\n        });\r\n        $(document).on('change', '[name*=tf_filters],[name*=tf_hotel_types],[name*=tf_features],[name*=tour_features],[name*=tf_attractions],[name*=tf_activities],[name*=tf_tour_types],[name*=tf_apartment_features],[name*=tf_apartment_types]', function () {\r\n            makeFilter();\r\n        })\r\n\r\n        // Archive Page Filter\r\n        $(document).on('submit', '.tf_archive_search_result', function (e) {\r\n            e.preventDefault();\r\n            makeFilter()\r\n        });\r\n\r\n        /*\r\n        * Get term ids by field name\r\n        * @auther Foysal\r\n        */\r\n        const termIdsByFeildName = (fieldName) => {\r\n            let termIds = [];\r\n            $(`[name*=${fieldName}]`).each(function () {\r\n                if ($(this).is(':checked')) {\r\n                    termIds.push($(this).val());\r\n                }\r\n            });\r\n            return termIds.join();\r\n        }\r\n\r\n        //###############################\r\n        //        Common Functions      #\r\n        //###############################\r\n\r\n        /**\r\n         * Rating bar\r\n         */\r\n        $.fn.inViewport = function (cb) {\r\n            return this.each(function (i, el) {\r\n                function visPx() {\r\n                    var H = $(this).height(),\r\n                        r = el.getBoundingClientRect(), t = r.top, b = r.bottom;\r\n                    return cb.call(el, Math.max(0, t > 0 ? H - t : (b < H ? b : H)));\r\n                }\r\n\r\n                visPx();\r\n                $(win).on(\"resize scroll\", visPx);\r\n            });\r\n        };\r\n\r\n        $(window).load(function () {\r\n            // Trigger Animation\r\n            jQuery('[data-width]').each(function () {\r\n                var $this = jQuery(this);\r\n                var width = $this.attr('data-width');\r\n\r\n                $this.inViewport(function (px) {\r\n                    if (px > 0) {\r\n                        $this.css('width', +width + '%');\r\n                    } else {\r\n                        $this.css('width', '0%');\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Full Width JS\r\n         */\r\n        function fullwidthInit(selector) {\r\n            function fullWidth(selector) {\r\n                $(selector).each(function () {\r\n                    $(this).width(\"100%\").css({marginLeft: \"-0px\"});\r\n\r\n                    var window_width = $(window).width();\r\n\r\n                    var left_margin = \"-\" + $(this).offset().left + \"px\";\r\n\r\n                    $(this).width(window_width).css({marginLeft: left_margin});\r\n                });\r\n            }\r\n\r\n            $(window).on(\"resize load\", function () {\r\n                fullWidth(selector);\r\n            });\r\n        }\r\n\r\n\r\n        /**\r\n         * Share buttons\r\n         */\r\n        // Toggle share buttons\r\n        $('.share-toggle[data-toggle=\"true\"]').click(function (e) {\r\n            e.preventDefault();\r\n            var target = $(this).attr('href');\r\n            $(target).slideToggle('fast');\r\n        });\r\n\r\n        // Copy button\r\n        $('button#share_link_button').click(function () {\r\n\r\n            $(this).addClass('copied');\r\n            setTimeout(function () {\r\n                $('button#share_link_button').removeClass('copied');\r\n            }, 3000);\r\n            $(this).parent().find(\"#share_link_input\").select();\r\n            document.execCommand(\"copy\");\r\n        });\r\n\r\n\r\n        /**\r\n         * Related Tour\r\n         *\r\n         * Slick\r\n         */\r\n        $('.tf-slider-items-wrapper,.tf-slider-activated').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            //autoplay: true,\r\n            autoplaySpeed: 2000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Customer Reviews\r\n         *\r\n         * Slick\r\n         */\r\n        $('.tf-review-items-wrapper').slick({\r\n            dots: true,\r\n            arrows: false,\r\n            infinite: true,\r\n            speed: 300,\r\n            autoplay: true,\r\n            autoplaySpeed: 2000,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        /**\r\n         * Wishlist Functionality\r\n         *\r\n         */\r\n        /* get wishlist from localstorage  */\r\n        const wishKey = 'wishlist_item';\r\n        const getWish = () => {\r\n            let userLists = localStorage.getItem(wishKey);\r\n            // if list is null then init list else make array from json string\r\n            return (userLists === null) ? [] : JSON.parse(userLists);\r\n        }\r\n\r\n        /* store item in wishlist for loggedin and visitor */\r\n        const addWish = item => {\r\n            let userLists = getWish()\r\n            // Look if item is not already is in list\r\n            if (userLists.filter(i => i.post == item.post).length === 0) {\r\n                // push to list\r\n                userLists.push(item)\r\n                // save list\r\n                localStorage.setItem(wishKey, JSON.stringify(userLists));\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        /* get all wishlist items */\r\n        const getAllWish = () => {\r\n            let nodes = $('.tf-wishlist-holder');\r\n            $.each(nodes, function (index, element) {\r\n                let type = $(element).data('type');\r\n                type = type ? type.split(',') : undefined;\r\n                let userLists = getWish();\r\n                if (type !== undefined) userLists = userLists.filter(e => type.includes(e.type));\r\n                let ids = userLists.map(e => e.post);\r\n                let data = {\r\n                    nonce: $(element).data('nonce'),\r\n                    action: 'tf_generate_table',\r\n                    ids\r\n                }\r\n                $.post(tf_params.ajax_url, data,\r\n                    function (data) {\r\n                        if (data.success) {\r\n                            $(element).html(data.data);\r\n                        }\r\n                    },\r\n                );\r\n            });\r\n\r\n\r\n        }\r\n        /* delete item from wishlist */\r\n        const removeWish = id => {\r\n            let userLists = getWish()\r\n            let index = userLists.findIndex(x => x.post == id);\r\n            console.log(index, id, userLists);\r\n            if (index >= 0) {\r\n                userLists.splice(index, 1)\r\n                console.log(userLists);\r\n                localStorage.setItem(wishKey, JSON.stringify(userLists));\r\n                if (tf_params.single != '1') getAllWish()\r\n                return true;\r\n            } else return false;\r\n\r\n        }\r\n\r\n        /* toggle icon for the wish list */\r\n        const wishIconToggleForGuest = () => {\r\n            if (!$(document).hasClass('logged-in') && $(document).find('.add-wishlist')) {\r\n                let targetNode = $('.add-wishlist');\r\n                let id = targetNode.data('id');\r\n                let userLists = getWish()\r\n                var index = userLists.findIndex(x => x.post == id);\r\n                if (index >= 0) {\r\n                    wishIconFill(targetNode);\r\n                } else {\r\n                    wishIcon(targetNode);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* fill icon class */\r\n        const wishIconFill = targetNode => {\r\n            targetNode.addClass('remove-wishlist');\r\n            targetNode.addClass('fa-heart');\r\n            targetNode.addClass('tf-text-red');\r\n            targetNode.removeClass('fa-heart-o');\r\n            targetNode.removeClass('add-wishlist');\r\n\r\n\r\n        }\r\n        /* blank icon */\r\n        const wishIcon = targetNode => {\r\n            targetNode.addClass('add-wishlist');\r\n            targetNode.addClass('fa-heart-o');\r\n            targetNode.removeClass('fa-heart');\r\n            targetNode.removeClass('tf-text-red');\r\n            targetNode.removeClass('remove-wishlist');\r\n        }\r\n        /* send request to wp-admin for storing request */\r\n        $(document).on('click', '.add-wishlist', function () {\r\n\r\n            let targetNode = $('.add-wishlist');\r\n            let data = {\r\n                type: targetNode.data('type'),\r\n                post: targetNode.data('id'),\r\n            }\r\n            let wishPageTitle = targetNode.data('page-title');\r\n            let wishPageUrl = targetNode.data('page-url');\r\n            let wishlistpage = wishPageUrl !== undefined ? '<a class=\"wish-button\" href=\"' + wishPageUrl + '\">' + wishPageTitle + '</a>' : '';\r\n\r\n            /* For logged in user */\r\n            if ($('body').hasClass('logged-in')) {\r\n                data.action = 'tf_add_to_wishlists';\r\n                data.nonce = targetNode.data('nonce');\r\n                $.ajax({\r\n                    type: \"post\",\r\n                    url: tf_params.ajax_url,\r\n                    data: data,\r\n                    beforeSend: function (data) {\r\n                        notyf.success(tf_params.wishlist_add)\r\n                    },\r\n                    success: function (response) {\r\n                        if (response.success) {\r\n                            wishIconFill(targetNode);\r\n                            notyf.success({\r\n                                message: response.data,\r\n                                duration: 4e3\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                /* For guest */\r\n                if (addWish(data) === true) {\r\n                    notyf.success(tf_params.wishlist_add)\r\n                    wishIconFill(targetNode);\r\n                    notyf.success({\r\n                        message: tf_params.wishlist_added,\r\n                        duration: 4e3\r\n                    });\r\n                } else notyf.error(tf_params.wishlist_add_error);\r\n\r\n            }\r\n\r\n            return false;\r\n\r\n        });\r\n        /* populate wishlist table */\r\n        if ($('body').find('.tf-wishlist-holder').length) {\r\n            getAllWish()\r\n        }\r\n        /* trigger remove wish function */\r\n        $(document).on('click', '.remove-wishlist', function () {\r\n            let targetNode = $('.remove-wishlist');\r\n            let id = targetNode.data('id');\r\n            /* For logged in user */\r\n            if ($('body').hasClass('logged-in')) {\r\n                let tableNode = targetNode.closest('table');\r\n                let type = tableNode.data('type');\r\n                let data = {id, action: 'tf_remove_wishlist', type, nonce: targetNode.data('nonce')}\r\n                $.get(tf_params.ajax_url, data,\r\n                    function (data) {\r\n                        if (data.success) {\r\n                            if (tf_params.single != '1') {\r\n                                tableNode.closest('.tf-wishlists').html(data.data);\r\n                            }\r\n                            wishIcon(targetNode);\r\n                            notyf.success(tf_params.wishlist_removed);\r\n                        }\r\n                    }\r\n                );\r\n\r\n            } else {\r\n                /* For guest */\r\n                if (removeWish(id) == true) {\r\n                    wishIcon(targetNode);\r\n                    notyf.success(tf_params.wishlist_removed);\r\n                } else {\r\n                    notyf.error(tf_params.wishlist_remove_error);\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        /* toggle icon for guest */\r\n        wishIconToggleForGuest();\r\n\r\n        //###############################\r\n        //      Reusable Functions      #\r\n        //###############################\r\n\r\n        /*\r\n        * Trourfic autocomplete destination\r\n        */\r\n        function tourfic_autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n            inp.addEventListener(\"input\", function (e) {\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                if (!val) {\r\n                    return false;\r\n                }\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                var $notfound = [];\r\n                /*for each item in the array...*/\r\n                for (const [key, value] of Object.entries(arr)) {\r\n                    if (value.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                        $notfound.push('found');\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + value.substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += value.substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += `<input type='hidden' value=\"${value}\" data-slug='${key}'> `;\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            let source = this.getElementsByTagName(\"input\")[0];\r\n                            console.log(source.dataset.slug);\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = source.value;\r\n                            inp.closest('input').nextElementSibling.value = source.dataset.slug //source.dataset.slug\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n\r\n                    } else {\r\n                        $notfound.push('notfound');\r\n                    }\r\n                }\r\n\r\n                if ($notfound.indexOf('found') == -1) {\r\n                    /*create a DIV element for each matching element:*/\r\n                    b = document.createElement(\"DIV\");\r\n                    /*make the matching letters bold:*/\r\n\r\n                    b.innerHTML += tf_params.no_found;\r\n                    /*insert a input field that will hold the current array item's value:*/\r\n                    b.innerHTML += \"<input type='hidden' value=''>\";\r\n                    /*execute a function when someone clicks on the item value (DIV element):*/\r\n                    b.addEventListener(\"click\", function (e) {\r\n                        /*insert the value for the autocomplete text field:*/\r\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                        /*close the list of autocompleted values,\r\n                        (or any other open lists of autocompleted values:*/\r\n                        closeAllLists();\r\n                    });\r\n                    a.appendChild(b);\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode == 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].click();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt != x[i] && elmnt != inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                closeAllLists(e.target);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Initiate autocomplete on inputs\r\n         */\r\n\r\n            // Hotel location autocomplete\r\n        var hotel_location_input = document.getElementById(\"tf-location\");\r\n        var hotel_locations = tf_params.locations;\r\n        if (hotel_location_input) {\r\n            tourfic_autocomplete(hotel_location_input, hotel_locations);\r\n        }\r\n        // Tour destination autocomplete\r\n        var tour_destination_input = document.getElementById(\"tf-destination\");\r\n        var tour_destinations = tf_params.tour_destinations;\r\n        if (tour_destination_input) {\r\n            tourfic_autocomplete(tour_destination_input, tour_destinations);\r\n        }\r\n\r\n        /**\r\n         * Single tour sticky booking bar position fixed\r\n         */\r\n        $(window).scroll(function () {\r\n            var sticky = $('.tf-tour-booking-wrap'),\r\n                scroll = $(window).scrollTop();\r\n\r\n            if (scroll >= 800) sticky.addClass('tf-tours-fixed');\r\n            else sticky.removeClass('tf-tours-fixed');\r\n        });\r\n\r\n        /**\r\n         * Single tour sticky booking bar - template 1\r\n         * @author Foysal\r\n         */\r\n        if($('.tf-tour-booking-box').length > 0) {\r\n            $(window).scroll(function () {\r\n                let bookingBox = $('.tf-tour-booking-box');\r\n                let bottomBar = $('.tf-bottom-booking-bar');\r\n                let boxOffset = bookingBox.offset().top + bookingBox.outerHeight();\r\n\r\n                var scrollTop = $(window).scrollTop();\r\n\r\n                if (scrollTop > boxOffset) {\r\n                    bottomBar.addClass('active'); // Add your class name here\r\n                } else {\r\n                    bottomBar.removeClass('active'); // Remove the class if scrolling back up\r\n                }\r\n            });\r\n        }\r\n\r\n        $(document).on('click', '.tf-booking-mobile-btn', function (e) {\r\n            e.preventDefault();\r\n            $(this).closest('.tf-bottom-booking-bar').toggleClass('mobile-active');\r\n        });\r\n\r\n        /**\r\n         * Open/close horizontal search form persons panel\r\n         */\r\n        // Adult, Child, Room Selection toggle\r\n        $(document).on('click', '.tf_selectperson-wrap .tf_input-inner,.tf_person-selection-wrap .tf_person-selection-inner', function () {\r\n            $('.tf_acrselection-wrap').slideToggle('fast');\r\n        });\r\n        // Close\r\n        jQuery(document).on(\"click\", function (event) {\r\n            if (!jQuery(event.target).closest(\".tf_selectperson-wrap\").length) {\r\n                jQuery(\".tf_acrselection-wrap\").slideUp(\"fast\");\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Number/text change horizontal search form\r\n         */\r\n        // Number Increment\r\n        $('.acr-inc').on('click', function (e) {\r\n            var input = $(this).parent().find('input');\r\n            var max = input.attr('max') ? input.attr('max') : 999;\r\n            var step = input.attr('step') ? input.attr('step') : 1;\r\n\r\n            if (input.val() < max) {\r\n                input.val(parseInt(input.val()) + parseInt(step)).change();\r\n            }\r\n            // input focus disable\r\n            input.blur();\r\n        });\r\n\r\n        // Number Decrement\r\n        $('.acr-dec').on('click', function (e) {\r\n\r\n            var input = $(this).parent().find('input');\r\n            var min = input.attr('min');\r\n            var step = input.attr('step') ? input.attr('step') : 1;\r\n\r\n            if (input.val() > min) {\r\n                input.val(input.val() - parseInt(step)).change();\r\n            }\r\n        });\r\n\r\n        // Adults change trigger\r\n        $(document).on('change', '#adults', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n\r\n            if (thisVal > 1) {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.adults-text').text(thisVal + \" \" + tf_params.adult);\r\n            } else {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.adults-text').text(thisVal + \" \" + tf_params.adult);\r\n            }\r\n\r\n        });\r\n\r\n        // Children change trigger\r\n        $(document).on('change', '#children', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n\r\n            if (thisVal > 1) {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.child-text').text(thisVal + \" \" + tf_params.children);\r\n            } else {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.child-text').text(thisVal + \" \" + tf_params.children);\r\n            }\r\n\r\n        });\r\n\r\n        // Infant change trigger\r\n        $(document).on('change', '#infant', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n\r\n            if (thisVal > 1) {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.infant-text').text(thisVal + \" \" + tf_params.infant);\r\n            } else {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.infant-text').text(thisVal + \" \" + tf_params.infant);\r\n            }\r\n\r\n        });\r\n\r\n        // Room change trigger\r\n        $(document).on('change', '#room', function () {\r\n            let thisEml = $(this);\r\n            let thisVal = thisEml.val();\r\n\r\n            if (thisVal > 1) {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.room-text').text(thisVal + \" \" + tf_params.room);\r\n            } else {\r\n                thisEml.closest('.tf_selectperson-wrap').find('.room-text').text(thisVal + \" \" + tf_params.room);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Review submit form toggle\r\n         */\r\n        $(document).on('click', '#reply-title', function () {\r\n            var $this = $(this);\r\n            $('#commentform').slideToggle('fast', 'swing', function () {\r\n                $this.parent().toggleClass('active');\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Ask question\r\n         */\r\n        $(document).on('click', '#tf-ask-question-trigger', function (e) {\r\n            e.preventDefault();\r\n            $('#tf-ask-question').fadeIn().find('.response').html(\"\");\r\n        });\r\n\r\n        // Close Ask question\r\n        $(document).on('click', 'span.close-aq', function () {\r\n            $('#tf-ask-question').fadeOut();\r\n        });\r\n\r\n        // Ajax Ask question submit\r\n        $(document).on('submit', 'form#ask-question', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $this = $(this);\r\n\r\n            var formData = new FormData(this);\r\n            formData.append('action', 'tf_ask_question');\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function (data) {\r\n                    $this.block({\r\n                        message: null,\r\n                        overlayCSS: {\r\n                            background: \"#fff\",\r\n                            opacity: .5\r\n                        }\r\n                    });\r\n\r\n                    $this.find('.response').html(tf_params.sending_ques);\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status == 'sent') {\r\n                        $this.find('.response').html(response.msg);\r\n\r\n                        $this.find('[type=\"reset\"]').trigger('click');\r\n                    } else {\r\n                        $this.find('.response').html(response.msg);\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n\r\n        });\r\n\r\n        /**\r\n         * Change archive item\r\n         *\r\n         * Grid/List\r\n         */\r\n        $(document).on('click', '.change-view', function (e) {\r\n            e.preventDefault();\r\n            $('.change-view').removeClass('active');\r\n            $(this).addClass('active');\r\n\r\n            var dataid = $(this).data('id');\r\n            if (dataid == 'grid-view') {\r\n                $('.archive_ajax_result').addClass('tours-grid');\r\n            } else {\r\n                $('.archive_ajax_result').removeClass('tours-grid');\r\n            }\r\n\r\n        });\r\n\r\n        /**\r\n         * Design 1 archive item\r\n         *\r\n         * Grid/List\r\n         */\r\n        $(document).on('click', '.tf-grid-list-layout', function (e) {\r\n            e.preventDefault();\r\n            $('.tf-grid-list-layout').removeClass('active');\r\n            $(this).addClass('active');\r\n\r\n            var dataid = $(this).data('id');\r\n            if (dataid == 'grid-view') {\r\n                $('.tf-item-cards').addClass('tf-layout-grid');\r\n                $('.tf-item-cards').removeClass('tf-layout-list');\r\n            } else {\r\n                $('.tf-item-cards').addClass('tf-layout-list');\r\n                $('.tf-item-cards').removeClass('tf-layout-grid');\r\n            }\r\n\r\n        });\r\n\r\n        /**\r\n         * ajax tour load pagination\r\n         */\r\n        var flag = false;\r\n        var main_xhr;\r\n\r\n        var amPushAjax = function (url) {\r\n            if (main_xhr && main_xhr.readyState != 4) {\r\n                main_xhr.abort();\r\n            }\r\n\r\n            main_xhr = $.ajax({\r\n                url: url,\r\n                contentType: false, // Not to set any content header\r\n                processData: false, // Not to process data\r\n                asynch: true,\r\n                beforeSend: function () {\r\n\r\n                    $(document).find('.tf_posts_navigation').addClass('loading');\r\n                    $(document).find('.archive_ajax_result').addClass('loading');\r\n                    flag = true;\r\n                },\r\n                success: function (data) {\r\n                    $('.archive_ajax_result').html($('.archive_ajax_result', data).html());\r\n\r\n                    $('.tf_posts_navigation').html($('.tf_posts_navigation', data).html());\r\n\r\n                    //document.title = $(data).filter('title').text();\r\n\r\n                    flag = false;\r\n\r\n                    $(document).find('.tf_posts_navigation').removeClass('loading');\r\n                    $(document).find('.archive_ajax_result').removeClass('loading');\r\n\r\n                }\r\n            });\r\n        };\r\n\r\n        // Feed Ajax Trigger\r\n        $(document).on('click', '.tf_posts_page_navigation a.page-numbers', function (e) {\r\n            e.preventDefault();\r\n            var targetUrl = (e.target.href) ? e.target.href : $(this).context.href;\r\n            amPushAjax(targetUrl);\r\n            window.history.pushState({url: \"\" + targetUrl + \"\"}, \"\", targetUrl);\r\n        });\r\n        // End Feed Ajax Trigger\r\n\r\n        // Hotel and Tour Advance Search form\r\n\r\n        $(\".tf_selectdate-wrap.tf_more_info_selections .tf_input-inner\").click(function () {\r\n            $('.tf-more-info').toggleClass('show');\r\n        });\r\n        $(document).click(function (event) {\r\n            if (!$(event.target).closest(\".tf_selectdate-wrap.tf_more_info_selections .tf_input-inner, .tf-more-info\").length) {\r\n                $('.tf-more-info').removeClass('show');\r\n            }\r\n        });\r\n        // Hotel Min and Max Range\r\n        let tf_hotel_range_options = {\r\n            range: {\r\n                min: parseInt(tf_params.tf_hotel_min_price),\r\n                max: parseInt(tf_params.tf_hotel_max_price),\r\n                step: 1\r\n            },\r\n            initialSelectedValues: {\r\n                from: parseInt(tf_params.tf_hotel_min_price),\r\n                to: parseInt(tf_params.tf_hotel_max_price) / 2\r\n            },\r\n            grid: false,\r\n            theme: \"dark\",\r\n        };\r\n        if (tf_params.tf_hotel_min_price != 0 && tf_params.tf_hotel_max_price != 0) {\r\n            $('.tf-hotel-filter-range').alRangeSlider(tf_hotel_range_options);\r\n        }\r\n\r\n        // Hotel Min and Max Range in Search Result\r\n        var tf_search_page_params = new window.URLSearchParams(window.location.search);\r\n        let tf_hotel_search_range = {\r\n            range: {\r\n                min: parseInt(tf_params.tf_hotel_min_price),\r\n                max: parseInt(tf_params.tf_hotel_max_price),\r\n                step: 1\r\n            },\r\n            initialSelectedValues: {\r\n                from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt(tf_params.tf_hotel_min_price),\r\n                to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt(tf_params.tf_hotel_max_price) / 2\r\n            },\r\n            grid: false,\r\n            theme: \"dark\",\r\n            onFinish: function () {\r\n                makeFilter();\r\n            }\r\n        };\r\n        if (tf_params.tf_hotel_min_price != 0 && tf_params.tf_hotel_max_price != 0) {\r\n            $('.tf-hotel-result-price-range').alRangeSlider(tf_hotel_search_range);\r\n        }\r\n\r\n        // Tour Min and Max Range\r\n        let tf_tour_range_options = {\r\n            range: {\r\n                min: parseInt(tf_params.tf_tour_min_price),\r\n                max: parseInt(tf_params.tf_tour_max_price),\r\n                step: 1\r\n            },\r\n            initialSelectedValues: {\r\n                from: parseInt(tf_params.tf_tour_min_price),\r\n                to: parseInt(tf_params.tf_tour_max_price) / 2\r\n            },\r\n            grid: false,\r\n            theme: \"dark\",\r\n        };\r\n        if (tf_params.tf_tour_min_price != 0 && tf_params.tf_tour_max_price != 0) {\r\n            $('.tf-tour-filter-range').alRangeSlider(tf_tour_range_options);\r\n        }\r\n\r\n        // Tours Min and Max Range in Search Result\r\n        let tf_tours_search_range = {\r\n            range: {\r\n                min: parseInt(tf_params.tf_tour_min_price),\r\n                max: parseInt(tf_params.tf_tour_max_price),\r\n                step: 1\r\n            },\r\n            initialSelectedValues: {\r\n                from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt(tf_params.tf_tour_min_price),\r\n                to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt(tf_params.tf_tour_max_price) / 2\r\n            },\r\n            grid: false,\r\n            theme: \"dark\",\r\n            onFinish: function () {\r\n                makeFilter();\r\n            }\r\n        };\r\n        if (tf_params.tf_tour_min_price != 0 && tf_params.tf_tour_max_price != 0) {\r\n            $('.tf-tour-result-price-range').alRangeSlider(tf_tours_search_range);\r\n        }\r\n\r\n        // Apartment Min and Max Range in Search Result\r\n        let tf_apartment_search_range = {\r\n            range: {\r\n                min: parseInt(tf_params.tf_apartment_min_price),\r\n                max: parseInt(tf_params.tf_apartment_max_price),\r\n                step: 1\r\n            },\r\n            initialSelectedValues: {\r\n                from: tf_search_page_params.get('from') ? tf_search_page_params.get('from') : parseInt(tf_params.tf_apartment_min_price),\r\n                to: tf_search_page_params.get('to') ? tf_search_page_params.get('to') : parseInt(tf_params.tf_apartment_max_price) / 2\r\n            },\r\n            grid: false,\r\n            theme: \"dark\",\r\n            onFinish: function () {\r\n                makeFilter();\r\n            }\r\n        };\r\n        if (tf_params.tf_apartment_min_price != 0 && tf_params.tf_apartment_max_price != 0) {\r\n            $('.tf-apartment-result-price-range').alRangeSlider(tf_apartment_search_range);\r\n        }\r\n\r\n        // Hotel Location\r\n\r\n        $('#tf-destination-adv').click(function (e) {\r\n            var location = $(this).val();\r\n            if (location) {\r\n                $(\".tf-hotel-locations\").removeClass('tf-locations-show');\r\n            } else {\r\n                $(\".tf-hotel-locations\").addClass('tf-locations-show');\r\n            }\r\n        });\r\n        $('#tf-destination-adv').keyup(function (e) {\r\n            var location = $(this).val();\r\n            $(\"#tf-place-destination\").val(location);\r\n        });\r\n        $('#tf-location').keyup(function (e) {\r\n            var tf_location = $(this).val();\r\n            $(\"#tf-search-hotel\").val(tf_location);\r\n        });\r\n        $(document).on('click', function (event) {\r\n            if (!$(event.target).closest(\"#tf-destination-adv\").length) {\r\n                $(\".tf-hotel-locations\").removeClass('tf-locations-show');\r\n            }\r\n        });\r\n        $('#ui-id-1 li').click(function (e) {\r\n            var dest_name = $(this).attr(\"data-name\");\r\n            var dest_slug = $(this).attr(\"data-slug\");\r\n            $(\".tf-preview-destination\").val(dest_name);\r\n            $(\"#tf-place-destination\").val(dest_slug);\r\n            $(\".tf-hotel-locations\").removeClass('tf-locations-show');\r\n        });\r\n\r\n        // Tour Destination\r\n\r\n        $('#tf-tour-location-adv').click(function (e) {\r\n            var location = $(this).val();\r\n            if (location) {\r\n                $(\".tf-tour-results\").removeClass('tf-destination-show');\r\n            } else {\r\n                $(\".tf-tour-results\").addClass('tf-destination-show');\r\n            }\r\n        });\r\n        $('#tf-tour-location-adv').keyup(function (e) {\r\n            var location = $(this).val();\r\n            $(\"#tf-tour-place\").val(location);\r\n        });\r\n        $('#tf-destination').keyup(function (e) {\r\n            var tf_location = $(this).val();\r\n            $(\"#tf-search-tour\").val(tf_location);\r\n        });\r\n        $(document).on('click', function (event) {\r\n            if (!$(event.target).closest(\"#tf-tour-location-adv\").length) {\r\n                $(\".tf-tour-results\").removeClass('tf-destination-show');\r\n            }\r\n        });\r\n        $('#ui-id-2 li').click(function (e) {\r\n            var dest_name = $(this).attr(\"data-name\");\r\n            var dest_slug = $(this).attr(\"data-slug\");\r\n            $(\".tf-tour-preview-place\").val(dest_name);\r\n            $(\"#tf-tour-place\").val(dest_slug);\r\n            $(\".tf-tour-results\").removeClass('tf-destination-show');\r\n        });\r\n\r\n\r\n        // Itinerary Accordion\r\n        $('.tf-accordion-head').click(function () {\r\n            $(this).toggleClass('active');\r\n            $(this).parent().find('.arrow').toggleClass('arrow-animate');\r\n            $(this).parent().find('.tf-accordion-content').slideToggle();\r\n            //$(this).parents('#tf-accordion-wrapper').siblings().find('.tf-accordion-content').slideUp();\r\n            $(this).siblings().find('.ininerary-other-gallery').slick({\r\n                slidesToShow: 6,\r\n                slidesToScroll: 1,\r\n                arrows: true,\r\n                fade: false,\r\n                adaptiveHeight: true,\r\n                infinite: true,\r\n                useTransform: true,\r\n                speed: 400,\r\n                cssEase: 'cubic-bezier(0.77, 0, 0.18, 1)',\r\n                responsive: [{\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 1,\r\n                    }\r\n                }, {\r\n                    breakpoint: 640,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                    }\r\n                }, {\r\n                    breakpoint: 420,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                    }\r\n                }]\r\n            });\r\n        });\r\n\r\n\r\n        // FAQ Accordion\r\n        $('.tf-faq-title').click(function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-faq-desc\").slideUp(400);\r\n                $(\".tf-faq-title\").removeClass(\"active\");\r\n                $('.arrow').removeClass('arrow-animate');\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $this.next().slideToggle();\r\n            $('.arrow', this).toggleClass('arrow-animate');\r\n        });\r\n\r\n        /*\r\n        * New Template FAQ Accordion\r\n        * @author: Jahid\r\n        */\r\n        $('.tf-faq-collaps').click(function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-faq-content\").slideUp(400);\r\n                $(\".tf-faq-collaps\").removeClass(\"active\");\r\n                $('.tf-faq-single').removeClass('active');\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $this.next().slideToggle();\r\n            $(this).closest('.tf-faq-single').toggleClass('active');\r\n        });\r\n\r\n        /*\r\n        * New Template Itinerary Accordion\r\n        * @author: Jahid\r\n        */\r\n        $('.tf-itinerary-title').click(function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-itinerary-content-box\").slideUp(400);\r\n                $(\".tf-itinerary-title\").removeClass(\"active\");\r\n                $('.tf-single-itinerary-item').removeClass('active');\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $(this).closest('.tf-single-itinerary-item').toggleClass('active');\r\n            $this.next().slideToggle();\r\n        });\r\n\r\n        /*\r\n        * New Template Tour Extra\r\n        * @author: Jahid\r\n        */\r\n        $('.tf-form-title.tf-tour-extra').click(function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-tour-extra-box\").slideUp(400);\r\n                $(\".tf-form-title.tf-tour-extra\").removeClass(\"active\");\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $this.next().slideToggle();\r\n        });\r\n\r\n        /*\r\n        * Booking Form select first tab on load\r\n        * @author: Foysal\r\n        */\r\n        $(window).on('load', function () {\r\n            if ($('.tf-tablinks').length > 0) {\r\n                $('.tf-tablinks').first().trigger('click').addClass('active');\r\n            }\r\n        });\r\n\r\n        // Form Tab click\r\n        $(document).on('click', '.tf-tablinks', function (e) {\r\n            let formId = $(this).data('form-id');\r\n            tfOpenForm(event, formId);\r\n        });\r\n\r\n        /*\r\n        * Booking Form tab mobile version\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('change', 'select[name=\"tf-booking-form-tab-select\"]', function () {\r\n            var tabId = $(this).val();\r\n            tfOpenForm(event, tabId);\r\n        });\r\n\r\n        /*\r\n         * Location Search\r\n         * @author: Foysal\r\n         */\r\n        $(document).on('keyup', '.tf-hotel-side-booking #tf-location, .tf-hotel-side-booking #tf-destination', function () {\r\n            let search = $(this).val();\r\n            $(this).next('input[name=place]').val(search);\r\n        })\r\n\r\n\r\n        /**\r\n         * Children age field add when children added in search field\r\n         * @since 2.8.6\r\n         * @author Abu Hena\r\n         */\r\n\r\n        if ($('.child-age-limited')[0]) {\r\n            $('.acr-select .child-inc').on('click', function () {\r\n                var first_element = $('div[id^=\"tf-age-field-0\"]');\r\n                var ch_element = $('div[id^=\"tf-age-field-\"]:last');\r\n                if (ch_element.length != 0) {\r\n                    var num = parseInt(ch_element.prop(\"id\").match(/\\d+/g), 10) + 1;\r\n                }\r\n                var elements = ch_element.clone().prop('id', 'tf-age-field-' + num);\r\n                elements.find(\"label\").html('Child age ' + num);\r\n                //elements.find(\"select\").attr('name','children_'+num+'_age');\r\n                elements.find(\"select\").attr('name', 'children_ages[]');\r\n                ch_element.after(elements);\r\n                elements.show();\r\n                first_element.hide();\r\n\r\n            })\r\n\r\n            $('.acr-select .child-dec').on('click', function () {\r\n                var total_age_input = $('.tf-children-age').length;\r\n                var ch_element = $('div[id^=\"tf-age-field-\"]:last');\r\n                if (total_age_input != 1) {\r\n                    ch_element.remove();\r\n                }\r\n            })\r\n        }\r\n        var postsCount = $('.tf-posts-count').html();\r\n        $('.tf-total-results').find('span').html(postsCount);\r\n\r\n//Sidebar widget js\r\n        $('.tf-widget-title').on('click', function () {\r\n            $(this).find('i').toggleClass('collapsed');\r\n            $(this).siblings('.tf-filter').slideToggle('medium');\r\n        })\r\n\r\n        /* see more checkbox filter started */\r\n\r\n        $('a.see-more').on('click', function (e) {\r\n            var $this = $(this);\r\n            e.preventDefault();\r\n            $this.parent('.tf-filter').find('.filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).removeClass(\"hidden\");\r\n            $this.hide();\r\n\r\n            $this.parent('.tf-filter').find('.see-less').show();\r\n        });\r\n\r\n        /* see Sless checkbox filter started */\r\n\r\n        $('a.see-less').on('click', function (e) {\r\n            var $this = $(this);\r\n            e.preventDefault();\r\n            $this.parent('.tf-filter').find('.filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).addClass(\"hidden\");\r\n            $this.hide();\r\n            $this.parent('.tf-filter').find('.see-more').show();\r\n        });\r\n\r\n        $('.tf-filter').each(function () {\r\n\r\n            var len = $(this).find('ul').children().length;\r\n            $(this).find('.see-more').hide();\r\n            if (len > 4) {\r\n                $(this).find('.see-more').show();\r\n            }\r\n            //hide items if crossed showing limit\r\n            $(this).find('.filter-item').filter(function (index) {\r\n                return index > 3;\r\n            }).addClass(\"hidden\");\r\n\r\n        });\r\n\r\n        /* see more checkbox filter end */\r\n\r\n        //active checkbox bg\r\n        $('.tf_widget input').on('click', function () {\r\n            $(this).parent().parent().toggleClass('active');\r\n        });\r\n\r\n        /**\r\n         * Cart item remove from checkout page\r\n         * @since 2.9.7\r\n         * @author Foysal\r\n         */\r\n        $('form.checkout').on('click', '.cart_item a.remove', function (e) {\r\n            e.preventDefault();\r\n\r\n            var cart_item_key = $(this).attr(\"data-cart_item_key\");\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                url: tf_params.ajax_url,\r\n                data: {\r\n                    action: 'tf_checkout_cart_item_remove',\r\n                    cart_item_key: cart_item_key,\r\n                },\r\n                beforeSend: function () {\r\n                    $('body').trigger('update_checkout');\r\n                },\r\n                success: function (result) {\r\n                    $('body').trigger('update_checkout');\r\n                },\r\n                error: function (error) {\r\n\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n        * Hotel Search submit\r\n        * @since 2.9.7\r\n        * @author Foysal\r\n        */\r\n        $(document).on('submit', '#tf_hotel_aval_check', function (e) {\r\n            e.preventDefault();\r\n            let form = $(this),\r\n                submitBtn = form.find('.tf-submit'),\r\n                formData = new FormData(form[0]);\r\n\r\n            formData.append('action', 'tf_hotel_search');\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: formData,\r\n                contentType: false,\r\n                processData: false,\r\n                beforeSend: function () {\r\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\r\n                    submitBtn.addClass('tf-btn-loading');\r\n                },\r\n                success: function (response) {\r\n                    let obj = JSON.parse(response);\r\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\r\n                    submitBtn.removeClass('tf-btn-loading');\r\n                    if (obj.status === 'error') {\r\n                        notyf.error(obj.message);\r\n                    }\r\n                    if (obj.status === 'success') {\r\n                        //location redirect to form action url with query string\r\n                        location.href = form.attr('action') + '?' + obj.query_string;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n        * Tour Search submit\r\n        * @since 2.9.7\r\n        * @author Foysal\r\n        */\r\n        $(document).on('submit', '#tf_tour_aval_check', function (e) {\r\n            e.preventDefault();\r\n            let form = $(this),\r\n                submitBtn = form.find('.tf-submit'),\r\n                formData = new FormData(form[0]);\r\n\r\n            formData.append('action', 'tf_tour_search');\r\n\r\n            $.ajax({\r\n                url: tf_params.ajax_url,\r\n                type: 'POST',\r\n                data: formData,\r\n                contentType: false,\r\n                processData: false,\r\n                beforeSend: function () {\r\n                    form.css({'opacity': '0.5', 'pointer-events': 'none'});\r\n                    submitBtn.addClass('tf-btn-loading');\r\n                },\r\n                success: function (response) {\r\n                    let obj = JSON.parse(response);\r\n                    form.css({'opacity': '1', 'pointer-events': 'all'});\r\n                    submitBtn.removeClass('tf-btn-loading');\r\n                    if (obj.status === 'error') {\r\n                        notyf.error(obj.message);\r\n                    }\r\n                    if (obj.status === 'success') {\r\n                        //location redirect to form action url with query string\r\n                        location.href = form.attr('action') + '?' + obj.query_string;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n        * Single Hotel Gallery\r\n        * @author Jahid\r\n        */\r\n        $(document).on('click', '#featured-gallery', function (e) {\r\n            e.preventDefault();\r\n            $(\"#tour-gallery\").trigger(\"click\");\r\n        });\r\n\r\n        /*\r\n        * Without Payment Booking\r\n        * @since 2.9.26\r\n        * @author Jahid\r\n        */\r\n        let tf_hasErrorsFlag = false; \r\n        $(document).on('click', '.tf-traveller-error', function (e) {\r\n            let hasErrors = [];\r\n            let $this = $(this).closest('.tf-withoutpayment-booking');\r\n            $('.error-text').text(\"\");\r\n            $this.find('.tf-single-travel').each(function() {\r\n                $(this).find('input, select').each(function() {\r\n                    if($(this).attr('data-required')){\r\n                        if($(this).val() == \"\"){\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                $(this).find('input[type=\"radio\"], input[type=\"checkbox\"]').each(function() {\r\n                    if ($(this).attr('data-required')) {\r\n                        const radioName = $(this).attr('name');\r\n                        const isChecked = $('input[name=\"' + radioName + '\"]:checked').length > 0;\r\n                \r\n                        if (!isChecked) {\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).parent().siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n            });\r\n            if (hasErrors.includes(true)) {\r\n                tf_hasErrorsFlag = true;\r\n                return false;\r\n            }\r\n            tf_hasErrorsFlag = false;\r\n        });\r\n\r\n        // Booking Confirmation Form Validation\r\n        $(document).on('click', '.tf-book-confirm-error', function (e) {\r\n            let hasErrors = [];\r\n            let $this = $(this).closest('.tf-withoutpayment-booking');\r\n            $('.error-text').text(\"\");\r\n            $this.find('.tf-confirm-fields').each(function() {\r\n                $(this).find('input, select').each(function() {\r\n                    if($(this).attr('data-required')){\r\n                        if($(this).val() == \"\"){\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                $(this).find('input[type=\"radio\"], input[type=\"checkbox\"]').each(function() {\r\n                    if ($(this).attr('data-required')) {\r\n                        const radioName = $(this).attr('name');\r\n                        const isChecked = $('input[name=\"' + radioName + '\"]:checked').length > 0;\r\n                \r\n                        if (!isChecked) {\r\n                            hasErrors.push(true);\r\n                            const errorContainer = $(this).parent().siblings('.error-text');\r\n                            errorContainer.text('This field is required.');\r\n                            if (errorContainer.text() !== '') {\r\n                                errorContainer.addClass('error-visible');\r\n                            } else {\r\n                                errorContainer.removeClass('error-visible');\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            if (hasErrors.includes(true)) {\r\n                tf_hasErrorsFlag = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // Navigation Next\r\n        $(document).on('click', '.tf-tabs-control', function (e) {\r\n            e.preventDefault();\r\n            if (tf_hasErrorsFlag) {\r\n                return false; \r\n            }\r\n            let step = $(this).attr(\"data-step\"); \r\n            if(step>1){\r\n                for(let i = 1; i <= step; i++){\r\n                    $('.tf-booking-step-' + i).removeClass(\"active\");\r\n                    $('.tf-booking-step-' + i).addClass(\"done\");\r\n                }\r\n                $('.tf-booking-step-' + step).addClass(\"active\");\r\n                $('.tf-booking-content').hide();\r\n                $('.tf-booking-content-' + step).fadeIn(300);\r\n\r\n                \r\n                $('.tf-control-pagination').hide();\r\n                $('.tf-pagination-content-' + step).fadeIn(300);\r\n            }\r\n        });\r\n\r\n        // Navigation Back\r\n        $(document).on('click', '.tf-step-back', function (e) {\r\n            e.preventDefault();\r\n            let step = $(this).attr(\"data-step\"); \r\n            if(step==1){\r\n                $('.tf-booking-step').removeClass(\"active\");\r\n                $('.tf-booking-step').removeClass(\"done\");\r\n                $('.tf-booking-step-' + step).addClass(\"active\");\r\n                $('.tf-booking-content').hide();\r\n                $('.tf-booking-content-' + step).fadeIn(300);\r\n\r\n                $('.tf-control-pagination').hide();\r\n                $('.tf-pagination-content-' + step).fadeIn(300);\r\n            }\r\n            if(step>1){\r\n                let next_step = parseInt(step)+1;\r\n                $('.tf-booking-step-' + next_step).removeClass(\"active\");\r\n                $('.tf-booking-step-' + step).addClass(\"active\");\r\n                $('.tf-booking-step-' + step).removeClass(\"done\");\r\n                $('.tf-booking-step-' + next_step).removeClass(\"done\");\r\n\r\n                $('.tf-booking-content').hide();\r\n                $('.tf-booking-content-' + step).fadeIn(300);\r\n                $('.tf-control-pagination').hide();\r\n                $('.tf-pagination-content-' + step).fadeIn(300);\r\n            }\r\n        });\r\n\r\n        // Popup Open\r\n        const makeBooking = () => {\r\n            var $this = $(this);\r\n            let check_in_date = $('#check-in-out-date').val();\r\n            let adults = $('#adults').val();\r\n            let children = $('#children').val();\r\n            let infant = $('#infant').val();\r\n            let post_id = $('input[name=post_id]').val();\r\n            let check_in_time = $('select[name=check-in-time] option').filter(':selected').val();\r\n            var deposit = $('input[name=deposit]').is(':checked');\r\n            var extras = [];\r\n            $('[name*=tf-tour-extra]').each(function () {\r\n                if ($(this).is(':checked')) {\r\n                    extras.push($(this).val());\r\n                }\r\n            });\r\n            var extras = extras.join();\r\n            var data = {\r\n                action: 'tf_tour_booking_popup',\r\n                post_id: post_id,\r\n                adults: adults,\r\n                children: children,\r\n                infant: infant,\r\n                check_in_date: check_in_date,\r\n                check_in_time: check_in_time,\r\n                tour_extra: extras,\r\n                deposit: deposit\r\n            };\r\n\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_params.ajax_url,\r\n                data: data,\r\n                beforeSend: function (data) {\r\n                    $('#tour_room_details_loader').show();\r\n                },\r\n                complete: function (data) {\r\n                    $this.unblock();\r\n                },\r\n                success: function (data) {\r\n                    $this.unblock();\r\n\r\n                    var response = JSON.parse(data);\r\n\r\n                    if (response.status == 'error') {\r\n\r\n                        $('#tour_room_details_loader').hide();\r\n                        if (response.errors) {\r\n                            response.errors.forEach(function (text) {\r\n                                notyf.error(text);\r\n                            });\r\n                        }\r\n\r\n                        return false;\r\n                    } else {\r\n                        $('#tour_room_details_loader').hide();\r\n                        if ($('.tf-traveller-info-box').length > 0) {\r\n                            if($(\".tf-traveller-info-box\").html().trim() == \"\"){\r\n                                $('.tf-traveller-info-box').html(response.traveller_info);\r\n                            }else{\r\n                                $('.tf-traveller-info-box').html(response.traveller_info);\r\n                            }\r\n                        }\r\n                        if ($('.tf-booking-traveller-info').length > 0) {\r\n                            $('.tf-booking-traveller-info').html(response.traveller_summery);\r\n                        }\r\n                        $('.tf-withoutpayment-booking').addClass('show');\r\n                    }\r\n                },\r\n                error: function (data) {\r\n                    console.log(data);\r\n                },\r\n\r\n            });\r\n        }\r\n        $(document).on('click', '.tf-booking-popup-btn', function (e) {\r\n            e.preventDefault();\r\n            $(\".tf-withoutpayment-booking input[type='text'], .tf-withoutpayment-booking input[type='email'], .tf-withoutpayment-booking input[type='date'], .tf-withoutpayment-booking select, .tf-withoutpayment-booking textarea\").val(\"\");\r\n\r\n            $('.tf-booking-content-extra input[type=\"checkbox\"]').each(function () {\r\n                if ($(this).prop('checked')==true){ \r\n                    $(this).prop('checked',false);\r\n                }\r\n            });\r\n            makeBooking();\r\n        });\r\n\r\n        $(document).on('change', '[name*=tf-tour-extra]', function () {\r\n            makeBooking();\r\n        });\r\n        $(document).on('change', '[name=deposit]', function () {\r\n            makeBooking();\r\n        });\r\n\r\n        // Popup Close\r\n        $(document).on('click', '.tf-booking-times span', function (e) {\r\n            $('.tf-withoutpayment-booking').removeClass('show');\r\n            $('.tf-withoutpayment-booking-confirm').removeClass('show');\r\n            // Reset Tabs\r\n            $(\".tf-booking-tab-menu ul li\").removeClass(\"active\");\r\n            $(\".tf-booking-tab-menu ul li\").removeClass(\"done\");\r\n            $(\".tf-booking-tab-menu ul li:first-child\").addClass(\"active\");\r\n            // Reset Content\r\n            $(\".tf-booking-content\").hide();\r\n            $(\".tf-booking-content:first\").show();\r\n            // Reset Pagination\r\n            $(\".tf-control-pagination\").hide();\r\n            $(\".tf-control-pagination:first\").show();\r\n        });\r\n\r\n        /*\r\n        * Custom modal\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-modal-btn', function () {\r\n            var dataTarget = $(this).attr('data-target');\r\n            $(dataTarget).addClass('tf-modal-show');\r\n            $('body').addClass('tf-modal-open');\r\n        });\r\n        $(document).on(\"click\", '.tf-modal-close', function () {\r\n            $('.tf-modal').removeClass('tf-modal-show');\r\n            $('body').removeClass('tf-modal-open');\r\n        });\r\n        $(document).click(function (event) {\r\n            if (!$(event.target).closest(\".tf-modal-content,.tf-modal-btn\").length) {\r\n                $(\"body\").removeClass(\"tf-modal-open\");\r\n                $(\".tf-modal\").removeClass(\"tf-modal-show\");\r\n            }\r\n        });\r\n    });\r\n\r\n})(jQuery, window);\r\n\r\n/**\r\n * Horizontal Search Form Tab Control\r\n */\r\nfunction tfOpenForm(evt, formName) {\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tf-tabcontent\");\r\n    for (i = 0; i < tabcontent.length; i++) {\r\n        tabcontent[i].style.display = \"none\";\r\n    }\r\n    tablinks = document.getElementsByClassName(\"tf-tablinks\");\r\n    for (i = 0; i < tablinks.length; i++) {\r\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n    }\r\n    document.getElementById(formName).style.display = \"block\";\r\n    document.getElementById(formName).style.transition = \"all 0.2s\";\r\n    evt.target.className += \" active\";\r\n}\r\n\r\n/**\r\n * Show review form on popup\r\n */\r\nfunction tf_load_rating() {\r\n    jQuery('#commentform').show();\r\n}\n\n//# sourceURL=webpack://tourfic/./sass/app/js/free/tourfic.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./sass/app/js/free/tourfic.js"]();
/******/ 	
/******/ })()
;