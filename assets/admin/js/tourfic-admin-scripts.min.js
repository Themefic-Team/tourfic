/*! For license information please see tourfic-admin-scripts.min.js.LICENSE.txt */
(()=>{var __webpack_modules__={"./sass/admin/js/admin.js":()=>{eval("(function($) {\r\n\t\r\n\t$(document).ready(function(){\t\r\n\r\n        // Create an instance of Notyf\r\n        const notyf = new Notyf({\r\n            ripple: true,\r\n            dismissable: true,\r\n            duration: 3000,\r\n            position: {\r\n                x: 'right',\r\n                y: 'bottom',\r\n            },\r\n        });\r\n\r\n        /**\r\n         * Delete old review fields\r\n         * @author kabir, fida\r\n         */\r\n        $(document).on('click', '.tf-del-old-review-fields', function (e) {\r\n            e.preventDefault();\r\n            var $this = $(this);\r\n            var data = {\r\n                action: 'tf_delete_old_review_fields',\r\n                deleteAll: $(this).data('delete-all')\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: tf_admin_params.ajax_url,\r\n                data: data,\r\n                beforeSend: function (data) {\r\n                    notyf.success(tf_admin_params.deleting_old_review_fields);\r\n                },\r\n                success: function (data) {\r\n                    notyf.success(data.data);\r\n                },\r\n                error: function (data) {\r\n                    notyf.error(data.data);\r\n                },\r\n\r\n            });\r\n\r\n        });\r\n\r\n        /**\r\n         * Delete room order ids\r\n         * @author fida\r\n         */\r\n         $(document).on('click', '.remove-order-ids', function (e) {\r\n\r\n            e.preventDefault();\r\n            \r\n            var $this = $(this);\r\n            var post_id = $(\"#post_ID\").val();\r\n            var meta_field = $this.closest( '.tf-repeater-content-wrap' ).find('.tf-order_id input').attr('name');\r\n            var data = {\r\n                action: 'tf_remove_room_order_ids',\r\n                meta_field: meta_field,\r\n                post_id: post_id,\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: ajaxurl,\r\n                data: data,\r\n                beforeSend: function (data) {\r\n                    notyf.success(tf_admin_params.deleting_room_order_ids);\r\n                },\r\n                success: function (data) {\r\n                    notyf.success(data.data);\r\n                    location.reload();\r\n                },\r\n                error: function (data) {\r\n                    notyf.error(data.data);\r\n                },\r\n            });\r\n\r\n        });\r\n\r\n        /**\r\n         * Tour location required\r\n         * \r\n         * show notyf error\r\n         */\r\n        $(document).on('click', '.post-type-tf_tours #publish, .post-type-tf_tours #save-post', function(e) {\r\n            if( $('textarea[name=\"tf_tours_opt[text_location]\"]').val().length === 0 ) {\r\n                e.preventDefault;\r\n                e.stopImmediatePropagation();\r\n                notyf.error(tf_admin_params.tour_location_required);\r\n                return false;\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Hotel location required\r\n         *\r\n         * show notyf error\r\n         */\r\n        $(document).on('click', '.post-type-tf_hotel #publish, .post-type-tf_hotel #save-post', function(e) {\r\n            if( $('textarea[name=\"tf_hotels_opt[address]\"]').val().length === 0 ) {\r\n                e.preventDefault;\r\n                e.stopImmediatePropagation();\r\n                notyf.error(tf_admin_params.hotel_location_required);\r\n                return false;\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Hotel and Tour feature images required\r\n         * \r\n         * show notyf error\r\n         */\r\n        \r\n        $(document).on('click', '.post-type-tf_tours #publish, .post-type-tf_tours #save-post', function(e) {\r\n            if( $('#set-post-thumbnail').find('img').size() == 0) {\r\n                e.preventDefault;\r\n                e.stopImmediatePropagation();\r\n                notyf.error(tf_admin_params.tour_feature_image_required);\r\n                return false;\r\n            }\r\n        });\r\n\r\n        $(document).on('click', '.post-type-tf_hotel #publish, .post-type-tf_hotel #save-post', function(e) {\r\n            if( $('#set-post-thumbnail').find('img').size() == 0) {\r\n                e.preventDefault;\r\n                e.stopImmediatePropagation();\r\n                notyf.error(tf_admin_params.hotel_feature_image_required);\r\n                return false;\r\n            }\r\n        });\r\n        \r\n        /**\r\n         * Ajax install\r\n         * \r\n         * @since 1.0\r\n         */\r\n        $(document).on('click', '.tf-install', function(e) {\r\n            e.preventDefault();\r\n\r\n            var current = $(this);\r\n            var plugin_slug = current.attr(\"data-plugin-slug\");\r\n\r\n            current.addClass('updating-message').text(tf_admin_params.installing);\r\n\r\n            var data = {\r\n                action: 'tf_ajax_install_plugin',\r\n                _ajax_nonce: tf_admin_params.tf_nonce,\r\n                slug: plugin_slug,\r\n            };\r\n\r\n            jQuery.post( tf_admin_params.ajax_url, data, function(response) {\r\n                current.removeClass('updating-message');\r\n                current.addClass('updated-message').text(tf_admin_params.installed);\r\n                current.attr(\"href\", response.data.activateUrl);\r\n            })\r\n            .fail(function() {\r\n                current.removeClass('updating-message').text(tf_admin_params.install_failed);\r\n            })\r\n            .always(function() {\r\n                current.removeClass('install-now updated-message').addClass('activate-now button-primary').text(tf_admin_params.activating);\r\n                current.unbind(e);\r\n                current[0].click();\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Pro Feature button link\r\n         */\r\n        $(document).on('click', '.tf-pro', function(e) {\r\n            e.preventDefault();\r\n            window.open('https://tourfic.com/');\r\n        });\r\n\r\n        $(window).on('load', function() {\r\n            $('.tf-field-disable').find('input, select, textarea, button, div, span').attr('disabled', 'disabled');\r\n        });\r\n\r\n        $(document).on('click', '.tf-field-pro', function(e) {\r\n            e.preventDefault();\r\n            window.open('https://tourfic.com/');\r\n        });\r\n\r\n        /**\r\n         * Generate & set unique id for hotel rooms\r\n         */\r\n        $(document).on('click', '.room-repeater > div.csf-fieldset > a.csf-repeater-add', function(e) {\r\n\r\n            var repeaterNumber = $('.room-repeater .csf-repeater-wrapper [data-depend-id=\"room\"]').length - 2;\r\n\r\n            $('.room-repeater .unique-id input').each(function() {\r\n                repeaterNumber++;\r\n                if( $('.room-repeater [data-depend-id=\"room\"] [data-depend-id=\"unique_id\"]').val().length === 0 ) {\r\n                    $('.room-repeater [name=\"tf_hotel[room]['+repeaterNumber+'][unique_id]\"]').val(new Date().valueOf() + repeaterNumber);\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n    });\r\n\r\n})(jQuery);\n\n//# sourceURL=webpack://tourfic/./sass/admin/js/admin.js?")},"./sass/admin/js/required-taxonomies-gutenberg.js":()=>{eval("const {select, dispatch} = wp.data;\r\n\r\nfunction TfPrePublishCheck() {\r\n    let lockPost = false;\r\n    tf_admin_params.error = false;\r\n    tf_admin_params.messages = [];\r\n\r\n    let tf_post_pre_save = Object.assign({}, select('core/editor').getCurrentPost(), select('core/editor').getPostEdits());\r\n\r\n    if (tf_post_pre_save.hasOwnProperty('categories')) {\r\n        tf_post_pre_save['categories'] = tf_post_pre_save['categories'].filter(function (ele) {\r\n            return ele !== 1;\r\n        });\r\n    }\r\n\r\n    jQuery.each(tf_admin_params.taxonomies, function (taxonomy, config) {\r\n        if (tf_post_pre_save.hasOwnProperty(taxonomy) && tf_post_pre_save[taxonomy].length === 0) {\r\n            dispatch('core/notices').createNotice(\r\n                'error',\r\n                config.message,\r\n                {\r\n                    id: 'tfNotice_' + taxonomy,\r\n                    isDismissible: false\r\n                }\r\n            );\r\n            tf_admin_params.error = lockPost = true;\r\n        }else{\r\n            dispatch('core/notices').removeNotice('tfNotice_' + taxonomy);\r\n        }\r\n    });\r\n\r\n    if (lockPost === true) {\r\n        dispatch('core/editor').lockPostSaving();\r\n    } else {\r\n        dispatch('core/editor').unlockPostSaving();\r\n    }\r\n}\r\n\r\nTfPrePublishCheck();\r\n\r\nlet rpc_check_interval = setInterval(TfPrePublishCheck, 500);\r\n\n\n//# sourceURL=webpack://tourfic/./sass/admin/js/required-taxonomies-gutenberg.js?")},"./sass/admin/js/required-taxonomies.js":()=>{eval("jQuery(function ($) {\r\n\t\r\n\t// Create an instance of Notyf\r\n\tconst notyf = new Notyf({\r\n\t\tripple: true,\r\n\t\tdismissable: true,\r\n\t\tduration: 3000,\r\n\t\tposition: {\r\n\t\t\tx: 'right',\r\n\t\t\ty: 'bottom',\r\n\t\t},\r\n\t});\r\n\t\r\n    function tf_event_handler(e) {\r\n        tf_admin_params.error = false;\r\n        $.each(tf_admin_params.taxonomies, function (taxonomy, config) {\r\n            if (config.type == 'hierarchical') {\r\n                if ($('#taxonomy-' + taxonomy + ' input:checked').length == 0) {\r\n                    //alert(config.message);\r\n\t\t\t\t\tnotyf.error(config.message);\r\n                    tf_admin_params.error = true;\r\n                }\r\n            } else {\r\n                if ($('#tagsdiv-' + taxonomy + ' .tagchecklist').is(':empty')) {\r\n                    //alert(config.message);\r\n                    notyf.error(config.message);\r\n                    tf_admin_params.error = true;\r\n                }\r\n            }\r\n        });\r\n        if (tf_admin_params.error) {\r\n            e.stopImmediatePropagation();\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    $('#publish, #save-post').on('click.require-post-category', tf_event_handler);\r\n    $('#post').on('submit.require-post-category', tf_event_handler);\r\n    if ($('#publish')[0] != null && $._data($('#publish')[0], \"events\") != null) {\r\n        var publish_click_events = $._data($('#publish')[0], \"events\").click;\r\n        if (publish_click_events) {\r\n            if (publish_click_events.length > 1) {\r\n                publish_click_events.unshift(publish_click_events.pop());\r\n            }\r\n        }\r\n    }\r\n    if ($('#save-post')[0] != null && $._data($('#save-post')[0], \"events\") != null) {\r\n        var save_click_events = $._data($('#save-post')[0], \"events\").click;\r\n        if (save_click_events) {\r\n            if (save_click_events.length > 1) {\r\n                save_click_events.unshift(save_click_events.pop());\r\n            }\r\n        }\r\n    }\r\n    if ($('#post')[0] != null && $._data($('#post')[0], \"events\") != null) {\r\n        var post_submit_events = $._data($('#post')[0], \"events\").submit;\r\n        if (post_submit_events) {\r\n            if (post_submit_events.length > 1) {\r\n                post_submit_events.unshift(post_submit_events.pop());\r\n            }\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://tourfic/./sass/admin/js/required-taxonomies.js?")},"./sass/admin/js/setup-wizard.js":()=>{eval("(function ($) {\n\n    $(document).ready(function () {\n\n        $(document).on('click', '.tf-setup-start-btn', function (e) {\n            e.preventDefault();\n            $('.tf-welcome-step').hide();\n            $('.tf-setup-step-1').show();\n        });\n\n        $(document).on('click', '.tf-setup-next-btn, .tf-setup-skip-btn', function (e) {\n            e.preventDefault();\n            let form = $('#tf-setup-wizard-form');\n            let skipSteps = form.find('input[name=\"tf-skip-steps\"]').val();\n            let step = $(this).closest('.tf-setup-step-container').data('step');\n            let nextStep = step + 1;\n\n            //min one service required\n            if (step === 1 && $(this).hasClass('tf-setup-next-btn')) {\n                let services = $('input[name=\"tf-services[]\"]:checked').length;\n\n                if (!services) {\n                    alert(tf_setup_wizard.i18n.no_services_selected);\n                    return false;\n                }\n\n                //if hotel service not checked, hide hotel settings\n                if (!$('input[name=\"tf-services[]\"][value=\"hotel\"]').is(':checked')) {\n                    $('.tf-hotel-setup-wizard').hide();\n                } else {\n                    $('.tf-hotel-setup-wizard').show();\n                }\n\n                //if tour service not checked, hide tour settings\n                if (!$('input[name=\"tf-services[]\"][value=\"tour\"]').is(':checked')) {\n                    $('.tf-tour-setup-wizard').hide();\n                } else {\n                    $('.tf-tour-setup-wizard').show();\n                }\n            }\n\n            //skip steps add to input[name=\"tf-skip-steps\"]\n            if ($(this).hasClass('tf-setup-skip-btn')) {\n                skipSteps = !skipSteps ? step : skipSteps.indexOf(step) === -1 ? skipSteps + ',' + step : skipSteps;\n                form.find('input[name=\"tf-skip-steps\"]').val(skipSteps);\n\n                if(step === 1){\n                    $('.tf-hotel-setup-wizard').show();\n                    $('.tf-tour-setup-wizard').show();\n                }\n            }\n\n            //remove skip steps from input[name=\"tf-skip-steps\"] if user back to step and go to next step\n            if($(this).hasClass('tf-setup-next-btn') && skipSteps.indexOf(step) !== -1) {\n                skipSteps = skipSteps.replace(step, '');\n                form.find('input[name=\"tf-skip-steps\"]').val(skipSteps);\n            }\n\n            //hide current step and show next step (if not last step)\n            if(!$(this).hasClass('tf-setup-submit-btn')) {\n                $('.tf-setup-step-' + step).fadeOut(300, function () {\n                    $('.tf-setup-step-' + nextStep).fadeIn(300);\n                });\n            }\n        });\n\n        $(document).on('click', '.tf-setup-prev-btn', function (e) {\n            e.preventDefault();\n            let step = $(this).closest('.tf-setup-step-container').data('step');\n            let prevStep = step - 1;\n            $('.tf-setup-step-' + step).fadeOut(300, function () {\n                $('.tf-setup-step-' + prevStep).fadeIn(300);\n            });\n        });\n\n        /*\n        * Setup Wizard form submit\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-setup-submit-btn', function (e) {\n            e.preventDefault();\n            let submitBtn = $('.tf-setup-submit-btn.tf-admin-btn');\n            let form = $(this).closest('#tf-setup-wizard-form');\n            let step = $(this).closest('.tf-setup-step-container').data('step');\n            let skipSteps = form.find('input[name=\"tf-skip-steps\"]').val();\n\n            if($(this).hasClass('tf-admin-btn') && skipSteps.indexOf(step) !== -1) {\n                skipSteps = skipSteps.replace(step, '');\n                form.find('input[name=\"tf-skip-steps\"]').val(skipSteps);\n            }\n\n            let formData = new FormData(form[0]);\n            formData.append('action', 'tf_setup_wizard_submit');\n\n            $.ajax({\n                url: tf_setup_wizard.ajaxurl,\n                type: 'POST',\n                data: formData,\n                processData: false,\n                contentType: false,\n                beforeSend: function () {\n                    submitBtn.addClass('tf-btn-loading');\n                },\n                success: function (response) {\n                    let data = JSON.parse(response);\n                    submitBtn.removeClass('tf-btn-loading');\n                    if (data.success) {\n                        window.location.href = data.redirect_url;\n                    }\n                },\n                error: function (error) {\n                    submitBtn.removeClass('tf-btn-loading');\n                    console.log(error);\n                }\n            });\n        });\n\n    });\n\n})(jQuery);\n\n//# sourceURL=webpack://tourfic/./sass/admin/js/setup-wizard.js?")},"./sass/admin/js/tf-options.js":()=>{eval("(function ($) {\r\n    'use strict';\r\n    $(document).ready(function () {\r\n\r\n        // Create an instance of Notyf\r\n        const notyf = new Notyf({\r\n            ripple: true,\r\n            duration: 3000,\r\n            dismissable: true,\r\n            position: {\r\n                x: 'right',\r\n                y: 'bottom',\r\n            },\r\n        });\r\n\r\n        /*\r\n        * window url on change tab click\r\n        * @author: Foysal\r\n        */\r\n        $(window).on('hashchange load', function () {\r\n            let hash = window.location.hash;\r\n            let query = window.location.search;\r\n            let slug = hash.replace('#tab=', '');\r\n\r\n            if (hash) {\r\n                let selectedTab = $('.tf-tablinks[data-tab=\"' + slug + '\"]'),\r\n                    parentDiv = selectedTab.closest('.tf-admin-tab-item');\r\n\r\n                selectedTab.trigger('click');\r\n                parentDiv.trigger('click');\r\n            }\r\n\r\n            if (query.indexOf('dashboard') > -1) {\r\n                let submenu = $(\"#toplevel_page_tf_settings\").find(\".wp-submenu\");\r\n                submenu.find(\"a\").filter(function (a, e) {\r\n                    return e.href.indexOf(query) > -1;\r\n                }).parent().addClass(\"current\");\r\n            }\r\n        });\r\n\r\n        /*\r\n        * Tab click\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-tablinks', function (e) {\r\n            e.preventDefault();\r\n            let firstTabId,\r\n                $this = $(this),\r\n                parentDiv = $this.closest('.tf-admin-tab-item'),\r\n                parentTabId = parentDiv.children('.tf-tablinks').attr('data-tab'),\r\n                tabcontent = $('.tf-tab-content'),\r\n                tablinks = $('.tf-tablinks');\r\n\r\n            tabcontent.hide();\r\n            tablinks.removeClass('active');\r\n\r\n            let tabId = $this.attr('data-tab');\r\n            $('#' + tabId).css('display', 'flex');\r\n\r\n            if ($this.next().hasClass('tf-submenu')) {\r\n                firstTabId = parentDiv.find('.tf-submenu li:first-child .tf-tablinks').data('tab');\r\n            }\r\n\r\n            if (firstTabId === tabId) {\r\n                parentDiv.find('.tf-submenu li:first-child .tf-tablinks').addClass('active');\r\n            } else {\r\n                $this.addClass('active');\r\n            }\r\n            // url hash update\r\n            window.location.hash = '#tab=' + tabId;\r\n\r\n            $(\".tf-admin-tab\").removeClass('active');\r\n\r\n            let submenu = $(\"#toplevel_page_tf_settings\").find(\".wp-submenu\");\r\n            submenu.find(\"a\").filter(function (a, e) {\r\n                let slug = e.hash.replace('#tab=', '');\r\n                return tabId === slug || parentTabId === slug;\r\n            }).parent().addClass(\"current\").siblings().removeClass(\"current\")\r\n        });\r\n\r\n        /*\r\n        * Submenu toggle\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-admin-tab-item', function (e) {\r\n            e.preventDefault();\r\n            let $this = $(this);\r\n\r\n            $this.addClass('open');\r\n            $this.children('ul').slideDown();\r\n            $this.siblings('.tf-admin-tab-item').children('ul').slideUp();\r\n            $this.siblings('.tf-admin-tab-item').removeClass('open');\r\n            $this.siblings('.tf-admin-tab-item').find('li').removeClass('open');\r\n            $this.siblings('.tf-admin-tab-item').find('ul').slideUp();\r\n        });\r\n\r\n        /*\r\n        * Each date field initialize flatpickr\r\n        * @author: Foysal\r\n        */\r\n        const tfDateInt = dateSelector => {\r\n            $(dateSelector).each(function () {\r\n                let $this = $(this),\r\n                    dateField = $this.find('input.flatpickr'),\r\n                    format = dateField.data('format'),\r\n                    multiple = dateField.data('multiple');\r\n\r\n                if (dateField.length === 2) {\r\n                    let startDate = $this.find('.tf-date-from input.flatpickr').flatpickr({\r\n                        dateFormat: format,\r\n                        onChange: function (selectedDates, dateStr, instance) {\r\n                            endDate.set('minDate', dateStr);\r\n                        }\r\n                    });\r\n                    let endDate = $this.find('.tf-date-to input.flatpickr').flatpickr({\r\n                        dateFormat: format,\r\n                        onChange: function (selectedDates, dateStr, instance) {\r\n                            startDate.set('maxDate', dateStr);\r\n                        }\r\n                    });\r\n                } else {\r\n                    dateField.flatpickr({\r\n                        dateFormat: format,\r\n                        mode: multiple ? 'multiple' : 'single',\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        tfDateInt('.tf-field-date');\r\n\r\n        /*\r\n        * Each time field initialize flatpickr\r\n        * @author: Foysal\r\n        */\r\n        const tfTimeInt = timeSelector => {\r\n            $(timeSelector).each(function () {\r\n                let $this = $(this),\r\n                    timeField = $this.find('input.flatpickr'),\r\n                    format = timeField.data('format');\r\n\r\n                timeField.flatpickr({\r\n                    enableTime: true,\r\n                    noCalendar: true,\r\n                    dateFormat: format,\r\n                });\r\n            });\r\n        }\r\n        tfTimeInt('.tf-field-time');\r\n\r\n\r\n        /*\r\n        * Each color field initialize wpColorPicker\r\n        * @author: Foysal\r\n        */\r\n        const tfColorInt = colorSelector => {\r\n            $(colorSelector).each(function () {\r\n                let $this = $(this),\r\n                    colorField = $this.find('input.tf-color');\r\n\r\n                colorField.wpColorPicker();\r\n            });\r\n        }\r\n        tfColorInt('.tf-field-color');\r\n\r\n        /*\r\n        * Custom modal\r\n        * @author: Foysal\r\n        */\r\n        TF_dependency();\r\n\r\n        function TF_dependency() {\r\n            $('.tf-tab-content, .tf-taxonomy-metabox').each(function () {\r\n                var $this = $(this);\r\n                $this.find('[data-controller]').each(function () {\r\n                    var $tffields = $(this);\r\n                    if ($tffields.length) {\r\n                        // alert($tffields.length);\r\n                        var normal_ruleset = $.tf_deps.createRuleset(),\r\n                            global_ruleset = $.tf_deps.createRuleset(),\r\n                            normal_depends = [],\r\n                            global_depends = [];\r\n\r\n                        $tffields.each(function () {\r\n\r\n                            var $field = $(this),\r\n                                controllers = $field.data('controller').split('|'),\r\n                                conditions = $field.data('condition').split('|'),\r\n                                values = $field.data('value').toString().split('|'),\r\n                                is_global = $field.data('depend-global') ? true : false,\r\n                                ruleset = normal_ruleset;\r\n\r\n                            $.each(controllers, function (index, depend_id) {\r\n\r\n                                var value = values[index] || '',\r\n                                    condition = conditions[index] || conditions[0];\r\n\r\n                                ruleset = ruleset.createRule($this.find('[data-depend-id=\"' + depend_id + '\"]'), condition, value);\r\n\r\n                                ruleset.include($field);\r\n\r\n                                if (is_global) {\r\n                                    global_depends.push(depend_id);\r\n                                } else {\r\n                                    normal_depends.push(depend_id);\r\n                                }\r\n\r\n                            });\r\n\r\n                        });\r\n\r\n                        if (normal_depends.length) {\r\n                            $.tf_deps.enable($this, normal_ruleset, normal_depends);\r\n                        }\r\n\r\n                        if (global_depends.length) {\r\n                            $.tf_deps.enable(TF.vars.$body, global_ruleset, global_depends);\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n            });\r\n        }\r\n\r\n\r\n        /*\r\n        * Custom modal\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-modal-btn', function (e) {\r\n            e.preventDefault();\r\n            let $this = $(this),\r\n                modal = $('#tf-icon-modal');\r\n\r\n            if (modal.length > 0 && modal.hasClass('tf-modal-show')) {\r\n                modal.removeClass('tf-modal-show');\r\n                $('body').removeClass('tf-modal-open');\r\n            } else {\r\n                modal.addClass('tf-modal-show');\r\n                $('body').addClass('tf-modal-open');\r\n            }\r\n        });\r\n        $(document).on(\"click\", '.tf-modal-close', function () {\r\n            $('.tf-modal').removeClass('tf-modal-show');\r\n            $('body').removeClass('tf-modal-open');\r\n        });\r\n        $(document).on('click', function (event) {\r\n            if (!$(event.target).closest(\".tf-modal-content,.tf-modal-btn\").length) {\r\n                $(\"body\").removeClass(\"tf-modal-open\");\r\n                $(\".tf-modal\").removeClass(\"tf-modal-show\");\r\n            }\r\n        });\r\n\r\n        /*\r\n        * Icon tab\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-icon-tab', function (e) {\r\n            e.preventDefault();\r\n            let $this = $(this),\r\n                tab = $this.data('tab');\r\n\r\n            $('.tf-icon-tab').removeClass('active');\r\n            $this.addClass('active');\r\n\r\n            $('#' + tab).addClass('active').siblings().removeClass('active');\r\n        });\r\n\r\n        /*\r\n        * Icon select\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-icon-select .tf-admin-btn, .tf-icon-select .tf-icon-preview', function (e) {\r\n            e.preventDefault();\r\n            let btn = $(this);\r\n\r\n            let fieldId = btn.closest('.tf-icon-select').attr('id');\r\n            $('#tf-icon-modal').data('icon-field', fieldId);\r\n        });\r\n\r\n        /*\r\n        * Icon select\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-icon-list li', function (e) {\r\n            e.preventDefault();\r\n            let $this = $(this);\r\n\r\n            $('.tf-icon-list li').removeClass('active');\r\n            $this.addClass('active');\r\n\r\n            //remove disabled class\r\n            $('.tf-icon-insert').removeClass('disabled');\r\n        });\r\n\r\n        /*\r\n        * Icon insert\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-icon-insert', function (e) {\r\n            e.preventDefault();\r\n            let $this = $(this),\r\n                fieldId = $('#tf-icon-modal').data('icon-field'),\r\n                field = $('#' + fieldId),\r\n                preview = field.find('.tf-icon-preview'),\r\n                icon = $('.tf-icon-list li.active').data('icon');\r\n\r\n            if (icon) {\r\n                preview.removeClass('tf-hide');\r\n                field.find('.tf-icon-preview-wrap i').attr('class', icon);\r\n                field.find('.tf-icon-value').val(icon).trigger('change');\r\n\r\n                //Close modal\r\n                $('.tf-modal').removeClass('tf-modal-show');\r\n                $('body').removeClass('tf-modal-open');\r\n            }\r\n        })\r\n\r\n        /*\r\n        * Icon search\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('change keyup', '.tf-icon-search-input', function () {\r\n\r\n            let searchVal = $(this).val(),\r\n                $icons = $('#tf-icon-modal').find('.tf-icon-list li');\r\n\r\n            $icons.each(function () {\r\n\r\n                var $this = $(this);\r\n\r\n                if ($this.data('icon').search(new RegExp(searchVal, 'i')) < 0) {\r\n                    $this.hide();\r\n                } else {\r\n                    $this.show();\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        /*\r\n        * Icon remove\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('click', '.tf-icon-preview .remove-icon', function (e) {\r\n            e.preventDefault();\r\n            let $this = $(this),\r\n                preview = $this.closest('.tf-icon-preview'),\r\n                iconSelect = $this.closest('.tf-icon-select'),\r\n                iconLi = $('#tf-icon-modal').find('.tf-icon-list li');\r\n\r\n            preview.addClass('tf-hide');\r\n            iconSelect.find('.tf-icon-preview-wrap i').attr('class', '');\r\n            iconSelect.find('.tf-icon-value').val('').trigger('change');\r\n\r\n            //remove active class\r\n            iconLi.removeClass('active');\r\n        })\r\n\r\n\r\n        /*\r\n        * Options ajax save\r\n        * @author: Foysal\r\n        */\r\n        $(document).on('submit', '.tf-option-form.tf-ajax-save', function (e) {\r\n            e.preventDefault();\r\n            let $this = $(this),\r\n                submitBtn = $this.find('.tf-submit-btn'),\r\n                data = new FormData(this);\r\n                var fontsfile = $('.itinerary-fonts-file').prop(\"files\");\r\n                if(typeof fontsfile !== \"undefined\"){\r\n                    for(var i=0; i<fontsfile.length; i++) {\r\n                    data.append('file[]', fontsfile[i]);\r\n                    }\r\n                }\r\n            data.append('action', 'tf_options_save');\r\n\r\n            $.ajax({\r\n                url: tf_options.ajax_url,\r\n                type: 'POST',\r\n                data: data,\r\n                processData: false,\r\n                contentType: false,\r\n                beforeSend: function () {\r\n                    submitBtn.addClass('tf-btn-loading');\r\n                },\r\n                success: function (response) {\r\n                    let obj = JSON.parse(response);\r\n                    if (obj.status === 'success') {\r\n                        notyf.success(obj.message);\r\n                    } else {\r\n                        notyf.error(obj.message);\r\n                    }\r\n                    submitBtn.removeClass('tf-btn-loading');\r\n\r\n                },\r\n                error: function (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n        * Each select2 field initialize select2\r\n        * @author: Foysal, Sydur\r\n        */\r\n        const tfSelect2Int = select2Selector => {\r\n            let $this = select2Selector,\r\n                id = $this.attr('id'),\r\n                placeholder = $this.data('placeholder');\r\n\r\n            $('#' + id + '').select2({\r\n                placeholder: placeholder,\r\n                allowClear: true,\r\n            });\r\n        }\r\n\r\n        $('select.tf-select2').each(function () {\r\n            var $this = $(this);\r\n            tfSelect2Int($this);\r\n        });\r\n\r\n\r\n        /*\r\n        * Options WP editor\r\n        * @author: Sydur\r\n        */\r\n        function TF_wp_editor($id) {\r\n            wp.editor.initialize($id, {\r\n                tinymce: {\r\n                    wpautop: true,\r\n                    plugins: 'charmap colorpicker hr lists paste tabfocus textcolor fullscreen wordpress wpautoresize wpeditimage wpemoji wpgallery wplink wptextpattern',\r\n                    toolbar1: 'formatselect,bold,italic,bullist,numlist,blockquote,alignleft,aligncenter,alignright,link,wp_more,spellchecker,fullscreen,wp_adv,listbuttons',\r\n                    toolbar2: 'styleselect,strikethrough,hr,forecolor,pastetext,removeformat,charmap,outdent,indent,undo,redo,wp_help',\r\n                    //   textarea_rows : 20\r\n                },\r\n                quicktags: {buttons: 'strong,em,link,block,del,ins,img,ul,ol,li,code,more,close'},\r\n                mediaButtons: false,\r\n            });\r\n        }\r\n\r\n        $('textarea.wp_editor').each(function () {\r\n            let $id = $(this).attr('id');\r\n            TF_wp_editor($id);\r\n        });\r\n\r\n\r\n        /*\r\n        * Add New Repeater Item\r\n        * @author: Sydur\r\n        */\r\n        $(document).on('click', '.tf-repeater-icon-add', function () {\r\n            var $this = $(this);\r\n            var $this_parent = $this.parent().parent();\r\n            var id = $(this).attr(\"data-repeater-id\");\r\n            var max = $(this).attr(\"data-repeater-max\");\r\n            var add_value = $this_parent.find('.tf-single-repeater-clone-' + id + ' .tf-single-repeater-' + id + '').clone();\r\n            var count = $this_parent.find('.tf-repeater-wrap-' + id + ' .tf-single-repeater-' + id + '').length;\r\n            var parent_field = add_value.find(':input[name=\"tf_parent_field\"]').val();\r\n            var current_field = add_value.find(':input[name=\"tf_current_field\"]').val();\r\n\r\n            $this_parent.find('.tf-repeater-wrap .tf-field-notice-inner').remove();\r\n            // Chacked maximum repeater\r\n            if (max != '' && count >= max) {\r\n                $this_parent.find('.tf-repeater-wrap').append('<div class=\"tf-field-notice-inner tf-notice-danger\" style=\"display: block;\">You have reached limit in free version. Please subscribe to Pro for unlimited access</div>');\r\n                return false;\r\n            }\r\n\r\n            // Repeater Count Add Value\r\n            add_value.find(':input[name=\"tf_repeater_count\"]').val(count);\r\n\r\n            // Repeater Room Unique ID\r\n            var room_uniqueid = add_value.find('.unique-id input');\r\n            if (typeof room_uniqueid !== \"undefined\") {\r\n                add_value.find('.unique-id input').val(new Date().valueOf() + count);\r\n            }\r\n            let repeatDateField = add_value.find('.tf-field-date');\r\n            if (repeatDateField.length > 0) {\r\n                tfDateInt(repeatDateField);\r\n            }\r\n\r\n            let repeatTimeField = add_value.find('.tf-field-time');\r\n            if (repeatTimeField.length > 0) {\r\n                tfTimeInt(repeatTimeField);\r\n            }\r\n\r\n            let repeatColorField = add_value.find('.tf-field-color');\r\n            if (repeatColorField.length > 0) {\r\n                tfColorInt(repeatColorField);\r\n            }\r\n\r\n            if (parent_field == '') {\r\n                // Update  repeater name And id\r\n                add_value.find(':input').each(function () {\r\n                    this.name = this.name.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\r\n                    this.id = this.id.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\r\n                });\r\n                var update_paren = add_value.find('.tf-repeater input[name=\"tf_parent_field\"]').val();\r\n                if (typeof update_paren !== \"undefined\") {\r\n                    var update_paren = update_paren.replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\r\n                }\r\n                add_value.find('.tf-repeater input[name=\"tf_parent_field\"]').val(update_paren);\r\n\r\n            } else {\r\n                // Update  repeater name And id\r\n                var update_paren = add_value.find(':input[name=\"tf_parent_field\"]').val();\r\n                add_value.find(':input').each(function () {\r\n                    this.name = this.name.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\r\n                    this.id = this.id.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\r\n                });\r\n            }\r\n            // Update Repeaterr label\r\n            add_value.find('label').each(function () {\r\n                var for_value = $(this).attr(\"for\");\r\n                if (typeof for_value !== \"undefined\") {\r\n                    for_value = for_value.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\r\n                    $(this).attr(\"for\", for_value);\r\n                }\r\n            });\r\n            // Update Icon select id\r\n            add_value.find('.tf-icon-select').each(function (index) {\r\n                var icon_id = $(this).attr(\"id\");\r\n                if (typeof icon_id !== \"undefined\") {\r\n                    icon_id = icon_id + index + count;\r\n                    $(this).attr(\"id\", icon_id)\r\n\r\n                }\r\n            });\r\n            // Update Data depend id\r\n            add_value.find('[data-depend-id]').each(function () {\r\n                var data_depend_id = $(this).attr(\"data-depend-id\");\r\n                if (typeof data_depend_id !== \"undefined\") {\r\n                    data_depend_id = data_depend_id.replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\r\n                    $(this).attr(\"data-depend-id\", data_depend_id);\r\n                }\r\n            });\r\n            // Update Data Controller\r\n            add_value.find('[data-controller]').each(function () {\r\n                var data_controller = $(this).attr(\"data-controller\");\r\n                if (typeof data_controller !== \"undefined\") {\r\n                    data_controller = data_controller.replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\r\n                    $(this).attr(\"data-controller\", data_controller);\r\n                }\r\n            });\r\n\r\n             // Replace Old editor\r\n             add_value.find('.wp-editor-wrap').each(function () {\r\n                var textarea = $(this).find('.tf_wp_editor').show();\r\n                // Get content of a specific editor:\r\n                var tf_editor_ex_data = $('#'+textarea.attr('id')+'').val();\r\n                if(tf_editor_ex_data && typeof tf_editor_ex_data !== \"undefined\"){\r\n                    var textarea_content = tinymce.get(textarea.attr('id')).getContent();\r\n                }else{\r\n                    var textarea_content = '';\r\n                }\r\n                textarea.val(textarea_content);\r\n                $(this).closest('.tf-field-textarea').append(textarea);\r\n                $(this).remove();\r\n            });\r\n\r\n            // Update Data Append value\r\n            var append = $this_parent.find('.tf-repeater-wrap-' + id + '');\r\n\r\n            add_value.appendTo(append).show();\r\n\r\n            // replace new editor\r\n            add_value.find('textarea.parent_wp_editor').each(function () {\r\n                var count =  Math.random().toString(36).substring(3,9) + 1 ; \r\n                this.id = this.id.replace('' + current_field + '__00', '' + current_field + '__' + count + '');\r\n                var parent_repeater_id = $(this).attr('id');\r\n                TF_wp_editor(parent_repeater_id);\r\n            });\r\n\r\n            // replace new Select 2\r\n            add_value.find('select.tf-select2-parent').each(function () {\r\n                this.id = this.id.replace('' + current_field + '__00', '' + current_field + '__' + count + '');\r\n                var parent_repeater_id = $(this).attr('id');\r\n                var $this = $(this);\r\n                tfSelect2Int($this);\r\n            });\r\n            \r\n            // repeater dependency repeater\r\n            TF_dependency();\r\n        });\r\n\r\n        // Repeater Delete Value\r\n        $(document).on('click', '.tf-repeater-icon-delete', function () {\r\n            var max = $(this).attr(\"data-repeater-max\");\r\n            var $this_parent = $(this).closest('.tf-repeater-wrap');\r\n            var count = $this_parent.find('.tf-single-repeater').length;\r\n            // Chacked maximum repeater\r\n\r\n            if (confirm(\"Are you sure to delete this item?\")) {\r\n                $this_parent.find('.tf-field-notice-inner').remove();\r\n                $(this).closest('.tf-single-repeater').remove();\r\n            }\r\n            return false;\r\n        });\r\n\r\n        /*\r\n        * Clone Repeater Item\r\n        * @author: Sydur\r\n        */\r\n        $(document).on('click', '.tf-repeater-icon-clone', function () {\r\n            var $this_parent = $(this).closest('.tf-repeater-wrap');\r\n            let clone_value = $(this).closest('.tf-single-repeater').clone();\r\n            var max = $(this).attr(\"data-repeater-max\");\r\n            var parent_field = clone_value.find('input[name=\"tf_parent_field\"]').val();\r\n            var current_field = clone_value.find('input[name=\"tf_current_field\"]').val();\r\n            var repeater_count = clone_value.find('input[name=\"tf_repeater_count\"]').val();\r\n            var count = $this_parent.find('.tf-single-repeater-' + current_field + '').length;\r\n\r\n\r\n            $this_parent.find('.tf-field-notice-inner').remove();\r\n            // Chacked maximum repeater\r\n            if (max != '' && count >= max) {\r\n                $this_parent.append('<div class=\"tf-field-notice-inner tf-notice-danger\" style=\"display: block;\">You have reached limit in free version. Please subscribe to Pro for unlimited access</div>');\r\n                return false;\r\n            }\r\n\r\n            // Repeater Room Unique ID\r\n            var room_uniqueid = clone_value.find('.unique-id input');\r\n            if (typeof room_uniqueid !== \"undefined\") {\r\n                clone_value.find('.unique-id input').val(new Date().valueOf() + count);\r\n            }\r\n\r\n            let repeatDateField = clone_value.find('.tf-field-date');\r\n\r\n            if (repeatDateField.length > 0) {\r\n                tfDateInt(repeatDateField);\r\n            }\r\n\r\n            let repeatTimeField = clone_value.find('.tf-field-time');\r\n            if (repeatTimeField.length > 0) {\r\n                tfTimeInt(repeatTimeField);\r\n            }\r\n\r\n            let repeatColorField = clone_value.find('.tf-field-color');\r\n            if (repeatColorField.length > 0) {\r\n                tfColorInt(repeatColorField);\r\n            }\r\n            if (parent_field == '') {\r\n                // Replace input id and name\r\n                clone_value.find(':input').each(function () {\r\n                    this.name = this.name.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\r\n                    this.id = this.id.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\r\n                });\r\n                var update_paren = clone_value.find('.tf-repeater input[name=\"tf_parent_field\"]').val();\r\n                if (typeof update_paren !== \"undefined\") {\r\n                    var update_paren = update_paren.replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\r\n                }\r\n                clone_value.find('.tf-repeater input[name=\"tf_parent_field\"]').val(update_paren);\r\n\r\n            } else {\r\n                // Replace input id and name\r\n                clone_value.find(':input').each(function () {\r\n                    this.name = this.name.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\r\n                    this.id = this.id.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\r\n                });\r\n            }\r\n            clone_value.find('label').each(function () {\r\n                var for_value = $(this).attr(\"for\");\r\n                if (typeof for_value !== \"undefined\") {\r\n                    for_value = for_value.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\r\n                    var for_value = $(this).attr(\"for\", for_value);\r\n                }\r\n            });\r\n            // Update Icon select id\r\n            clone_value.find('.tf-icon-select').each(function (index) {\r\n                var icon_id = $(this).attr(\"id\");\r\n                if (typeof icon_id !== \"undefined\") {\r\n                    icon_id = icon_id + index + count;\r\n                    $(this).attr(\"id\", icon_id)\r\n\r\n                }\r\n            });\r\n            // Replace Data depend id ID\r\n            clone_value.find('[data-depend-id]').each(function () {\r\n                var data_depend_id = $(this).attr(\"data-depend-id\");\r\n                if (typeof data_depend_id !== \"undefined\") {\r\n                    data_depend_id = data_depend_id.replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\r\n                    $(this).attr(\"data-depend-id\", data_depend_id);\r\n                }\r\n            });\r\n            // Replace Data depend id ID\r\n            clone_value.find('[data-controller]').each(function () {\r\n                var data_controller = $(this).attr(\"data-controller\");\r\n                if (typeof data_controller !== \"undefined\") {\r\n                    data_controller = data_controller.replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\r\n                    $(this).attr(\"data-controller\", data_controller);\r\n                }\r\n            });\r\n            // Replace Data repeter Count id ID\r\n            clone_value.find('input[name=\"tf_repeater_count\"]').val(count)\r\n\r\n            // Replace Old editor\r\n            clone_value.find('.wp-editor-wrap').each(function () {\r\n                var textarea = $(this).find('.tf_wp_editor').show();\r\n                // Get content of a specific editor:\r\n                var tf_editor_ex_data = $('#'+textarea.attr('id')+'').val();\r\n                if(tf_editor_ex_data && typeof tf_editor_ex_data !== \"undefined\"){\r\n                    var textarea_content = tinymce.get(textarea.attr('id')).getContent();\r\n                }else{\r\n                    var textarea_content = '';\r\n                }\r\n                textarea.val(textarea_content);\r\n                $(this).closest('.tf-field-textarea').append(textarea);\r\n                $(this).remove();\r\n            });\r\n\r\n            // Replace Old Select 2\r\n            clone_value.find('.tf-field-select2').each(function () {\r\n\r\n                var get_selected_value = $(this).find('select.tf-select-two').select2('val')\r\n                $(this).find('select.tf-select-two').removeAttr(\"data-select2-id aria-hidden tabindex\");\r\n                $(this).find('select.tf-select-two option').removeAttr(\"data-select2-id\");\r\n                $(this).find('select.tf-select-two').removeClass(\"select2-hidden-accessible\");\r\n                var select2 = $(this).find('select.tf-select-two').show();\r\n\r\n                select2.val(get_selected_value);\r\n                $(this).find('.tf-fieldset').append(select2);\r\n                $(this).find('span.select2-container').remove();\r\n            });\r\n\r\n            //Append Value\r\n            $(this).closest('.tf-repeater-wrap').append(clone_value).show();\r\n\r\n            // Clone Wp Editor\r\n            clone_value.find('textarea.parent_wp_editor, textarea.wp_editor').each(function () { \r\n                var count =  Math.random().toString(36).substring(3,9) + 1 ; \r\n                this.id = this.id.replace('' + current_field + '__' + repeater_count, '' + current_field + '__' + count + '');\r\n                var parent_repeater_id = $(this).attr('id');\r\n                TF_wp_editor(parent_repeater_id);\r\n            });\r\n\r\n            // Clone Select 2\r\n            clone_value.find('select.tf-select2-parent, select.tf-select2').each(function () {\r\n                this.id = this.id.replace('' + current_field + '__' + repeater_count, '' + current_field + '__' + count + '');\r\n                var $this = $(this);\r\n                tfSelect2Int($this);\r\n            });\r\n\r\n            // Dependency value\r\n            TF_dependency();\r\n        });\r\n\r\n        // Repeater show hide\r\n        $(document).on('click', '.tf-repeater-title, .tf-repeater-icon-collapse', function () {\r\n            var tf_repater_fieldname = $(this).closest('.tf-single-repeater').find('input[name=tf_current_field]').val();\r\n            $(this).closest('.tf-single-repeater-'+tf_repater_fieldname+'').find('.tf-repeater-content-wrap').slideToggle();\r\n            $(this).closest('.tf-single-repeater-'+tf_repater_fieldname+'').children('.tf-repeater-content-wrap').toggleClass('hide');\r\n            if ($(this).closest('.tf-single-repeater-'+tf_repater_fieldname+'').children('.tf-repeater-content-wrap').hasClass('hide')== true) {\r\n                $(this).closest('.tf-single-repeater-'+tf_repater_fieldname+' .tf-repeater-header').children('.tf-repeater-icon-collapse').html('<i class=\"fa-solid fa-angle-down\"></i>');\r\n            } else {\r\n                $(this).closest('.tf-single-repeater-'+tf_repater_fieldname+' .tf-repeater-header').children('.tf-repeater-icon-collapse').html('<i class=\"fa-solid fa-angle-up\"></i>');\r\n            }\r\n        });\r\n\r\n        // Repeater Drag and  show\r\n        $(\".tf-repeater-wrap\").sortable({\r\n            handle: '.tf-repeater-icon-move',\r\n            start: function (event, ui) { // turn TinyMCE off while sorting (if not, it won't work when resorted)\r\n                var textareaID = $(ui.item).find('.tf_wp_editor').attr('id');\r\n\r\n            },\r\n            stop: function (event, ui) { // re-initialize TinyMCE when sort is completed\r\n                $(ui.item).find('.tf_wp_editor').each(function () {\r\n                    var textareaID = $(this).attr('id');\r\n                    tinyMCE.execCommand('mceRemoveEditor', false, textareaID);\r\n                    tinyMCE.execCommand('mceAddEditor', false, textareaID);\r\n                });\r\n\r\n                // $(this).find('.update-warning').show();\r\n            }\r\n        });\r\n\r\n\r\n        // TAB jquery\r\n        $(document).on('click', '.tf-tab-item', function () {\r\n            var $this = $(this);\r\n            var tab_id = $this.data('tab-id');\r\n            if ($this.parent().parent().find('.tf-tab-item-content').hasClass(\"show\") == true) {\r\n                $this.parent().parent().find('.tf-tab-item-content').removeClass('show');\r\n            }\r\n\r\n            $this.parent().find('.tf-tab-item').removeClass('show');\r\n\r\n            $this.addClass('show');\r\n            $this.parent().parent().find('.tf-tab-item-content[data-tab-id = ' + tab_id + ']').addClass('show');\r\n\r\n        });\r\n\r\n    });\r\n})(jQuery);\r\n\r\n\r\nfunction openTab(evt, tabName) {\r\n    evt.preventDefault();\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tf-tab-content\");\r\n    for (i = 0; i < tabcontent.length; i++) {\r\n        tabcontent[i].style.display = \"none\";\r\n    }\r\n    tablinks = document.getElementsByClassName(\"tf-tablinks\");\r\n    for (i = 0; i < tablinks.length; i++) {\r\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n    }\r\n    document.getElementById(tabName).style.display = \"block\";\r\n    evt.target.className += \" active\";\r\n    jQuery(\".tf-admin-tab\").removeClass('active');\r\n}\r\n\r\nvar frame, gframe;\r\n(function ($) {\r\n    // Single Image remove\r\n    $(document).on(\"click\", \".tf-image-close\", function (e) {\r\n        e.preventDefault();\r\n        $this = $(this);\r\n        var fieldname = $(this).attr(\"tf-field-name\");\r\n        var tf_preview_class = fieldname.replace(/[.[\\]_-]/g, '_');\r\n\r\n        $this.parent().parent().find('input').val(''); \r\n        $this.parent().html('');\r\n\r\n    });\r\n\r\n    // Gallery Image remove\r\n    $(document).on(\"click\", \".tf-gallery-remove\", function (e) {\r\n        e.preventDefault();\r\n        $this = $(this);\r\n        var fieldname = $(this).attr(\"tf-field-name\");\r\n        var tf_preview_class = fieldname.replace(/[.[\\]_-]/g, '_');\r\n\r\n        $this.parent().parent().find('input').val('');\r\n        $this.parent().parent().find('.tf-fieldset-gallery-preview').html('');\r\n        $('a.tf-gallery-edit, a.tf-gallery-remove').css(\"display\", \"none\");\r\n\r\n    });\r\n\r\n    $(document).ready(function () {\r\n\r\n        // Single Image Upload\r\n\r\n        $('body').on('click', '.tf-media-upload', function (e) {\r\n            var $this = $(this); \r\n            var fieldname = $(this).attr(\"tf-field-name\");\r\n            var tf_preview_class = fieldname.replace(/[.[\\]_-]/g, '_');\r\n\r\n            frame = wp.media({\r\n                title: \"Select Image\",\r\n                button: {\r\n                    text: \"Insert Image\"\r\n                },\r\n                multiple: false\r\n            });\r\n            frame.on('select', function () {\r\n\r\n                var attachment = frame.state().get('selection').first().toJSON();\r\n                $this.parent().parent().find('input').val(attachment.url);\r\n                $this.parent().parent().find('.tf-fieldset-media-preview').html(`<div class=\"tf-image-close\" tf-field-name='${fieldname}'>✖</div><img src='${attachment.url}' />`);\r\n            });\r\n            frame.open();\r\n            return false;\r\n        });\r\n\r\n        // Gallery Image Upload\r\n\r\n        $('body').on('click', '.tf-gallery-upload, .tf-gallery-edit', function (e) {\r\n            var $this = $(this);\r\n            var fieldname = $(this).attr(\"tf-field-name\");\r\n            var tf_preview_class = fieldname.replace(/[.[\\]_-]/g, '_');\r\n            gframe = wp.media({\r\n                title: \"Select Gallery\",\r\n                button: {\r\n                    text: \"Insert Gallery\"\r\n                },\r\n                multiple: 'add'\r\n            });\r\n\r\n            gframe.on('open', function () {\r\n                var selection = gframe.state().get('selection');\r\n                var ids_value = $this.parent().parent().find('input').val();\r\n\r\n                if (ids_value.length > 0) {\r\n                    var ids = ids_value.split(',');\r\n\r\n                    ids.forEach(function (id) {\r\n                        attachment = wp.media.attachment(id);\r\n                        attachment.fetch();\r\n                        selection.add(attachment ? [attachment] : []);\r\n                    });\r\n                }\r\n            });\r\n\r\n            gframe.on('select', function () {\r\n                var image_ids = [];\r\n                var image_urls = [];\r\n                var attachments = gframe.state().get('selection').toJSON();\r\n                $this.parent().parent().find('.tf-fieldset-gallery-preview').html('');\r\n                for (i in attachments) {\r\n                    var attachment = attachments[i];\r\n                    image_ids.push(attachment.id);\r\n                    image_urls.push(attachment.url);\r\n                    $this.parent().parent().find('.tf-fieldset-gallery-preview').append(`<img src='${attachment.url}' />`);\r\n                }\r\n                $this.parent().parent().find('input').val(image_ids.join(\",\"));\r\n                $this.parent().find('a.tf-gallery-edit, a.tf-gallery-remove').css(\"display\", \"inline-block\");\r\n            });\r\n\r\n            gframe.open();\r\n            return false;\r\n        });\r\n\r\n\r\n\r\n        // Texonomy submit event\r\n        $('#addtag > .submit #submit').click(function () {\r\n            $(\".tf-fieldset-media-preview\").html(\"\");\r\n        });\r\n\r\n        // Switcher Value Changed\r\n        $(document).on(\"change\", \".tf-switch\", function (e) {\r\n            var $this = $(this);\r\n            if (this.checked) {\r\n                var $this = $(this);\r\n                var value = $this.val(1);\r\n            } else {\r\n                var $this = $(this);\r\n                var value = $this.val('');\r\n            }\r\n        });\r\n\r\n        if (tf_options.gmaps != \"googlemap\") {\r\n            $(\".tf-field-map\").each(function () {\r\n                var $this = $(this),\r\n                    $map = $this.find('.tf--map-osm'),\r\n                    $search_input = $this.find('.tf--map-search input'),\r\n                    $latitude = $this.find('.tf--latitude'),\r\n                    $longitude = $this.find('.tf--longitude'),\r\n                    $zoom = $this.find('.tf--zoom'),\r\n                    map_data = $map.data('map');\r\n\r\n                var mapInit = L.map($map.get(0), map_data);\r\n\r\n\r\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                }).addTo(mapInit);\r\n\r\n                var mapMarker = L.marker(map_data.center, {draggable: true}).addTo(mapInit);\r\n\r\n                var update_latlng = function (data) {\r\n                    $latitude.val(data.lat);\r\n                    $longitude.val(data.lng);\r\n                    $zoom.val(mapInit.getZoom());\r\n                };\r\n\r\n                mapInit.on('click', function (data) {\r\n                    mapMarker.setLatLng(data.latlng);\r\n                    update_latlng(data.latlng);\r\n                });\r\n\r\n                mapInit.on('zoom', function () {\r\n                    update_latlng(mapMarker.getLatLng());\r\n                });\r\n\r\n                mapMarker.on('drag', function () {\r\n                    update_latlng(mapMarker.getLatLng());\r\n                });\r\n\r\n                if (!$search_input.length) {\r\n                    $search_input = $('[data-depend-id=\"' + $this.find('.tf--address-field').data('address-field') + '\"]');\r\n                }\r\n\r\n                var cache = {};\r\n\r\n                $search_input.autocomplete({\r\n                    source: function (request, response) {\r\n\r\n                        var term = request.term;\r\n\r\n                        if (term in cache) {\r\n                            response(cache[term]);\r\n                            return;\r\n                        }\r\n\r\n                        $.get('https://nominatim.openstreetmap.org/search', {\r\n                            format: 'json',\r\n                            q: term,\r\n                        }, function (results) {\r\n\r\n                            var data;\r\n\r\n                            if (results.length) {\r\n                                data = results.map(function (item) {\r\n                                    return {\r\n                                        value: item.display_name,\r\n                                        label: item.display_name,\r\n                                        lat: item.lat,\r\n                                        lon: item.lon\r\n                                    };\r\n                                }, 'json');\r\n                            } else {\r\n                                data = [{\r\n                                    value: 'no-data',\r\n                                    label: 'No Results.'\r\n                                }];\r\n                            }\r\n\r\n                            cache[term] = data;\r\n                            response(data);\r\n\r\n                        });\r\n\r\n                    },\r\n                    select: function (event, ui) {\r\n\r\n                        if (ui.item.value === 'no-data') {\r\n                            return false;\r\n                        }\r\n\r\n                        var latLng = L.latLng(ui.item.lat, ui.item.lon);\r\n\r\n                        mapInit.panTo(latLng);\r\n                        mapMarker.setLatLng(latLng);\r\n                        update_latlng(latLng);\r\n\r\n                    },\r\n                    create: function (event, ui) {\r\n                        $(this).autocomplete('widget').addClass('tf-map-ui-autocomplate');\r\n                    }\r\n                });\r\n\r\n                var input_update_latlng = function () {\r\n\r\n                    var latLng = L.latLng($latitude.val(), $longitude.val());\r\n\r\n                    mapInit.panTo(latLng);\r\n                    mapMarker.setLatLng(latLng);\r\n\r\n                };\r\n\r\n                $latitude.on('change', input_update_latlng);\r\n                $longitude.on('change', input_update_latlng);\r\n\r\n                setInterval(function() {   \r\n                    mapInit.invalidateSize(); \r\n                }, 100);\r\n            });\r\n        }\r\n\r\n        $('.tf-mobile-tabs').click(function (e) {\r\n            e.preventDefault();\r\n            $(\".tf-admin-tab\").toggleClass('active');\r\n        }); \r\n\r\n\r\n        $('.tf-faq-title').click(function () {\r\n            var $this = $(this);\r\n            if (!$this.hasClass(\"active\")) {\r\n                $(\".tf-faq-desc\").slideUp(400);\r\n                $(\".tf-faq-title\").removeClass(\"active\");\r\n            }\r\n            $this.toggleClass(\"active\");\r\n            $this.next().slideToggle();\r\n        });\r\n    });\r\n\r\n\r\n})(jQuery);\r\n\r\n\r\n// Field Dependency\r\n\r\n(function ($) {\r\n\r\n    'use strict';\r\n\r\n    function Rule(controller, condition, value) {\r\n        this.init(controller, condition, value);\r\n    }\r\n\r\n    $.extend(Rule.prototype, {\r\n\r\n        init: function (controller, condition, value) {\r\n\r\n            this.controller = controller;\r\n            this.condition = condition;\r\n            this.value = value;\r\n            this.rules = [];\r\n            this.controls = [];\r\n\r\n        },\r\n\r\n        evalCondition: function (context, control, condition, val1, val2) {\r\n\r\n            if (condition == '==') {\r\n\r\n                return this.checkBoolean(val1) == this.checkBoolean(val2);\r\n\r\n            } else if (condition == '!=') {\r\n\r\n                return this.checkBoolean(val1) != this.checkBoolean(val2);\r\n\r\n            } else if (condition == '>=') {\r\n\r\n                return Number(val2) >= Number(val1);\r\n\r\n            } else if (condition == '<=') {\r\n\r\n                return Number(val2) <= Number(val1);\r\n\r\n            } else if (condition == '>') {\r\n\r\n                return Number(val2) > Number(val1);\r\n\r\n            } else if (condition == '<') {\r\n\r\n                return Number(val2) < Number(val1);\r\n\r\n            } else if (condition == '()') {\r\n\r\n                return window[val1](context, control, val2);\r\n\r\n            } else if (condition == 'any') {\r\n\r\n                if ($.isArray(val2)) {\r\n                    for (var i = val2.length - 1; i >= 0; i--) {\r\n                        if ($.inArray(val2[i], val1.split(',')) !== -1) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if ($.inArray(val2, val1.split(',')) !== -1) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n            } else if (condition == 'not-any') {\r\n\r\n                if ($.isArray(val2)) {\r\n                    for (var i = val2.length - 1; i >= 0; i--) {\r\n                        if ($.inArray(val2[i], val1.split(',')) == -1) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if ($.inArray(val2, val1.split(',')) == -1) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            return false;\r\n\r\n        },\r\n\r\n        checkBoolean: function (value) {\r\n\r\n            switch (value) {\r\n\r\n                case true:\r\n                case 'true':\r\n                case 1:\r\n                case '1':\r\n                    value = true;\r\n                    break;\r\n\r\n                case null:\r\n                case false:\r\n                case 'false':\r\n                case 0:\r\n                case '0':\r\n                    value = false;\r\n                    break;\r\n\r\n            }\r\n\r\n            return value;\r\n        },\r\n\r\n        checkCondition: function (context) {\r\n\r\n            if (!this.condition) {\r\n                return true;\r\n            }\r\n\r\n            var control = context.find(this.controller);\r\n\r\n            var control_value = this.getControlValue(context, control);\r\n\r\n            if (control_value === undefined) {\r\n                return false;\r\n            }\r\n\r\n            control_value = this.normalizeValue(control, this.value, control_value);\r\n\r\n            return this.evalCondition(context, control, this.condition, this.value, control_value);\r\n        },\r\n\r\n        normalizeValue: function (control, baseValue, control_value) {\r\n\r\n            if (typeof baseValue == 'number') {\r\n                return parseFloat(control_value);\r\n            }\r\n\r\n            return control_value;\r\n        },\r\n\r\n        getControlValue: function (context, control) {\r\n\r\n            if (control.length > 1 && (control.attr('type') == 'radio' || control.attr('type') == 'checkbox')) {\r\n\r\n                return control.filter(':checked').map(function () {\r\n                    return this.value;\r\n                }).get();\r\n\r\n            } else if (control.attr('type') == 'checkbox' || control.attr('type') == 'radio') {\r\n\r\n                return control.is(':checked');\r\n\r\n            }\r\n\r\n            return control.val();\r\n\r\n        },\r\n\r\n        createRule: function (controller, condition, value) {\r\n            var rule = new Rule(controller, condition, value);\r\n            this.rules.push(rule);\r\n            return rule;\r\n        },\r\n\r\n        include: function (input) {\r\n            this.controls.push(input);\r\n        },\r\n\r\n        applyRule: function (context, enforced) {\r\n\r\n            var result;\r\n\r\n            if (typeof (enforced) == 'undefined') {\r\n                result = this.checkCondition(context);\r\n            } else {\r\n                result = enforced;\r\n            }\r\n\r\n            var controls = $.map(this.controls, function (elem, idx) {\r\n                return context.find(elem);\r\n            });\r\n\r\n            if (result) {\r\n\r\n                $(controls).each(function () {\r\n                    $(this).removeClass('tf-depend-on');\r\n                });\r\n\r\n                $(this.rules).each(function () {\r\n                    this.applyRule(context);\r\n                });\r\n\r\n            } else {\r\n\r\n                $(controls).each(function () {\r\n                    $(this).addClass('tf-depend-on');\r\n                });\r\n\r\n                $(this.rules).each(function () {\r\n                    this.applyRule(context, false);\r\n                });\r\n\r\n            }\r\n        }\r\n    });\r\n\r\n    function Ruleset() {\r\n        this.rules = [];\r\n    };\r\n\r\n    $.extend(Ruleset.prototype, {\r\n\r\n        createRule: function (controller, condition, value) {\r\n            var rule = new Rule(controller, condition, value);\r\n            this.rules.push(rule);\r\n            return rule;\r\n        },\r\n\r\n        applyRules: function (context) {\r\n            $(this.rules).each(function () {\r\n                this.applyRule(context);\r\n            });\r\n        }\r\n    });\r\n\r\n    $.tf_deps = {\r\n\r\n        createRuleset: function () {\r\n            return new Ruleset();\r\n        },\r\n\r\n        enable: function (selection, ruleset, depends) {\r\n\r\n            selection.on('change keyup', function (elem) {\r\n\r\n                var depend_id = elem.target.getAttribute('data-depend-id') || elem.target.getAttribute('data-sub-depend-id');\r\n\r\n                if (depends.indexOf(depend_id) !== -1) {\r\n                    ruleset.applyRules(selection);\r\n                }\r\n\r\n            });\r\n\r\n            ruleset.applyRules(selection);\r\n\r\n            return true;\r\n        }\r\n    };\r\n\r\n})(jQuery);\r\n\r\n/*\r\n* Author @Jahid\r\n* Report Chart\r\n*/\r\n\r\n(function ($) {\r\n    $(document).ready(function () {\r\n        if(tf_options.tf_chart_enable==1){    \r\n            var ctx = document.getElementById('tf_months'); // node\r\n            var ctx = document.getElementById('tf_months').getContext('2d'); // 2d context\r\n            var ctx = $('#tf_months'); // jQuery instance\r\n            var ctx = 'tf_months'; // element id\r\n\r\n            var chart = new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\r\n                    // Information about the dataset\r\n                datasets: [{\r\n                        label : \"Completed Booking\",\r\n                        borderColor: '#003C79',\r\n                        tension: 0.1,\r\n                        data: tf_options.tf_complete_order,       \r\n                        fill: false\r\n                    },\r\n                    {\r\n                        label : \"Cancelled Booking\",\r\n                        borderColor: 'red',\r\n                        tension: 0.1,\r\n                        data: tf_options.tf_cancel_orders, \r\n                        fill: false\r\n                    }\r\n                ]\r\n                },\r\n\r\n                // Configuration options\r\n                options: {\r\n                layout: {\r\n                padding: 10,\r\n                },\r\n                    legend: {\r\n                        display: true\r\n                    },\r\n                    title: {\r\n                        display: true,\r\n                        text: \"\"\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        $(document).on('change', '#tf-month-report', function () {\r\n            var monthTarget = $(this).val();\r\n            if(monthTarget!=0){\r\n                $(\"#tf-report-loader\").addClass('show');\r\n                $('.tf-order-report').find('iframe').remove();\r\n                jQuery.ajax({\r\n                    type: 'post',\r\n                    url: tf_options.ajax_url,\r\n                    data: {\r\n                        action: 'tf_month_reports',\r\n                        month: monthTarget,\r\n                    },\r\n                    success: function (data) {\r\n                        var response = JSON.parse(data);\r\n                        var ctx = document.getElementById('tf_months'); // node\r\n                        var ctx = document.getElementById('tf_months').getContext('2d'); // 2d context\r\n                        var ctx = $('#tf_months'); // jQuery instance\r\n                        var ctx = 'tf_months'; // element id\r\n\r\n                        var chart = new Chart(ctx, {\r\n                            type: 'line',\r\n                            data: {\r\n                                labels: response.months_day_number,\r\n                                // Information about the dataset\r\n                            datasets: [{\r\n                                    label : \"Completed Booking\",\r\n                                    borderColor: '#003C79',\r\n                                    tension: 0.1,\r\n                                    data: response.tf_complete_orders,       \r\n                                    fill: false\r\n                                },\r\n                                {\r\n                                    label : \"Cancelled Booking\",\r\n                                    borderColor: 'red',\r\n                                    tension: 0.1,\r\n                                    data: response.tf_cancel_orders, \r\n                                    fill: false\r\n                                }\r\n                            ]\r\n                            },\r\n\r\n                            // Configuration options\r\n                            options: {\r\n                            layout: {\r\n                            padding: 10,\r\n                            },\r\n                                legend: {\r\n                                    display: true\r\n                                },\r\n                                title: {\r\n                                    display: true,\r\n                                    text: response.tf_search_month\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                        $(\"#tf-report-loader\").removeClass('show');\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    });\r\n})(jQuery);\n\n//# sourceURL=webpack://tourfic/./sass/admin/js/tf-options.js?")}};__webpack_modules__["./sass/admin/js/admin.js"](),__webpack_modules__["./sass/admin/js/required-taxonomies-gutenberg.js"](),__webpack_modules__["./sass/admin/js/required-taxonomies.js"](),__webpack_modules__["./sass/admin/js/setup-wizard.js"]();var __webpack_exports__={};__webpack_modules__["./sass/admin/js/tf-options.js"]()})();